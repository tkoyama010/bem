<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xmlns:ns1="https://launchpad.net/jessyink"
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   enable-background="new"
   width="1052.3622"
   height="744.09448"
   id="svg2"
   version="1.1"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="presentation.svg">
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.83913688"
     inkscape:cx="473.37754"
     inkscape:cy="254.31945"
     inkscape:document-units="px"
     inkscape:current-layer="layer2"
     showgrid="false"
     inkscape:window-width="1920"
     inkscape:window-height="1018"
     inkscape:window-x="0"
     inkscape:window-y="27"
     inkscape:window-maximized="1"
     showguides="true"
     inkscape:guide-bbox="true"
     inkscape:snap-page="false" />
  <defs
     id="defs4" />
  <metadata
     id="metadata7">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     style="display:none"
     transform="translate(0,-308.2677)"
     id="layer1"
     inkscape:groupmode="layer"
     inkscape:label="タイトル">
    <text
       sodipodi:linespacing="125%"
       id="text3004"
       y="561.16083"
       x="548.6264"
       style="font-size:72px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans"
       xml:space="preserve"><tspan
         y="561.16083"
         x="548.6264"
         id="tspan3006"
         sodipodi:role="line">変位入力による横方向に等方な</tspan><tspan
         id="tspan3008"
         y="651.16083"
         x="548.6264"
         sodipodi:role="line">成層半無限地盤の静的応答</tspan></text>
    <text
       transform="translate(0,308.2677)"
       sodipodi:linespacing="125%"
       id="text3023"
       y="401.23734"
       x="238.57143"
       style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
       xml:space="preserve"><tspan
         y="401.23734"
         x="238.57143"
         id="tspan3025"
         sodipodi:role="line">静的な場合における波数積分法</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text3027"
       y="919.50507"
       x="462.85715"
       style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
       xml:space="preserve"><tspan
         y="919.50507"
         x="462.85715"
         id="tspan3029"
         sodipodi:role="line">小山哲央</tspan></text>
  </g>
  <g
     style="display:inline;"
     inkscape:label="支配方程式"
     id="layer2"
     inkscape:groupmode="layer">
    <text
       sodipodi:linespacing="125%"
       id="text3048"
       y="100"
       x="500"
       style="font-size:72px;font-style:normal;font-weight:normal;text-align:center;line-height:125%;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans;font-stretch:normal;font-variant:normal;writing-mode:lr"
       xml:space="preserve"><tspan
         y="100"
         x="500"
         id="tspan3050"
         sodipodi:role="line">弾性体の支配方程式</tspan><tspan
         style="font-size:40px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:125%;writing-mode:lr-tb;text-anchor:middle;font-family:Sans;-inkscape-font-specification:Sans"
         id="tspan3052"
         y="150.03532"
         x="500"
         sodipodi:role="line">Hooke's Law</tspan></text>
    <g
       id="g3730"
       transform="translate(-100.1996,321.14369)">
      <g
         word-spacing="normal"
         letter-spacing="normal"
         font-size-adjust="none"
         font-stretch="normal"
         font-weight="normal"
         font-variant="normal"
         font-style="normal"
         stroke-miterlimit="10.433"
         xml:space="preserve"
         transform="matrix(1.0629921,0,0,-1.0629921,-186.02362,789.27165)"
         id="content"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;letter-spacing:normal;word-spacing:normal;text-anchor:start;fill:none;stroke:#000000;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10.43299961;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0"><path
           id="path3733"
           d="m 481.33,424.78 0.07,0 0.07,0 0.07,0 0.08,0 0.09,0 0.09,0.01 0.09,0 0.09,0.01 0.1,0.01 0.1,0.02 0.1,0.02 0.11,0.02 0.1,0.02 0.1,0.03 0.1,0.03 0.1,0.04 0.1,0.04 0.1,0.05 0.09,0.05 0.09,0.06 0.08,0.07 0.08,0.07 0.04,0.04 0.04,0.04 0.03,0.04 0.04,0.05 0.03,0.04 0.03,0.05 0.03,0.05 0.03,0.05 0.03,0.05 0.02,0.06 0.02,0.06 0.02,0.06 0.02,0.06 0.02,0.06 0.01,0.07 0.01,0.07 0.01,0.07 0,0.08 0.01,0.07 0,0.08 c 0,1.19 -1.05,1.19 -1.94,1.19 h -11.36 c -7.53,0 -13.06,-8.22 -13.06,-14.14 0,-4.39 2.94,-7.88 7.47,-7.88 l 0.06,1.1 c -2.45,0 -4.44,1.79 -4.44,5.37 0,1.5 0.6,5.59 2.35,8.53 2.09,3.44 5.08,4.13 6.76,4.13 4.19,0 4.6,-3.28 4.6,-4.83 0,-2.34 -1,-6.42 -2.69,-8.97 -1.95,-2.94 -4.64,-4.23 -6.58,-4.23 h 0 l -0.06,-1.1 c 5.89,0 12.51,6.03 12.51,13.71 0,0.84 0,3.23 -1.54,5.42 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3735"
           d="m 492.63,402.45 -0.03,-0.11 -0.04,-0.12 -0.04,-0.12 -0.05,-0.12 -0.06,-0.12 -0.05,-0.13 -0.07,-0.13 -0.06,-0.12 -0.08,-0.13 -0.07,-0.13 -0.08,-0.13 -0.09,-0.12 -0.08,-0.13 -0.1,-0.12 -0.1,-0.12 -0.1,-0.12 -0.1,-0.12 -0.11,-0.11 -0.12,-0.1 -0.11,-0.1 -0.13,-0.1 -0.12,-0.09 -0.13,-0.08 -0.14,-0.08 -0.13,-0.07 -0.15,-0.06 -0.14,-0.05 -0.15,-0.05 -0.15,-0.04 -0.16,-0.02 -0.16,-0.02 -0.16,0 c -0.11,0 -1.16,0 -1.89,0.48 1.43,0.45 1.53,1.72 1.53,1.92 0,0.77 -0.6,1.3 -1.39,1.3 -0.97,0 -1.99,-0.84 -1.99,-2.14 0,-1.74 1.96,-2.53 3.66,-2.53 1.61,0 3.03,1 3.91,2.47 0.82,-1.85 2.75,-2.47 4.14,-2.47 4.01,0 6.14,4.34 6.14,5.33 0,0.45 -0.46,0.45 -0.57,0.45 -0.48,0 -0.51,-0.17 -0.65,-0.59 -0.74,-2.41 -2.83,-4.22 -4.78,-4.22 -1.39,0 -2.13,0.93 -2.13,2.26 0,0.91 0.85,4.08 1.81,7.96 0.71,2.67 2.27,3.54 3.43,3.54 0.06,0 1.14,0 1.87,-0.48 -1.11,-0.31 -1.53,-1.3 -1.53,-1.92 0,-0.77 0.59,-1.29 1.39,-1.29 0.81,0 1.95,0.66 1.95,2.13 0,1.95 -2.23,2.53 -3.62,2.53 -1.74,0 -3.14,-1.14 -3.91,-2.47 -0.62,1.44 -2.22,2.47 -4.17,2.47 -3.91,0 -6.14,-4.28 -6.14,-5.33 0,-0.45 0.5,-0.45 0.59,-0.45 0.46,0 0.49,0.14 0.68,0.59 0.85,2.72 3.06,4.22 4.76,4.22 1.16,0 2.09,-0.62 2.09,-2.29 0,-0.71 -0.42,-2.44 -0.73,-3.63 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3737"
           d="m 525.9,411.9 0,0.02 0.01,0.03 0,0.02 0.01,0.02 0.01,0.02 0,0.02 0.01,0.04 0.01,0.03 0.01,0.03 0.01,0.04 0.01,0.03 0,0.02 0.01,0.03 0.01,0.03 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.03 0,0.03 0,0.04 0,0.03 0,0.02 0,0.02 0,0.02 0,0.02 c 0,0.69 -0.56,1.11 -1.15,1.11 -0.38,0 -1.05,-0.17 -1.42,-0.83 -0.11,-0.22 -0.39,-1.33 -0.56,-2.03 l -0.74,-2.89 c -0.2,-0.83 -1.28,-5.22 -1.39,-5.61 -0.03,0 -1.56,-3.03 -4.28,-3.03 -2.38,0 -2.38,2.26 -2.38,2.89 0,1.89 0.8,4.08 1.85,6.76 0.42,1.11 0.59,1.53 0.59,2.13 0,1.67 -1.42,2.95 -3.31,2.95 -3.52,0 -5.08,-4.73 -5.08,-5.33 0,-0.45 0.48,-0.45 0.59,-0.45 0.49,0 0.52,0.17 0.63,0.56 0.87,2.89 2.37,4.25 3.77,4.25 0.59,0 0.85,-0.39 0.85,-1.22 0,-0.79 -0.31,-1.56 -0.48,-2.01 -1.67,-4.25 -2.02,-5.55 -2.02,-7.08 0,-0.59 0,-2.23 1.36,-3.34 1.08,-0.91 2.55,-1.08 3.49,-1.08 1.39,0 2.64,0.51 3.8,1.56 -0.46,-1.92 -0.85,-3.37 -2.3,-5.12 -0.94,-1.08 -2.35,-2.22 -4.19,-2.22 -0.23,0 -1.87,0 -2.61,1.14 1.88,0.2 1.88,1.89 1.88,1.92 0,1.11 -1,1.31 -1.36,1.31 -0.86,0 -2.02,-0.69 -2.02,-2.3 0,-1.76 1.67,-3.06 4.14,-3.06 3.53,0 7.81,2.72 8.89,7.08 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3739"
           d="m 578.68,422.5 0.14,0 0.14,0 0.14,0 0.08,0.01 0.07,0 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.02 0.06,0.02 0.06,0.02 0.07,0.02 0.05,0.03 0.06,0.03 0.05,0.04 0.05,0.03 0.05,0.05 0.04,0.04 0.04,0.05 0.02,0.03 0.02,0.03 0.01,0.02 0.02,0.03 0.01,0.03 0.02,0.04 0.01,0.03 0.01,0.04 0.01,0.03 0.01,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0,0.04 0,0.05 c 0,1 -0.95,1 -1.64,1 h -29.84 c -0.7,0 -1.64,0 -1.64,-1 0,-0.98 0.94,-0.98 1.69,-0.98 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3741"
           d="m 578.72,412.82 0.07,0 0.06,0 0.14,0.01 0.14,0 0.07,0 0.07,0.01 0.07,0.01 0.07,0 0.07,0.01 0.06,0.02 0.07,0.01 0.07,0.02 0.06,0.02 0.06,0.02 0.06,0.02 0.06,0.03 0.05,0.03 0.06,0.04 0.04,0.04 0.05,0.04 0.04,0.05 0.02,0.02 0.02,0.03 0.02,0.02 0.02,0.03 0.02,0.03 0.01,0.03 0.01,0.03 0.02,0.03 0.01,0.04 0.01,0.03 0.01,0.04 0.01,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0,0.05 0,0.04 c 0,1 -0.95,1 -1.68,1 h -29.75 c -0.75,0 -1.69,0 -1.69,-1 0,-1 0.94,-1 1.64,-1 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3743"
           d="m 603.32,410.04 5.28,5.13 c 7.77,6.87 10.77,9.56 10.77,14.54 0,5.69 -4.48,9.68 -10.56,9.68 -5.64,0 -9.33,-4.6 -9.33,-9.03 0,-2.79 2.5,-2.79 2.64,-2.79 0.86,0 2.6,0.6 2.6,2.64 0,1.3 -0.9,2.6 -2.65,2.6 -0.39,0 -0.5,0 -0.64,-0.05 1.14,3.24 3.83,5.08 6.72,5.08 4.53,0 6.69,-4.05 6.69,-8.13 0,-3.98 -2.5,-7.92 -5.24,-11.01 l -9.56,-10.66 c -0.56,-0.54 -0.56,-0.64 -0.56,-1.84 h 18.49 l 1.4,8.67 h -1.25 c -0.25,-1.5 -0.59,-3.69 -1.09,-4.44 -0.36,-0.39 -3.64,-0.39 -4.74,-0.39 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3745"
           d="m 630.88,411.93 -0.19,-0.3 -0.19,-0.29 -0.19,-0.28 -0.18,-0.26 -0.19,-0.25 -0.19,-0.23 -0.18,-0.22 -0.19,-0.21 -0.18,-0.2 -0.19,-0.18 -0.19,-0.17 -0.18,-0.16 -0.19,-0.15 -0.19,-0.14 -0.19,-0.13 -0.19,-0.12 -0.19,-0.11 -0.19,-0.1 -0.19,-0.09 -0.19,-0.09 -0.19,-0.07 -0.19,-0.07 -0.2,-0.07 -0.19,-0.05 -0.2,-0.05 -0.19,-0.04 -0.2,-0.04 -0.2,-0.03 -0.4,-0.05 -0.41,-0.03 c -0.61,-0.05 -1.05,-0.05 -1.05,-1 0,-0.3 0.25,-0.55 0.64,-0.55 1.35,0 2.89,0.16 4.28,0.16 1.65,0 3.4,-0.16 4.99,-0.16 0.3,0 0.95,0 0.95,0.95 0,0.55 -0.45,0.6 -0.79,0.6 -1.16,0.09 -2.35,0.5 -2.35,1.73 0,0.61 0.3,1.16 0.69,1.84 l 3.8,6.39 h 12.5 l -0.14,1.54 h -11.43 l 9.83,16.45 1.6,-16.45 0.14,-1.54 c 0.11,-1.04 0.79,-7.82 0.79,-8.32 0,-1.5 -2.59,-1.64 -3.58,-1.64 -0.7,0 -1.2,0 -1.2,-1 0,-0.55 0.6,-0.55 0.7,-0.55 2.04,0 4.19,0.16 6.22,0.16 1.25,0 4.39,-0.16 5.64,-0.16 0.3,0 0.9,0 0.9,1 0,0.55 -0.5,0.55 -1.15,0.55 -3.09,0 -3.09,0.34 -3.25,1.79 l -3.03,31.13 c -0.11,1 -0.11,1.2 -0.95,1.2 -0.8,0 -0.98,-0.34 -1.3,-0.84 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3747"
           d="m 664.52,410.15 0,0.53 0.01,0.53 0.02,0.52 0.02,0.51 0.04,0.51 0.05,0.49 0.06,0.49 0.08,0.48 0.09,0.47 0.11,0.46 0.13,0.46 0.14,0.44 0.08,0.22 0.09,0.21 0.09,0.22 0.1,0.21 0.1,0.21 0.11,0.2 0.12,0.2 0.12,0.2 c 1.19,1.9 3.06,3.18 5.3,3.18 1.04,0 2.43,-0.28 3.14,-1.22 -0.88,-0.06 -1.61,-0.66 -1.61,-1.67 0,-0.88 0.59,-1.64 1.64,-1.64 1.04,0 1.67,0.7 1.67,1.7 0,2.03 -1.47,3.84 -4.92,3.84 -5.02,0 -10.14,-4.61 -10.14,-12.09 0,-9.03 4.25,-11.75 8.09,-11.75 4.25,0 7.94,3.25 7.94,7.81 0,4.42 -3.52,7.7 -7.6,7.7 l -0.17,-0.98 c 1.61,0 2.69,-0.63 3.55,-1.91 0.84,-1.32 0.87,-2.79 0.87,-4.81 0,-1.98 0,-3.45 -0.93,-4.81 -0.85,-1.22 -1.96,-1.88 -3.66,-1.88 h 0 c -1.75,0 -3.11,1 -3.84,2.55 -0.52,1.03 -0.8,2.78 -0.8,4.88 0,3.37 2.03,5.98 4.81,5.98 l 0.17,0.98 c -2.78,0 -4.31,-1.84 -5.07,-3.42 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3749"
           d="m 684.31,410.15 0.01,0.53 0.01,0.53 0.01,0.52 0.03,0.51 0.04,0.51 0.05,0.49 0.06,0.49 0.08,0.48 0.09,0.47 0.11,0.46 0.12,0.46 0.15,0.44 0.08,0.22 0.09,0.21 0.09,0.22 0.1,0.21 0.1,0.21 0.11,0.2 0.11,0.2 0.13,0.2 c 1.18,1.9 3.06,3.18 5.29,3.18 1.05,0 2.44,-0.28 3.14,-1.22 -0.87,-0.06 -1.61,-0.66 -1.61,-1.67 0,-0.88 0.6,-1.64 1.64,-1.64 1.05,0 1.68,0.7 1.68,1.7 0,2.03 -1.47,3.84 -4.93,3.84 -5.01,0 -10.14,-4.61 -10.14,-12.09 0,-9.03 4.25,-11.75 8.1,-11.75 4.25,0 7.93,3.25 7.93,7.81 0,4.42 -3.51,7.7 -7.59,7.7 l -0.17,-0.98 c 1.61,0 2.69,-0.63 3.55,-1.91 0.84,-1.32 0.87,-2.79 0.87,-4.81 0,-1.98 0,-3.45 -0.94,-4.81 -0.84,-1.22 -1.95,-1.88 -3.65,-1.88 h 0 c -1.75,0 -3.11,1 -3.85,2.55 -0.51,1.03 -0.79,2.78 -0.79,4.88 0,3.37 2.03,5.98 4.81,5.98 l 0.17,0.98 c -2.78,0 -4.31,-1.84 -5.08,-3.42 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3751"
           d="m 710.71,417.71 0.14,0.01 0.16,0 0.17,0 0.17,0 0.19,0.01 0.2,0 0.21,0.01 0.22,0.01 0.22,0.01 0.23,0.01 0.24,0.01 0.25,0.02 0.25,0.02 0.25,0.02 0.53,0.05 0.53,0.07 0.54,0.07 0.55,0.1 0.54,0.11 0.53,0.12 0.27,0.07 0.25,0.08 0.26,0.08 0.25,0.08 0.24,0.09 0.24,0.1 c 3.48,1.5 3.73,4.43 3.73,5.12 0,2.2 -1.89,4.23 -5.33,4.23 v -1.09 c 2.35,0 3.69,-1.44 3.69,-3.14 0,-5.17 -7.97,-5.17 -10.02,-5.17 h -2.04 c 1.95,7.56 7.08,8.31 8.37,8.31 v 1.09 c -5.53,0 -13.04,-4.82 -13.04,-13.54 0,-5.08 2.93,-9.02 7.81,-9.02 7.12,0 11.31,5.28 11.31,5.88 0,0.29 -0.3,0.65 -0.59,0.65 -0.25,0 -0.35,-0.11 -0.66,-0.5 -3.94,-4.93 -9.36,-4.93 -9.95,-4.93 -3.89,0 -4.35,4.18 -4.35,5.78 0,0.59 0.05,2.14 0.8,5.18 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3753"
           d="m 733.23,402.45 -0.03,-0.11 -0.04,-0.12 -0.05,-0.12 -0.05,-0.12 -0.05,-0.12 -0.06,-0.13 -0.06,-0.13 -0.07,-0.12 -0.07,-0.13 -0.07,-0.13 -0.08,-0.13 -0.09,-0.12 -0.09,-0.13 -0.09,-0.12 -0.1,-0.12 -0.1,-0.12 -0.1,-0.12 -0.11,-0.11 -0.12,-0.1 -0.12,-0.1 -0.12,-0.1 -0.12,-0.09 -0.13,-0.08 -0.14,-0.08 -0.14,-0.07 -0.14,-0.06 -0.14,-0.05 -0.15,-0.05 -0.15,-0.04 -0.16,-0.02 -0.16,-0.02 -0.16,0 c -0.12,0 -1.16,0 -1.9,0.48 1.44,0.45 1.53,1.72 1.53,1.92 0,0.77 -0.59,1.3 -1.38,1.3 -0.97,0 -1.99,-0.84 -1.99,-2.14 0,-1.74 1.95,-2.53 3.66,-2.53 1.61,0 3.03,1 3.9,2.47 0.83,-1.85 2.75,-2.47 4.14,-2.47 4.02,0 6.14,4.34 6.14,5.33 0,0.45 -0.45,0.45 -0.56,0.45 -0.48,0 -0.51,-0.17 -0.66,-0.59 -0.73,-2.41 -2.82,-4.22 -4.78,-4.22 -1.39,0 -2.12,0.93 -2.12,2.26 0,0.91 0.84,4.08 1.81,7.96 0.71,2.67 2.27,3.54 3.42,3.54 0.07,0 1.14,0 1.88,-0.48 -1.11,-0.31 -1.53,-1.3 -1.53,-1.92 0,-0.77 0.59,-1.29 1.39,-1.29 0.81,0 1.95,0.66 1.95,2.13 0,1.95 -2.23,2.53 -3.62,2.53 -1.74,0 -3.15,-1.14 -3.91,-2.47 -0.62,1.44 -2.22,2.47 -4.17,2.47 -3.91,0 -6.14,-4.28 -6.14,-5.33 0,-0.45 0.5,-0.45 0.59,-0.45 0.45,0 0.48,0.14 0.67,0.59 0.86,2.72 3.06,4.22 4.77,4.22 1.16,0 2.09,-0.62 2.09,-2.29 0,-0.71 -0.42,-2.44 -0.73,-3.63 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path3755"
           d="m 766.49,411.9 0.01,0.02 0,0.03 0.01,0.02 0.01,0.02 0,0.02 0.01,0.02 0.01,0.04 0.01,0.03 0.01,0.03 0.01,0.04 0,0.03 0.01,0.02 0.01,0.03 0,0.03 0.01,0.02 0,0.02 0.01,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0,0.02 0.01,0.02 0,0.03 0,0.03 0,0.04 0,0.03 0,0.02 0,0.02 0,0.02 0,0.02 c 0,0.69 -0.56,1.11 -1.15,1.11 -0.38,0 -1.05,-0.17 -1.43,-0.83 -0.1,-0.22 -0.39,-1.33 -0.56,-2.03 l -0.73,-2.89 c -0.21,-0.83 -1.28,-5.22 -1.39,-5.61 -0.03,0 -1.57,-3.03 -4.28,-3.03 -2.38,0 -2.38,2.26 -2.38,2.89 0,1.89 0.8,4.08 1.84,6.76 0.43,1.11 0.6,1.53 0.6,2.13 0,1.67 -1.42,2.95 -3.31,2.95 -3.52,0 -5.08,-4.73 -5.08,-5.33 0,-0.45 0.48,-0.45 0.59,-0.45 0.49,0 0.52,0.17 0.63,0.56 0.87,2.89 2.37,4.25 3.76,4.25 0.6,0 0.86,-0.39 0.86,-1.22 0,-0.79 -0.31,-1.56 -0.48,-2.01 -1.67,-4.25 -2.02,-5.55 -2.02,-7.08 0,-0.59 0,-2.23 1.36,-3.34 1.08,-0.91 2.55,-1.08 3.49,-1.08 1.39,0 2.64,0.51 3.79,1.56 -0.45,-1.92 -0.84,-3.37 -2.29,-5.12 -0.94,-1.08 -2.35,-2.22 -4.19,-2.22 -0.24,0 -1.88,0 -2.61,1.14 1.87,0.2 1.87,1.89 1.87,1.92 0,1.11 -1,1.31 -1.36,1.31 -0.86,0 -2.01,-0.69 -2.01,-2.3 0,-1.76 1.67,-3.06 4.14,-3.06 3.53,0 7.81,2.72 8.89,7.08 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /></g>    </g>
    <g
       style="display:inline"
       id="g3730-6"
       transform="translate(-100.1996,-128.85631)">
      <g
         id="g3973">
        <g
           id="g3975"
           transform="matrix(1.06299211429,0,0,-1.06299211429,-186.02362,789.27165)"
           xml:space="preserve"
           stroke="black"
           stroke-linecap="butt"
           stroke-linejoin="miter"
           stroke-miterlimit="10.433"
           stroke-dasharray="none"
           stroke-dashoffset="0"
           stroke-opacity="1"
           fill="none"
           fill-rule="evenodd"
           fill-opacity="1"
           font-style="normal"
           font-variant="normal"
           font-weight="normal"
           font-stretch="normal"
           font-size-adjust="none"
           letter-spacing="normal"
           word-spacing="normal"
           text-anchor="start"><path
             d="M481.33,424.78 L481.4,424.78 L481.47,424.78 L481.54,424.78 L481.62,424.78 L481.71,424.78 L481.8,424.79 L481.89,424.79 L481.98,424.8 L482.08,424.81 L482.18,424.83 L482.28,424.85 L482.39,424.87 L482.49,424.89 L482.59,424.92 L482.69,424.95 L482.79,424.99 L482.89,425.03 L482.99,425.08 L483.08,425.13 L483.17,425.19 L483.25,425.26 L483.33,425.33 L483.37,425.37 L483.41,425.41 L483.44,425.45 L483.48,425.5 L483.51,425.54 L483.54,425.59 L483.57,425.64 L483.6,425.69 L483.63,425.74 L483.65,425.8 L483.67,425.86 L483.69,425.92 L483.71,425.98 L483.73,426.04 L483.74,426.11 L483.75,426.18 L483.76,426.25 L483.76,426.33 L483.77,426.4 L483.77,426.48 C483.77,427.67,482.72,427.67,481.83,427.67 H470.47 C462.94,427.67,457.41,419.45,457.41,413.53 C457.41,409.14,460.35,405.65,464.88,405.65 L464.94,406.75 C462.49,406.75,460.5,408.54,460.5,412.12 C460.5,413.62,461.1,417.71,462.85,420.65 C464.94,424.09,467.93,424.78,469.61,424.78 C473.8,424.78,474.21,421.5,474.21,419.95 C474.21,417.61,473.21,413.53,471.52,410.98 C469.57,408.04,466.88,406.75,464.94,406.75 H464.94 L464.88,405.65 C470.77,405.65,477.39,411.68,477.39,419.36 C477.39,420.2,477.39,422.59,475.85,424.78 Z "
             stroke-width="0"
             fill="black"
             id="path3977" /><path
             d="M492.63,402.45 L492.6,402.34 L492.56,402.22 L492.52,402.1 L492.47,401.98 L492.41,401.86 L492.36,401.73 L492.29,401.6 L492.23,401.48 L492.15,401.35 L492.08,401.22 L492,401.09 L491.91,400.97 L491.83,400.84 L491.73,400.72 L491.63,400.6 L491.53,400.48 L491.43,400.36 L491.32,400.25 L491.2,400.15 L491.09,400.05 L490.96,399.95 L490.84,399.86 L490.71,399.78 L490.57,399.7 L490.44,399.63 L490.29,399.57 L490.15,399.52 L490,399.47 L489.85,399.43 L489.69,399.41 L489.53,399.39 L489.37,399.39 C489.26,399.39,488.21,399.39,487.48,399.87 C488.91,400.32,489.01,401.59,489.01,401.79 C489.01,402.56,488.41,403.09,487.62,403.09 C486.65,403.09,485.63,402.25,485.63,400.95 C485.63,399.21,487.59,398.42,489.29,398.42 C490.9,398.42,492.32,399.42,493.2,400.89 C494.02,399.04,495.95,398.42,497.34,398.42 C501.35,398.42,503.48,402.76,503.48,403.75 C503.48,404.2,503.02,404.2,502.91,404.2 C502.43,404.2,502.4,404.03,502.26,403.61 C501.52,401.2,499.43,399.39,497.48,399.39 C496.09,399.39,495.35,400.32,495.35,401.65 C495.35,402.56,496.2,405.73,497.16,409.61 C497.87,412.28,499.43,413.15,500.59,413.15 C500.65,413.15,501.73,413.15,502.46,412.67 C501.35,412.36,500.93,411.37,500.93,410.75 C500.93,409.98,501.52,409.46,502.32,409.46 C503.13,409.46,504.27,410.12,504.27,411.59 C504.27,413.54,502.04,414.12,500.65,414.12 C498.91,414.12,497.51,412.98,496.74,411.65 C496.12,413.09,494.52,414.12,492.57,414.12 C488.66,414.12,486.43,409.84,486.43,408.79 C486.43,408.34,486.93,408.34,487.02,408.34 C487.48,408.34,487.51,408.48,487.7,408.93 C488.55,411.65,490.76,413.15,492.46,413.15 C493.62,413.15,494.55,412.53,494.55,410.86 C494.55,410.15,494.13,408.42,493.82,407.23 Z "
             stroke-width="0"
             fill="black"
             id="path3979" /><path
             d="M515.19,402.45 L515.16,402.34 L515.12,402.22 L515.07,402.1 L515.02,401.98 L514.97,401.86 L514.91,401.73 L514.85,401.6 L514.78,401.48 L514.71,401.35 L514.64,401.22 L514.56,401.09 L514.47,400.97 L514.38,400.84 L514.29,400.72 L514.19,400.6 L514.09,400.48 L513.99,400.36 L513.88,400.25 L513.76,400.15 L513.64,400.05 L513.52,399.95 L513.4,399.86 L513.27,399.78 L513.13,399.7 L512.99,399.63 L512.85,399.57 L512.71,399.52 L512.56,399.47 L512.41,399.43 L512.25,399.41 L512.09,399.39 L511.93,399.39 C511.82,399.39,510.77,399.39,510.04,399.87 C511.47,400.32,511.57,401.59,511.57,401.79 C511.57,402.56,510.97,403.09,510.18,403.09 C509.21,403.09,508.19,402.25,508.19,400.95 C508.19,399.21,510.14,398.42,511.85,398.42 C513.46,398.42,514.88,399.42,515.75,400.89 C516.58,399.04,518.5,398.42,519.9,398.42 C523.91,398.42,526.03,402.76,526.03,403.75 C526.03,404.2,525.58,404.2,525.47,404.2 C524.99,404.2,524.96,404.03,524.82,403.61 C524.08,401.2,521.99,399.39,520.03,399.39 C518.65,399.39,517.91,400.32,517.91,401.65 C517.91,402.56,518.75,405.73,519.72,409.61 C520.43,412.28,521.99,413.15,523.15,413.15 C523.21,413.15,524.28,413.15,525.02,412.67 C523.91,412.36,523.49,411.37,523.49,410.75 C523.49,409.98,524.08,409.46,524.88,409.46 C525.69,409.46,526.83,410.12,526.83,411.59 C526.83,413.54,524.6,414.12,523.21,414.12 C521.47,414.12,520.07,412.98,519.3,411.65 C518.68,413.09,517.08,414.12,515.13,414.12 C511.22,414.12,508.99,409.84,508.99,408.79 C508.99,408.34,509.49,408.34,509.58,408.34 C510.04,408.34,510.07,408.48,510.25,408.93 C511.11,411.65,513.32,413.15,515.02,413.15 C516.18,413.15,517.11,412.53,517.11,410.86 C517.11,410.15,516.69,408.42,516.38,407.23 Z "
             stroke-width="0"
             fill="black"
             id="path3981" /><path
             d="M579.75,422.5 L579.89,422.5 L580.04,422.5 L580.18,422.5 L580.25,422.51 L580.33,422.51 L580.4,422.52 L580.47,422.53 L580.54,422.54 L580.61,422.55 L580.68,422.56 L580.74,422.58 L580.81,422.6 L580.87,422.62 L580.93,422.64 L580.99,422.67 L581.05,422.7 L581.1,422.74 L581.15,422.77 L581.2,422.82 L581.24,422.86 L581.28,422.91 L581.3,422.94 L581.32,422.97 L581.33,422.99 L581.35,423.02 L581.36,423.05 L581.38,423.09 L581.39,423.12 L581.4,423.16 L581.41,423.19 L581.42,423.23 L581.42,423.27 L581.43,423.31 L581.43,423.35 L581.44,423.39 L581.44,423.43 L581.44,423.48 C581.44,424.48,580.49,424.48,579.8,424.48 H549.96 C549.25,424.48,548.32,424.48,548.32,423.48 C548.32,422.5,549.25,422.5,550,422.5 Z "
             stroke-width="0"
             fill="black"
             id="path3983" /><path
             d="M579.8,412.82 L579.87,412.82 L579.93,412.82 L580.07,412.83 L580.21,412.83 L580.28,412.83 L580.35,412.84 L580.42,412.85 L580.49,412.85 L580.55,412.86 L580.62,412.88 L580.69,412.89 L580.75,412.91 L580.82,412.93 L580.88,412.95 L580.94,412.97 L581,413 L581.05,413.03 L581.1,413.07 L581.15,413.11 L581.2,413.15 L581.24,413.2 L581.26,413.22 L581.28,413.25 L581.3,413.27 L581.32,413.3 L581.33,413.33 L581.35,413.36 L581.36,413.39 L581.38,413.42 L581.39,413.46 L581.4,413.49 L581.41,413.53 L581.42,413.57 L581.42,413.61 L581.43,413.65 L581.43,413.69 L581.44,413.73 L581.44,413.78 L581.44,413.82 C581.44,414.82,580.49,414.82,579.75,414.82 H550 C549.25,414.82,548.32,414.82,548.32,413.82 C548.32,412.82,549.25,412.82,549.96,412.82 Z "
             stroke-width="0"
             fill="black"
             id="path3985" /><path
             d="M607,411.93 L606.81,411.63 L606.63,411.34 L606.44,411.06 L606.25,410.8 L606.07,410.55 L605.88,410.32 L605.69,410.1 L605.51,409.89 L605.32,409.69 L605.13,409.51 L604.95,409.34 L604.76,409.18 L604.57,409.03 L604.38,408.89 L604.2,408.76 L604.01,408.64 L603.82,408.53 L603.63,408.43 L603.44,408.34 L603.25,408.25 L603.06,408.18 L602.86,408.11 L602.67,408.04 L602.47,407.99 L602.28,407.94 L602.08,407.9 L601.88,407.86 L601.68,407.83 L601.28,407.78 L600.88,407.75 C600.27,407.7,599.83,407.7,599.83,406.75 C599.83,406.45,600.08,406.2,600.47,406.2 C601.81,406.2,603.36,406.36,604.75,406.36 C606.39,406.36,608.14,406.2,609.73,406.2 C610.03,406.2,610.69,406.2,610.69,407.15 C610.69,407.7,610.23,407.75,609.89,407.75 C608.73,407.84,607.55,408.25,607.55,409.48 C607.55,410.09,607.84,410.64,608.23,411.32 L612.03,417.71 H624.53 L624.39,419.25 H612.97 L622.8,435.7 L624.39,419.25 L624.53,417.71 C624.64,416.67,625.33,409.89,625.33,409.39 C625.33,407.89,622.73,407.75,621.75,407.75 C621.05,407.75,620.55,407.75,620.55,406.75 C620.55,406.2,621.14,406.2,621.25,406.2 C623.28,406.2,625.44,406.36,627.47,406.36 C628.72,406.36,631.86,406.2,633.11,406.2 C633.41,406.2,634,406.2,634,407.2 C634,407.75,633.5,407.75,632.86,407.75 C629.77,407.75,629.77,408.09,629.61,409.54 L626.58,440.67 C626.47,441.67,626.47,441.87,625.62,441.87 C624.83,441.87,624.64,441.53,624.33,441.03 Z "
             stroke-width="0"
             fill="black"
             id="path3987" /><path
             d="M647.07,420.92 L647.07,420.96 L647.07,421 L647.07,421.05 L647.07,421.09 L647.07,421.12 L647.07,421.16 L647.07,421.2 L647.07,421.23 L647.06,421.27 L647.06,421.3 L647.06,421.33 L647.06,421.36 L647.06,421.39 L647.05,421.42 L647.05,421.45 L647.04,421.47 L647.04,421.5 L647.04,421.52 L647.03,421.55 L647.03,421.57 L647.01,421.61 L647,421.65 L646.98,421.68 L646.96,421.71 L646.94,421.74 L646.92,421.77 L646.89,421.79 L646.86,421.81 L646.82,421.83 L646.79,421.84 L646.75,421.85 L646.7,421.87 L646.68,421.87 L646.65,421.87 L646.63,421.88 L646.6,421.88 L646.57,421.89 L646.55,421.89 L646.52,421.89 L646.49,421.89 L646.45,421.89 L646.42,421.9 L646.39,421.9 L646.35,421.9 L646.31,421.9 L646.28,421.9 L646.24,421.9 L646.2,421.9 L646.16,421.9 L646.11,421.9 L646.07,421.9 L646.02,421.9 C643.79,419.7,640.63,419.67,639.2,419.67 V418.42 C640.04,418.42,642.34,418.42,644.24,419.39 V401.62 C644.24,400.46,644.24,400.01,640.76,400.01 H639.45 V398.76 C640.07,398.79,644.35,398.9,645.65,398.9 C646.73,398.9,651.12,398.79,651.88,398.76 V400.01 H650.55 C647.07,400.01,647.07,400.46,647.07,401.62 Z "
             stroke-width="0"
             fill="black"
             id="path3989" /><path
             d="M666.87,420.92 L666.87,420.96 L666.87,421 L666.87,421.05 L666.87,421.09 L666.87,421.12 L666.86,421.16 L666.86,421.2 L666.86,421.23 L666.86,421.27 L666.86,421.3 L666.86,421.33 L666.85,421.36 L666.85,421.39 L666.85,421.42 L666.85,421.45 L666.84,421.47 L666.84,421.5 L666.83,421.52 L666.83,421.55 L666.82,421.57 L666.81,421.61 L666.8,421.65 L666.78,421.68 L666.76,421.71 L666.74,421.74 L666.71,421.77 L666.69,421.79 L666.65,421.81 L666.62,421.83 L666.58,421.84 L666.54,421.85 L666.5,421.87 L666.48,421.87 L666.45,421.87 L666.43,421.88 L666.4,421.88 L666.37,421.89 L666.34,421.89 L666.31,421.89 L666.28,421.89 L666.25,421.89 L666.22,421.9 L666.18,421.9 L666.15,421.9 L666.11,421.9 L666.07,421.9 L666.03,421.9 L665.99,421.9 L665.95,421.9 L665.91,421.9 L665.87,421.9 L665.82,421.9 C663.59,419.7,660.43,419.67,658.99,419.67 V418.42 C659.84,418.42,662.13,418.42,664.04,419.39 V401.62 C664.04,400.46,664.04,400.01,660.55,400.01 H659.24 V398.76 C659.87,398.79,664.15,398.9,665.45,398.9 C666.52,398.9,670.91,398.79,671.68,398.76 V400.01 H670.35 C666.87,400.01,666.87,400.46,666.87,401.62 Z "
             stroke-width="0"
             fill="black"
             id="path3991" /><path
             d="M686.95,417.71 L687.1,417.72 L687.25,417.72 L687.42,417.72 L687.6,417.72 L687.78,417.73 L687.98,417.73 L688.19,417.74 L688.41,417.75 L688.63,417.76 L688.87,417.77 L689.1,417.78 L689.35,417.8 L689.6,417.82 L689.86,417.84 L690.38,417.89 L690.91,417.96 L691.46,418.03 L692,418.13 L692.54,418.24 L693.08,418.36 L693.34,418.43 L693.6,418.51 L693.85,418.59 L694.1,418.67 L694.34,418.76 L694.58,418.86 C698.06,420.36,698.31,423.29,698.31,423.98 C698.31,426.18,696.42,428.21,692.98,428.21 V427.12 C695.33,427.12,696.67,425.68,696.67,423.98 C696.67,418.81,688.7,418.81,686.66,418.81 H684.61 C686.56,426.37,691.69,427.12,692.98,427.12 V428.21 C687.45,428.21,679.94,423.39,679.94,414.67 C679.94,409.59,682.88,405.65,687.75,405.65 C694.88,405.65,699.06,410.93,699.06,411.53 C699.06,411.82,698.77,412.18,698.47,412.18 C698.22,412.18,698.12,412.07,697.81,411.68 C693.88,406.75,688.45,406.75,687.86,406.75 C683.97,406.75,683.52,410.93,683.52,412.53 C683.52,413.12,683.56,414.67,684.31,417.71 Z "
             stroke-width="0"
             fill="black"
             id="path3993" /><path
             d="M709.47,402.45 L709.44,402.34 L709.4,402.22 L709.36,402.1 L709.31,401.98 L709.25,401.86 L709.2,401.73 L709.13,401.6 L709.07,401.48 L708.99,401.35 L708.92,401.22 L708.84,401.09 L708.75,400.97 L708.67,400.84 L708.57,400.72 L708.47,400.6 L708.37,400.48 L708.27,400.36 L708.16,400.25 L708.04,400.15 L707.93,400.05 L707.8,399.95 L707.68,399.86 L707.55,399.78 L707.41,399.7 L707.28,399.63 L707.13,399.57 L706.99,399.52 L706.84,399.47 L706.69,399.43 L706.53,399.41 L706.37,399.39 L706.21,399.39 C706.1,399.39,705.05,399.39,704.32,399.87 C705.75,400.32,705.85,401.59,705.85,401.79 C705.85,402.56,705.25,403.09,704.46,403.09 C703.49,403.09,702.47,402.25,702.47,400.95 C702.47,399.21,704.43,398.42,706.13,398.42 C707.74,398.42,709.16,399.42,710.03,400.89 C710.86,399.04,712.78,398.42,714.18,398.42 C718.19,398.42,720.32,402.76,720.32,403.75 C720.32,404.2,719.86,404.2,719.75,404.2 C719.27,404.2,719.24,404.03,719.1,403.61 C718.36,401.2,716.27,399.39,714.32,399.39 C712.93,399.39,712.19,400.32,712.19,401.65 C712.19,402.56,713.03,405.73,714,409.61 C714.71,412.28,716.27,413.15,717.43,413.15 C717.49,413.15,718.57,413.15,719.3,412.67 C718.19,412.36,717.77,411.37,717.77,410.75 C717.77,409.98,718.36,409.46,719.16,409.46 C719.97,409.46,721.11,410.12,721.11,411.59 C721.11,413.54,718.88,414.12,717.49,414.12 C715.75,414.12,714.35,412.98,713.58,411.65 C712.96,413.09,711.36,414.12,709.41,414.12 C705.5,414.12,703.27,409.84,703.27,408.79 C703.27,408.34,703.77,408.34,703.86,408.34 C704.32,408.34,704.35,408.48,704.53,408.93 C705.4,411.65,707.6,413.15,709.3,413.15 C710.46,413.15,711.4,412.53,711.4,410.86 C711.4,410.15,710.97,408.42,710.66,407.23 Z "
             stroke-width="0"
             fill="black"
             id="path3995" /><path
             d="M732.03,402.45 L732,402.34 L731.96,402.22 L731.91,402.1 L731.86,401.98 L731.81,401.86 L731.75,401.73 L731.69,401.6 L731.62,401.48 L731.55,401.35 L731.48,401.22 L731.4,401.09 L731.31,400.97 L731.22,400.84 L731.13,400.72 L731.03,400.6 L730.93,400.48 L730.83,400.36 L730.72,400.25 L730.6,400.15 L730.48,400.05 L730.36,399.95 L730.24,399.86 L730.11,399.78 L729.97,399.7 L729.83,399.63 L729.69,399.57 L729.55,399.52 L729.4,399.47 L729.25,399.43 L729.09,399.41 L728.93,399.39 L728.77,399.39 C728.66,399.39,727.61,399.39,726.88,399.87 C728.31,400.32,728.41,401.59,728.41,401.79 C728.41,402.56,727.81,403.09,727.02,403.09 C726.05,403.09,725.03,402.25,725.03,400.95 C725.03,399.21,726.98,398.42,728.69,398.42 C730.3,398.42,731.72,399.42,732.59,400.89 C733.42,399.04,735.34,398.42,736.73,398.42 C740.75,398.42,742.88,402.76,742.88,403.75 C742.88,404.2,742.42,404.2,742.31,404.2 C741.83,404.2,741.8,404.03,741.66,403.61 C740.92,401.2,738.83,399.39,736.88,399.39 C735.48,399.39,734.75,400.32,734.75,401.65 C734.75,402.56,735.59,405.73,736.56,409.61 C737.27,412.28,738.83,413.15,739.98,413.15 C740.05,413.15,741.12,413.15,741.86,412.67 C740.75,412.36,740.33,411.37,740.33,410.75 C740.33,409.98,740.92,409.46,741.72,409.46 C742.53,409.46,743.67,410.12,743.67,411.59 C743.67,413.54,741.44,414.12,740.05,414.12 C738.31,414.12,736.91,412.98,736.14,411.65 C735.52,413.09,733.92,414.12,731.97,414.12 C728.06,414.12,725.83,409.84,725.83,408.79 C725.83,408.34,726.33,408.34,726.42,408.34 C726.88,408.34,726.91,408.48,727.09,408.93 C727.95,411.65,730.16,413.15,731.86,413.15 C733.02,413.15,733.95,412.53,733.95,410.86 C733.95,410.15,733.53,408.42,733.22,407.23 Z "
             stroke-width="0"
             fill="black"
             id="path3997" /><path
             d="M779.98,417.65 H793.88 C794.57,417.65,795.52,417.65,795.52,418.65 C795.52,419.65,794.57,419.65,793.88,419.65 H779.98 V433.61 C779.98,434.29,779.98,435.25,778.98,435.25 C777.99,435.25,777.99,434.29,777.99,433.61 V419.65 H764.04 C763.34,419.65,762.4,419.65,762.4,418.65 C762.4,417.65,763.34,417.65,764.04,417.65 H777.99 V403.71 C777.99,403.01,777.99,402.06,778.98,402.06 C779.98,402.06,779.98,403.01,779.98,403.71 Z "
             stroke-width="0"
             fill="black"
             id="path3999" /><path
             d="M818.32,411.93 L818.13,411.63 L817.95,411.34 L817.76,411.06 L817.57,410.8 L817.39,410.55 L817.2,410.32 L817.01,410.1 L816.83,409.89 L816.64,409.69 L816.45,409.51 L816.27,409.34 L816.08,409.18 L815.89,409.03 L815.7,408.89 L815.52,408.76 L815.33,408.64 L815.14,408.53 L814.95,408.43 L814.76,408.34 L814.57,408.25 L814.38,408.18 L814.18,408.11 L813.99,408.04 L813.79,407.99 L813.6,407.94 L813.4,407.9 L813.2,407.86 L813,407.83 L812.6,407.78 L812.2,407.75 C811.59,407.7,811.15,407.7,811.15,406.75 C811.15,406.45,811.4,406.2,811.79,406.2 C813.13,406.2,814.68,406.36,816.07,406.36 C817.71,406.36,819.46,406.2,821.05,406.2 C821.35,406.2,822.01,406.2,822.01,407.15 C822.01,407.7,821.55,407.75,821.21,407.75 C820.05,407.84,818.87,408.25,818.87,409.48 C818.87,410.09,819.16,410.64,819.55,411.32 L823.35,417.71 H835.85 L835.71,419.25 H824.29 L834.12,435.7 L835.71,419.25 L835.85,417.71 C835.96,416.67,836.65,409.89,836.65,409.39 C836.65,407.89,834.05,407.75,833.07,407.75 C832.37,407.75,831.87,407.75,831.87,406.75 C831.87,406.2,832.46,406.2,832.57,406.2 C834.6,406.2,836.76,406.36,838.79,406.36 C840.04,406.36,843.18,406.2,844.43,406.2 C844.73,406.2,845.32,406.2,845.32,407.2 C845.32,407.75,844.82,407.75,844.18,407.75 C841.09,407.75,841.09,408.09,840.93,409.54 L837.9,440.67 C837.79,441.67,837.79,441.87,836.95,441.87 C836.15,441.87,835.96,441.53,835.65,441.03 Z "
             stroke-width="0"
             fill="black"
             id="path4001" /><path
             d="M858.39,420.92 L858.39,420.96 L858.39,421 L858.39,421.05 L858.39,421.09 L858.39,421.12 L858.39,421.16 L858.39,421.2 L858.39,421.23 L858.38,421.27 L858.38,421.3 L858.38,421.33 L858.38,421.36 L858.38,421.39 L858.37,421.42 L858.37,421.45 L858.37,421.47 L858.36,421.5 L858.36,421.52 L858.35,421.55 L858.35,421.57 L858.33,421.61 L858.32,421.65 L858.3,421.68 L858.28,421.71 L858.26,421.74 L858.24,421.77 L858.21,421.79 L858.18,421.81 L858.14,421.83 L858.11,421.84 L858.07,421.85 L858.02,421.87 L858,421.87 L857.97,421.87 L857.95,421.88 L857.92,421.88 L857.9,421.89 L857.87,421.89 L857.84,421.89 L857.81,421.89 L857.77,421.89 L857.74,421.9 L857.71,421.9 L857.67,421.9 L857.63,421.9 L857.6,421.9 L857.56,421.9 L857.52,421.9 L857.48,421.9 L857.43,421.9 L857.39,421.9 L857.34,421.9 C855.11,419.7,851.95,419.67,850.52,419.67 V418.42 C851.36,418.42,853.66,418.42,855.56,419.39 V401.62 C855.56,400.46,855.56,400.01,852.08,400.01 H850.77 V398.76 C851.39,398.79,855.67,398.9,856.97,398.9 C858.05,398.9,862.44,398.79,863.2,398.76 V400.01 H861.88 C858.39,400.01,858.39,400.46,858.39,401.62 Z "
             stroke-width="0"
             fill="black"
             id="path4003" /><path
             d="M884.11,405.11 H882.92 C882.83,404.34,882.47,402.28,882.02,401.93 C881.75,401.73,879.06,401.73,878.58,401.73 H872.16 C875.81,404.96,877.03,405.93,879.12,407.57 C881.7,409.64,884.11,411.79,884.11,415.11 C884.11,419.32,880.42,421.9,875.95,421.9 C871.64,421.9,868.7,418.87,868.7,415.67 C868.7,413.89,870.2,413.71,870.56,413.71 C871.39,413.71,872.41,414.31,872.41,415.56 C872.41,416.18,872.16,417.4,870.34,417.4 C871.42,419.87,873.8,420.64,875.44,420.64 C878.92,420.64,880.73,417.93,880.73,415.11 C880.73,412.07,878.58,409.67,877.45,408.42 L869.06,400.12 C868.7,399.81,868.7,399.73,868.7,398.76 H883.06 Z "
             stroke-width="0"
             fill="black"
             id="path4005" /><path
             d="M898.27,417.71 L898.42,417.72 L898.57,417.72 L898.74,417.72 L898.92,417.72 L899.11,417.73 L899.3,417.73 L899.51,417.74 L899.73,417.75 L899.95,417.76 L900.19,417.77 L900.42,417.78 L900.67,417.8 L900.92,417.82 L901.18,417.84 L901.7,417.89 L902.23,417.96 L902.78,418.03 L903.32,418.13 L903.86,418.24 L904.4,418.36 L904.66,418.43 L904.92,418.51 L905.17,418.59 L905.42,418.67 L905.66,418.76 L905.9,418.86 C909.38,420.36,909.63,423.29,909.63,423.98 C909.63,426.18,907.74,428.21,904.3,428.21 V427.12 C906.65,427.12,907.99,425.68,907.99,423.98 C907.99,418.81,900.02,418.81,897.98,418.81 H895.93 C897.88,426.37,903.01,427.12,904.3,427.12 V428.21 C898.77,428.21,891.26,423.39,891.26,414.67 C891.26,409.59,894.2,405.65,899.07,405.65 C906.2,405.65,910.38,410.93,910.38,411.53 C910.38,411.82,910.09,412.18,909.79,412.18 C909.54,412.18,909.45,412.07,909.13,411.68 C905.2,406.75,899.77,406.75,899.18,406.75 C895.29,406.75,894.84,410.93,894.84,412.53 C894.84,413.12,894.88,414.67,895.63,417.71 Z "
             stroke-width="0"
             fill="black"
             id="path4007" /><path
             d="M931.5,411.9 L931.5,411.92 L931.51,411.95 L931.51,411.97 L931.52,411.99 L931.53,412.01 L931.53,412.03 L931.54,412.07 L931.55,412.1 L931.56,412.13 L931.57,412.17 L931.58,412.2 L931.58,412.22 L931.59,412.25 L931.6,412.28 L931.6,412.3 L931.61,412.32 L931.61,412.34 L931.62,412.36 L931.62,412.38 L931.62,412.4 L931.63,412.42 L931.63,412.44 L931.63,412.46 L931.63,412.49 L931.63,412.52 L931.64,412.56 L931.64,412.59 L931.64,412.61 L931.64,412.63 L931.64,412.65 L931.64,412.67 C931.64,413.36,931.07,413.78,930.48,413.78 C930.1,413.78,929.43,413.61,929.06,412.95 C928.95,412.73,928.67,411.62,928.5,410.92 L927.76,408.03 C927.56,407.2,926.48,402.81,926.37,402.42 C926.34,402.42,924.81,399.39,922.09,399.39 C919.72,399.39,919.72,401.65,919.72,402.28 C919.72,404.17,920.51,406.36,921.56,409.04 C921.98,410.15,922.15,410.57,922.15,411.17 C922.15,412.84,920.73,414.12,918.84,414.12 C915.32,414.12,913.76,409.39,913.76,408.79 C913.76,408.34,914.25,408.34,914.35,408.34 C914.84,408.34,914.87,408.51,914.98,408.9 C915.85,411.79,917.35,413.15,918.75,413.15 C919.34,413.15,919.6,412.76,919.6,411.93 C919.6,411.14,919.29,410.37,919.12,409.92 C917.45,405.67,917.1,404.37,917.1,402.84 C917.1,402.25,917.1,400.61,918.47,399.5 C919.54,398.59,921.01,398.42,921.95,398.42 C923.34,398.42,924.59,398.93,925.75,399.98 C925.29,398.06,924.9,396.61,923.45,394.86 C922.51,393.78,921.1,392.64,919.26,392.64 C919.03,392.64,917.39,392.64,916.65,393.78 C918.53,393.98,918.53,395.67,918.53,395.7 C918.53,396.81,917.53,397.01,917.17,397.01 C916.31,397.01,915.15,396.32,915.15,394.71 C915.15,392.95,916.82,391.65,919.29,391.65 C922.82,391.65,927.1,394.37,928.18,398.73 Z "
             stroke-width="0"
             fill="black"
             id="path4009" /><path
             d="M952.85,411.9 L952.86,411.92 L952.86,411.95 L952.87,411.97 L952.88,411.99 L952.88,412.01 L952.89,412.03 L952.9,412.07 L952.91,412.1 L952.92,412.13 L952.93,412.17 L952.93,412.2 L952.94,412.22 L952.95,412.25 L952.95,412.28 L952.96,412.3 L952.96,412.32 L952.97,412.34 L952.97,412.36 L952.97,412.38 L952.98,412.4 L952.98,412.42 L952.98,412.44 L952.98,412.46 L952.99,412.49 L952.99,412.52 L952.99,412.56 L952.99,412.59 L952.99,412.61 L952.99,412.63 L952.99,412.65 L952.99,412.67 C952.99,413.36,952.43,413.78,951.84,413.78 C951.46,413.78,950.79,413.61,950.41,412.95 C950.3,412.73,950.02,411.62,949.85,410.92 L949.12,408.03 C948.91,407.2,947.84,402.81,947.73,402.42 C947.7,402.42,946.16,399.39,943.45,399.39 C941.07,399.39,941.07,401.65,941.07,402.28 C941.07,404.17,941.87,406.36,942.91,409.04 C943.34,410.15,943.51,410.57,943.51,411.17 C943.51,412.84,942.09,414.12,940.2,414.12 C936.68,414.12,935.12,409.39,935.12,408.79 C935.12,408.34,935.6,408.34,935.71,408.34 C936.2,408.34,936.23,408.51,936.34,408.9 C937.21,411.79,938.71,413.15,940.1,413.15 C940.7,413.15,940.96,412.76,940.96,411.93 C940.96,411.14,940.65,410.37,940.48,409.92 C938.8,405.67,938.46,404.37,938.46,402.84 C938.46,402.25,938.46,400.61,939.82,399.5 C940.9,398.59,942.37,398.42,943.3,398.42 C944.7,398.42,945.95,398.93,947.1,399.98 C946.65,398.06,946.26,396.61,944.8,394.86 C943.87,393.78,942.46,392.64,940.62,392.64 C940.38,392.64,938.74,392.64,938.01,393.78 C939.88,393.98,939.88,395.67,939.88,395.7 C939.88,396.81,938.88,397.01,938.52,397.01 C937.66,397.01,936.51,396.32,936.51,394.71 C936.51,392.95,938.18,391.65,940.65,391.65 C944.18,391.65,948.46,394.37,949.54,398.73 Z "
             stroke-width="0"
             fill="black"
             id="path4011" /><path
             d="M989.02,417.65 H1002.9 C1003.6,417.65,1004.6,417.65,1004.6,418.65 C1004.6,419.65,1003.6,419.65,1002.9,419.65 H989.02 V433.61 C989.02,434.29,989.02,435.25,988.02,435.25 C987.03,435.25,987.03,434.29,987.03,433.61 V419.65 H973.08 C972.38,419.65,971.44,419.65,971.44,418.65 C971.44,417.65,972.38,417.65,973.08,417.65 H987.03 V403.71 C987.03,403.01,987.03,402.06,988.02,402.06 C989.02,402.06,989.02,403.01,989.02,403.71 Z "
             stroke-width="0"
             fill="black"
             id="path4013" /><path
             d="M1027.4,411.93 L1027.2,411.63 L1027,411.34 L1026.8,411.06 L1026.6,410.8 L1026.4,410.55 L1026.2,410.32 L1026.1,410.1 L1025.9,409.89 L1025.7,409.69 L1025.5,409.51 L1025.3,409.34 L1025.1,409.18 L1024.9,409.03 L1024.7,408.89 L1024.6,408.76 L1024.4,408.64 L1024.2,408.53 L1024,408.43 L1023.8,408.34 L1023.6,408.25 L1023.4,408.18 L1023.2,408.11 L1023,408.04 L1022.8,407.99 L1022.6,407.94 L1022.4,407.9 L1022.2,407.86 L1022,407.83 L1021.6,407.78 L1021.2,407.75 C1020.6,407.7,1020.2,407.7,1020.2,406.75 C1020.2,406.45,1020.4,406.2,1020.8,406.2 C1022.2,406.2,1023.7,406.36,1025.1,406.36 C1026.8,406.36,1028.5,406.2,1030.1,406.2 C1030.4,406.2,1031.1,406.2,1031.1,407.15 C1031.1,407.7,1030.6,407.75,1030.2,407.75 C1029.1,407.84,1027.9,408.25,1027.9,409.48 C1027.9,410.09,1028.2,410.64,1028.6,411.32 L1032.4,417.71 H1044.9 L1044.8,419.25 H1033.3 L1043.2,435.7 L1044.8,419.25 L1044.9,417.71 C1045,416.67,1045.7,409.89,1045.7,409.39 C1045.7,407.89,1043.1,407.75,1042.1,407.75 C1041.4,407.75,1040.9,407.75,1040.9,406.75 C1040.9,406.2,1041.5,406.2,1041.6,406.2 C1043.6,406.2,1045.8,406.36,1047.8,406.36 C1049.1,406.36,1052.2,406.2,1053.5,406.2 C1053.8,406.2,1054.4,406.2,1054.4,407.2 C1054.4,407.75,1053.9,407.75,1053.2,407.75 C1050.1,407.75,1050.1,408.09,1050,409.54 L1046.9,440.67 C1046.8,441.67,1046.8,441.87,1046,441.87 C1045.2,441.87,1045,441.53,1044.7,441.03 Z "
             stroke-width="0"
             fill="black"
             id="path4015" /><path
             d="M1067.4,420.92 L1067.4,420.96 L1067.4,421 L1067.4,421.05 L1067.4,421.09 L1067.4,421.12 L1067.4,421.16 L1067.4,421.2 L1067.4,421.23 L1067.4,421.27 L1067.4,421.3 L1067.4,421.33 L1067.4,421.36 L1067.4,421.39 L1067.4,421.42 L1067.4,421.45 L1067.4,421.47 L1067.4,421.5 L1067.4,421.52 L1067.4,421.55 L1067.4,421.57 L1067.4,421.61 L1067.4,421.65 L1067.3,421.68 L1067.3,421.71 L1067.3,421.74 L1067.3,421.77 L1067.3,421.79 L1067.2,421.81 L1067.2,421.83 L1067.1,421.84 L1067.1,421.85 L1067.1,421.87 L1067,421.87 L1067,421.87 L1067,421.88 L1067,421.88 L1066.9,421.89 L1066.9,421.89 L1066.9,421.89 L1066.8,421.89 L1066.8,421.89 L1066.8,421.9 L1066.8,421.9 L1066.7,421.9 L1066.7,421.9 L1066.6,421.9 L1066.6,421.9 L1066.6,421.9 L1066.5,421.9 L1066.5,421.9 L1066.4,421.9 L1066.4,421.9 C1064.2,419.7,1061,419.67,1059.6,419.67 V418.42 C1060.4,418.42,1062.7,418.42,1064.6,419.39 V401.62 C1064.6,400.46,1064.6,400.01,1061.1,400.01 H1059.8 V398.76 C1060.4,398.79,1064.7,398.9,1066,398.9 C1067.1,398.9,1071.5,398.79,1072.2,398.76 V400.01 H1070.9 C1067.4,400.01,1067.4,400.46,1067.4,401.62 Z "
             stroke-width="0"
             fill="black"
             id="path4017" /><path
             d="M1085.1,410.4 L1085.3,410.4 L1085.6,410.38 L1085.8,410.35 L1086.1,410.31 L1086.3,410.26 L1086.5,410.2 L1086.7,410.13 L1086.9,410.05 L1087.2,409.95 L1087.4,409.85 L1087.6,409.73 L1087.7,409.61 L1087.9,409.47 L1088.1,409.32 L1088.3,409.16 L1088.4,408.99 L1088.6,408.81 L1088.7,408.62 L1088.9,408.42 L1089,408.2 L1089.1,407.98 L1089.2,407.74 L1089.3,407.5 L1089.4,407.24 L1089.5,406.97 L1089.6,406.69 L1089.6,406.4 L1089.7,406.1 L1089.7,405.79 L1089.7,405.47 L1089.7,405.14 L1089.8,404.79 C1089.8,400.46,1087.2,399.18,1085.2,399.18 C1083.8,399.18,1080.8,399.56,1079.3,401.62 C1080.9,401.68,1081.3,402.84,1081.3,403.57 C1081.3,404.68,1080.5,405.48,1079.4,405.48 C1078.4,405.48,1077.4,404.89,1077.4,403.46 C1077.4,400.18,1081.1,398.06,1085.3,398.06 C1090.1,398.06,1093.5,401.31,1093.5,404.79 C1093.5,407.51,1091.2,410.23,1087.4,411.03 C1091.1,412.36,1092.4,414.96,1092.4,417.09 C1092.4,419.84,1089.2,421.9,1085.4,421.9 C1081.5,421.9,1078.5,420.01,1078.5,417.23 C1078.5,416.04,1079.3,415.39,1080.3,415.39 C1081.4,415.39,1082.1,416.18,1082.1,417.15 C1082.1,418.17,1081.4,418.9,1080.3,418.96 C1081.6,420.51,1083.9,420.89,1085.2,420.89 C1086.8,420.89,1089,420.12,1089,417.09 C1089,415.62,1088.5,414.03,1087.6,412.95 C1086.5,411.62,1085.5,411.54,1083.8,411.45 C1082.9,411.37,1082.8,411.37,1082.6,411.34 C1082.6,411.34,1082.3,411.28,1082.3,410.89 C1082.3,410.4,1082.6,410.4,1083.2,410.4 Z "
             stroke-width="0"
             fill="black"
             id="path4019" /><path
             d="M1107.3,417.71 L1107.5,417.72 L1107.6,417.72 L1107.8,417.72 L1108,417.72 L1108.1,417.73 L1108.3,417.73 L1108.6,417.74 L1108.8,417.75 L1109,417.76 L1109.2,417.77 L1109.5,417.78 L1109.7,417.8 L1110,417.82 L1110.2,417.84 L1110.7,417.89 L1111.3,417.96 L1111.8,418.03 L1112.4,418.13 L1112.9,418.24 L1113.4,418.36 L1113.7,418.43 L1114,418.51 L1114.2,418.59 L1114.5,418.67 L1114.7,418.76 L1114.9,418.86 C1118.4,420.36,1118.7,423.29,1118.7,423.98 C1118.7,426.18,1116.8,428.21,1113.3,428.21 V427.12 C1115.7,427.12,1117,425.68,1117,423.98 C1117,418.81,1109.1,418.81,1107,418.81 H1105 C1106.9,426.37,1112.1,427.12,1113.3,427.12 V428.21 C1107.8,428.21,1100.3,423.39,1100.3,414.67 C1100.3,409.59,1103.2,405.65,1108.1,405.65 C1115.2,405.65,1119.4,410.93,1119.4,411.53 C1119.4,411.82,1119.1,412.18,1118.8,412.18 C1118.6,412.18,1118.5,412.07,1118.2,411.68 C1114.2,406.75,1108.8,406.75,1108.2,406.75 C1104.3,406.75,1103.9,410.93,1103.9,412.53 C1103.9,413.12,1103.9,414.67,1104.7,417.71 Z "
             stroke-width="0"
             fill="black"
             id="path4021" /><path
             d="M1127,401.82 L1127.2,401.99 L1127.4,402.16 L1127.5,402.32 L1127.7,402.49 L1127.9,402.66 L1128,402.75 L1128.1,402.85 L1128.2,402.94 L1128.3,403.04 L1128.4,403.14 L1128.5,403.25 L1128.6,403.36 L1128.7,403.47 L1128.9,403.59 L1129,403.72 L1129.2,403.85 L1129.3,403.99 L1129.5,404.13 L1129.7,404.28 L1129.9,404.44 L1130.1,404.6 L1130.3,404.77 L1130.5,404.95 L1130.7,405.14 L1131,405.34 L1131.2,405.55 L1131.5,405.76 C1132.2,406.36,1134.8,408.45,1135.9,409.42 C1138,411.51,1139.3,413.29,1139.3,413.71 C1139.3,414.12,1138.9,414.12,1138.7,414.12 C1138.4,414.12,1138.3,414.06,1138.1,413.78 C1137.1,412.18,1136.3,411.65,1135.5,411.65 C1135.1,411.65,1134.5,411.68,1133.5,412.7 C1132.3,413.89,1131.6,414.12,1130.7,414.12 C1128,414.12,1126.1,411.09,1126.1,410.06 C1126.1,409.73,1126.4,409.64,1126.7,409.64 C1127.1,409.64,1127.2,409.73,1127.3,410.12 C1127.8,411.34,1129.8,411.42,1130.3,411.42 C1131.1,411.42,1132,411.2,1132.5,411.09 C1134.4,410.68,1134.7,410.68,1135.6,410.68 C1134.6,409.73,1134,409.11,1130.7,406.46 C1128,404.31,1127.1,403.43,1126.4,402.73 C1124.3,400.68,1123.3,399.15,1123.3,398.82 C1123.3,398.42,1123.7,398.42,1123.9,398.42 C1124.2,398.42,1124.3,398.48,1124.5,398.76 C1125.4,400.09,1126.5,400.89,1127.7,400.89 C1128.1,400.89,1128.6,400.86,1129.6,399.98 C1130.6,398.93,1131.3,398.42,1132.5,398.42 C1136.2,398.42,1138.5,402.64,1138.5,403.81 C1138.5,404.23,1138.1,404.26,1137.9,404.26 C1137.5,404.26,1137.4,404.09,1137.3,403.71 C1136.6,401.96,1134.6,401.14,1132.9,401.14 C1132.1,401.14,1131.2,401.31,1130.3,401.51 C1128.7,401.86,1128.4,401.86,1127.8,401.86 C1127.7,401.86,1127.2,401.86,1127,401.82 Z "
             stroke-width="0"
             fill="black"
             id="path4023" /><path
             d="M1147.5,401.82 L1147.7,401.99 L1147.9,402.16 L1148,402.32 L1148.2,402.49 L1148.4,402.66 L1148.5,402.75 L1148.6,402.85 L1148.7,402.94 L1148.8,403.04 L1148.9,403.14 L1149,403.25 L1149.1,403.36 L1149.3,403.47 L1149.4,403.59 L1149.5,403.72 L1149.7,403.85 L1149.9,403.99 L1150,404.13 L1150.2,404.28 L1150.4,404.44 L1150.6,404.6 L1150.8,404.77 L1151,404.95 L1151.2,405.14 L1151.5,405.34 L1151.8,405.55 L1152,405.76 C1152.8,406.36,1155.4,408.45,1156.4,409.42 C1158.5,411.51,1159.8,413.29,1159.8,413.71 C1159.8,414.12,1159.4,414.12,1159.2,414.12 C1158.9,414.12,1158.8,414.06,1158.7,413.78 C1157.6,412.18,1156.8,411.65,1156,411.65 C1155.6,411.65,1155.1,411.68,1154,412.7 C1152.8,413.89,1152.1,414.12,1151.3,414.12 C1148.5,414.12,1146.6,411.09,1146.6,410.06 C1146.6,409.73,1146.9,409.64,1147.2,409.64 C1147.6,409.64,1147.7,409.73,1147.8,410.12 C1148.3,411.34,1150.3,411.42,1150.8,411.42 C1151.7,411.42,1152.6,411.2,1153,411.09 C1155,410.68,1155.2,410.68,1156.1,410.68 C1155.2,409.73,1154.5,409.11,1151.2,406.46 C1148.5,404.31,1147.6,403.43,1146.9,402.73 C1144.8,400.68,1143.8,399.15,1143.8,398.82 C1143.8,398.42,1144.3,398.42,1144.4,398.42 C1144.7,398.42,1144.8,398.48,1145,398.76 C1145.9,400.09,1147,400.89,1148.2,400.89 C1148.6,400.89,1149.1,400.86,1150.1,399.98 C1151.2,398.93,1151.8,398.42,1153,398.42 C1156.7,398.42,1159,402.64,1159,403.81 C1159,404.23,1158.7,404.26,1158.4,404.26 C1158,404.26,1157.9,404.09,1157.8,403.71 C1157.2,401.96,1155.1,401.14,1153.4,401.14 C1152.6,401.14,1151.7,401.31,1150.8,401.51 C1149.2,401.86,1149,401.86,1148.3,401.86 C1148.3,401.86,1147.7,401.86,1147.5,401.82 Z "
             stroke-width="0"
             fill="black"
             id="path4025" /></g>      </g>
    </g>
    <g
       transform="translate(-100.1996,248.34014)"
       id="g5544">
      <g
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;letter-spacing:normal;word-spacing:normal;text-anchor:start;fill:none;stroke:#000000;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10.43299961;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0"
         id="g5546"
         transform="matrix(1.0629921,0,0,-1.0629921,-186.02362,789.27165)"
         xml:space="preserve"
         stroke-miterlimit="10.433"
         font-style="normal"
         font-variant="normal"
         font-weight="normal"
         font-stretch="normal"
         font-size-adjust="none"
         letter-spacing="normal"
         word-spacing="normal"><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 481.33,424.78 0.07,0 0.07,0 0.07,0 0.08,0 0.09,0 0.09,0.01 0.09,0 0.09,0.01 0.1,0.01 0.1,0.02 0.1,0.02 0.11,0.02 0.1,0.02 0.1,0.03 0.1,0.03 0.1,0.04 0.1,0.04 0.1,0.05 0.09,0.05 0.09,0.06 0.08,0.07 0.08,0.07 0.04,0.04 0.04,0.04 0.03,0.04 0.04,0.05 0.03,0.04 0.03,0.05 0.03,0.05 0.03,0.05 0.03,0.05 0.02,0.06 0.02,0.06 0.02,0.06 0.02,0.06 0.02,0.06 0.01,0.07 0.01,0.07 0.01,0.07 0,0.08 0.01,0.07 0,0.08 c 0,1.19 -1.05,1.19 -1.94,1.19 h -11.36 c -7.53,0 -13.06,-8.22 -13.06,-14.14 0,-4.39 2.94,-7.88 7.47,-7.88 l 0.06,1.1 c -2.45,0 -4.44,1.79 -4.44,5.37 0,1.5 0.6,5.59 2.35,8.53 2.09,3.44 5.08,4.13 6.76,4.13 4.19,0 4.6,-3.28 4.6,-4.83 0,-2.34 -1,-6.42 -2.69,-8.97 -1.95,-2.94 -4.64,-4.23 -6.58,-4.23 h 0 l -0.06,-1.1 c 5.89,0 12.51,6.03 12.51,13.71 0,0.84 0,3.23 -1.54,5.42 z"
           id="path5548" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 492.63,402.45 -0.03,-0.11 -0.04,-0.12 -0.04,-0.12 -0.05,-0.12 -0.06,-0.12 -0.05,-0.13 -0.07,-0.13 -0.06,-0.12 -0.08,-0.13 -0.07,-0.13 -0.08,-0.13 -0.09,-0.12 -0.08,-0.13 -0.1,-0.12 -0.1,-0.12 -0.1,-0.12 -0.1,-0.12 -0.11,-0.11 -0.12,-0.1 -0.11,-0.1 -0.13,-0.1 -0.12,-0.09 -0.13,-0.08 -0.14,-0.08 -0.13,-0.07 -0.15,-0.06 -0.14,-0.05 -0.15,-0.05 -0.15,-0.04 -0.16,-0.02 -0.16,-0.02 -0.16,0 c -0.11,0 -1.16,0 -1.89,0.48 1.43,0.45 1.53,1.72 1.53,1.92 0,0.77 -0.6,1.3 -1.39,1.3 -0.97,0 -1.99,-0.84 -1.99,-2.14 0,-1.74 1.96,-2.53 3.66,-2.53 1.61,0 3.03,1 3.91,2.47 0.82,-1.85 2.75,-2.47 4.14,-2.47 4.01,0 6.14,4.34 6.14,5.33 0,0.45 -0.46,0.45 -0.57,0.45 -0.48,0 -0.51,-0.17 -0.65,-0.59 -0.74,-2.41 -2.83,-4.22 -4.78,-4.22 -1.39,0 -2.13,0.93 -2.13,2.26 0,0.91 0.85,4.08 1.81,7.96 0.71,2.67 2.27,3.54 3.43,3.54 0.06,0 1.14,0 1.87,-0.48 -1.11,-0.31 -1.53,-1.3 -1.53,-1.92 0,-0.77 0.59,-1.29 1.39,-1.29 0.81,0 1.95,0.66 1.95,2.13 0,1.95 -2.23,2.53 -3.62,2.53 -1.74,0 -3.14,-1.14 -3.91,-2.47 -0.62,1.44 -2.22,2.47 -4.17,2.47 -3.91,0 -6.14,-4.28 -6.14,-5.33 0,-0.45 0.5,-0.45 0.59,-0.45 0.46,0 0.49,0.14 0.68,0.59 0.85,2.72 3.06,4.22 4.76,4.22 1.16,0 2.09,-0.62 2.09,-2.29 0,-0.71 -0.42,-2.44 -0.73,-3.63 z"
           id="path5550" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 512.38,401.82 0.17,0.17 0.16,0.17 0.17,0.16 0.17,0.17 0.18,0.17 0.09,0.09 0.1,0.1 0.1,0.09 0.11,0.1 0.11,0.1 0.11,0.11 0.13,0.11 0.13,0.11 0.13,0.12 0.15,0.13 0.15,0.13 0.16,0.14 0.17,0.14 0.17,0.15 0.19,0.16 0.2,0.16 0.21,0.17 0.22,0.18 0.23,0.19 0.25,0.2 0.25,0.21 0.27,0.21 c 0.74,0.6 3.35,2.69 4.36,3.66 2.13,2.09 3.46,3.87 3.46,4.29 0,0.41 -0.46,0.41 -0.6,0.41 -0.31,0 -0.42,-0.06 -0.59,-0.34 -1.08,-1.6 -1.81,-2.13 -2.64,-2.13 -0.42,0 -0.95,0.03 -2,1.05 -1.17,1.19 -1.94,1.42 -2.75,1.42 -2.78,0 -4.67,-3.03 -4.67,-4.06 0,-0.33 0.36,-0.42 0.59,-0.42 0.42,0 0.5,0.09 0.63,0.48 0.53,1.22 2.48,1.3 3.04,1.3 0.8,0 1.71,-0.22 2.19,-0.33 1.92,-0.41 2.15,-0.41 3.03,-0.41 -0.91,-0.95 -1.53,-1.57 -4.84,-4.22 -2.72,-2.15 -3.66,-3.03 -4.32,-3.73 -2.09,-2.05 -3.11,-3.58 -3.11,-3.91 0,-0.4 0.46,-0.4 0.6,-0.4 0.34,0 0.42,0.06 0.59,0.34 0.94,1.33 2.02,2.13 3.2,2.13 0.43,0 0.94,-0.03 1.88,-0.91 1.09,-1.05 1.78,-1.56 2.91,-1.56 3.71,0 6.06,4.22 6.06,5.39 0,0.42 -0.39,0.45 -0.6,0.45 -0.42,0 -0.5,-0.17 -0.62,-0.55 -0.67,-1.75 -2.72,-2.57 -4.44,-2.57 -0.79,0 -1.67,0.17 -2.53,0.37 -1.61,0.35 -1.89,0.35 -2.51,0.35 -0.08,0 -0.6,0 -0.8,-0.04 z"
           id="path5552" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 577.59,422.5 0.14,0 0.15,0 0.14,0 0.07,0.01 0.08,0 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.01 0.06,0.02 0.07,0.02 0.06,0.02 0.06,0.02 0.06,0.03 0.06,0.03 0.05,0.04 0.05,0.03 0.05,0.05 0.04,0.04 0.04,0.05 0.02,0.03 0.02,0.03 0.01,0.02 0.02,0.03 0.01,0.03 0.02,0.04 0.01,0.03 0.01,0.04 0.01,0.03 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0,0.05 c 0,1 -0.95,1 -1.64,1 H 547.8 c -0.71,0 -1.64,0 -1.64,-1 0,-0.98 0.93,-0.98 1.68,-0.98 z"
           id="path5554" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 577.64,412.82 0.07,0 0.06,0 0.14,0.01 0.14,0 0.07,0 0.07,0.01 0.07,0.01 0.07,0 0.06,0.01 0.07,0.02 0.07,0.01 0.06,0.02 0.07,0.02 0.06,0.02 0.06,0.02 0.06,0.03 0.05,0.03 0.05,0.04 0.05,0.04 0.05,0.04 0.04,0.05 0.02,0.02 0.02,0.03 0.02,0.02 0.02,0.03 0.01,0.03 0.02,0.03 0.01,0.03 0.02,0.03 0.01,0.04 0.01,0.03 0.01,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.05 0,0.04 c 0,1 -0.95,1 -1.69,1 h -29.75 c -0.75,0 -1.68,0 -1.68,-1 0,-1 0.93,-1 1.64,-1 z"
           id="path5556" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 602.37,410.04 5.28,5.13 c 7.76,6.87 10.76,9.56 10.76,14.54 0,5.69 -4.48,9.68 -10.56,9.68 -5.64,0 -9.33,-4.6 -9.33,-9.03 0,-2.79 2.5,-2.79 2.64,-2.79 0.86,0 2.6,0.6 2.6,2.64 0,1.3 -0.89,2.6 -2.64,2.6 -0.39,0 -0.5,0 -0.64,-0.05 1.14,3.24 3.82,5.08 6.72,5.08 4.53,0 6.68,-4.05 6.68,-8.13 0,-3.98 -2.5,-7.92 -5.23,-11.01 l -9.56,-10.66 c -0.57,-0.54 -0.57,-0.64 -0.57,-1.84 h 18.49 l 1.4,8.67 h -1.25 c -0.25,-1.5 -0.59,-3.69 -1.09,-4.44 -0.36,-0.39 -3.64,-0.39 -4.73,-0.39 z"
           id="path5558" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 629.92,411.93 -0.19,-0.3 -0.19,-0.29 -0.18,-0.28 -0.19,-0.26 -0.19,-0.25 -0.18,-0.23 -0.19,-0.22 -0.19,-0.21 -0.18,-0.2 -0.19,-0.18 -0.19,-0.17 -0.18,-0.16 -0.19,-0.15 -0.19,-0.14 -0.19,-0.13 -0.18,-0.12 -0.19,-0.11 -0.19,-0.1 -0.19,-0.09 -0.2,-0.09 -0.19,-0.07 -0.19,-0.07 -0.19,-0.07 -0.2,-0.05 -0.19,-0.05 -0.2,-0.04 -0.2,-0.04 -0.2,-0.03 -0.4,-0.05 -0.41,-0.03 c -0.61,-0.05 -1.04,-0.05 -1.04,-1 0,-0.3 0.25,-0.55 0.64,-0.55 1.34,0 2.89,0.16 4.28,0.16 1.64,0 3.39,-0.16 4.98,-0.16 0.3,0 0.95,0 0.95,0.95 0,0.55 -0.45,0.6 -0.79,0.6 -1.16,0.09 -2.34,0.5 -2.34,1.73 0,0.61 0.29,1.16 0.68,1.84 l 3.8,6.39 h 12.5 l -0.14,1.54 h -11.42 l 9.83,16.45 1.59,-16.45 0.14,-1.54 c 0.11,-1.04 0.8,-7.82 0.8,-8.32 0,-1.5 -2.6,-1.64 -3.58,-1.64 -0.7,0 -1.2,0 -1.2,-1 0,-0.55 0.59,-0.55 0.7,-0.55 2.03,0 4.18,0.16 6.22,0.16 1.25,0 4.39,-0.16 5.64,-0.16 0.29,0 0.89,0 0.89,1 0,0.55 -0.5,0.55 -1.14,0.55 -3.1,0 -3.1,0.34 -3.25,1.79 l -3.03,31.13 c -0.11,1 -0.11,1.2 -0.96,1.2 -0.79,0 -0.98,-0.34 -1.29,-0.84 z"
           id="path5560" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 676.76,404.48 v 1.25 h -3.88 v 15.55 c 0,0.72 0,0.97 -0.76,0.97 -0.42,0 -0.57,0 -0.91,-0.49 l -11.53,-16.03 v -1.25 h 10.25 l 0.23,1.25 h -9.2 l 9.2,12.75 v -12.75 l -0.23,-1.25 v -2.86 c 0,-1.19 0,-1.61 -2.83,-1.61 h -0.94 v -1.25 c 1.74,0.06 3.97,0.14 5.22,0.14 1.3,0 3.52,-0.08 5.27,-0.14 v 1.25 h -0.94 c -2.83,0 -2.83,0.42 -2.83,1.61 v 2.86 z"
           id="path5562" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 696.55,404.48 v 1.25 h -3.87 v 15.55 c 0,0.72 0,0.97 -0.77,0.97 -0.42,0 -0.56,0 -0.9,-0.49 l -11.53,-16.03 v -1.25 h 10.25 l 0.23,1.25 h -9.2 l 9.2,12.75 v -12.75 l -0.23,-1.25 v -2.86 c 0,-1.19 0,-1.61 -2.83,-1.61 h -0.94 v -1.25 c 1.74,0.06 3.97,0.14 5.22,0.14 1.3,0 3.52,-0.08 5.27,-0.14 v 1.25 h -0.94 c -2.83,0 -2.83,0.42 -2.83,1.61 v 2.86 z"
           id="path5564" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 709.75,417.71 0.15,0.01 0.15,0 0.17,0 0.18,0 0.19,0.01 0.19,0 0.21,0.01 0.22,0.01 0.22,0.01 0.24,0.01 0.24,0.01 0.24,0.02 0.25,0.02 0.26,0.02 0.52,0.05 0.54,0.07 0.54,0.07 0.54,0.1 0.54,0.11 0.54,0.12 0.26,0.07 0.26,0.08 0.25,0.08 0.25,0.08 0.24,0.09 0.24,0.1 c 3.48,1.5 3.73,4.43 3.73,5.12 0,2.2 -1.89,4.23 -5.33,4.23 v -1.09 c 2.35,0 3.69,-1.44 3.69,-3.14 0,-5.17 -7.97,-5.17 -10.01,-5.17 h -2.05 c 1.95,7.56 7.08,8.31 8.37,8.31 v 1.09 c -5.53,0 -13.04,-4.82 -13.04,-13.54 0,-5.08 2.94,-9.02 7.81,-9.02 7.13,0 11.31,5.28 11.31,5.88 0,0.29 -0.29,0.65 -0.59,0.65 -0.25,0 -0.34,-0.11 -0.66,-0.5 -3.93,-4.93 -9.36,-4.93 -9.95,-4.93 -3.89,0 -4.34,4.18 -4.34,5.78 0,0.59 0.04,2.14 0.79,5.18 z"
           id="path5566" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 732.27,402.45 -0.03,-0.11 -0.04,-0.12 -0.04,-0.12 -0.05,-0.12 -0.06,-0.12 -0.05,-0.13 -0.07,-0.13 -0.06,-0.12 -0.07,-0.13 -0.08,-0.13 -0.08,-0.13 -0.09,-0.12 -0.08,-0.13 -0.1,-0.12 -0.09,-0.12 -0.11,-0.12 -0.1,-0.12 -0.11,-0.11 -0.12,-0.1 -0.11,-0.1 -0.13,-0.1 -0.12,-0.09 -0.13,-0.08 -0.14,-0.08 -0.13,-0.07 -0.14,-0.06 -0.15,-0.05 -0.15,-0.05 -0.15,-0.04 -0.16,-0.02 -0.16,-0.02 -0.16,0 c -0.11,0 -1.16,0 -1.89,0.48 1.43,0.45 1.53,1.72 1.53,1.92 0,0.77 -0.6,1.3 -1.39,1.3 -0.97,0 -1.99,-0.84 -1.99,-2.14 0,-1.74 1.96,-2.53 3.66,-2.53 1.61,0 3.03,1 3.91,2.47 0.82,-1.85 2.75,-2.47 4.14,-2.47 4.01,0 6.14,4.34 6.14,5.33 0,0.45 -0.46,0.45 -0.57,0.45 -0.48,0 -0.51,-0.17 -0.65,-0.59 -0.74,-2.41 -2.83,-4.22 -4.78,-4.22 -1.39,0 -2.13,0.93 -2.13,2.26 0,0.91 0.85,4.08 1.81,7.96 0.71,2.67 2.27,3.54 3.43,3.54 0.06,0 1.14,0 1.87,-0.48 -1.11,-0.31 -1.53,-1.3 -1.53,-1.92 0,-0.77 0.59,-1.29 1.39,-1.29 0.81,0 1.95,0.66 1.95,2.13 0,1.95 -2.23,2.53 -3.62,2.53 -1.74,0 -3.14,-1.14 -3.91,-2.47 -0.62,1.44 -2.22,2.47 -4.17,2.47 -3.91,0 -6.14,-4.28 -6.14,-5.33 0,-0.45 0.5,-0.45 0.59,-0.45 0.46,0 0.49,0.14 0.68,0.59 0.86,2.72 3.06,4.22 4.76,4.22 1.16,0 2.1,-0.62 2.1,-2.29 0,-0.71 -0.43,-2.44 -0.74,-3.63 z"
           id="path5568" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 752.02,401.82 0.17,0.17 0.16,0.17 0.17,0.16 0.17,0.17 0.18,0.17 0.09,0.09 0.1,0.1 0.1,0.09 0.11,0.1 0.11,0.1 0.11,0.11 0.13,0.11 0.13,0.11 0.13,0.12 0.15,0.13 0.15,0.13 0.16,0.14 0.17,0.14 0.18,0.15 0.18,0.16 0.2,0.16 0.21,0.17 0.22,0.18 0.23,0.19 0.25,0.2 0.25,0.21 0.27,0.21 c 0.74,0.6 3.35,2.69 4.36,3.66 2.13,2.09 3.46,3.87 3.46,4.29 0,0.41 -0.46,0.41 -0.6,0.41 -0.31,0 -0.42,-0.06 -0.59,-0.34 -1.08,-1.6 -1.81,-2.13 -2.64,-2.13 -0.42,0 -0.96,0.03 -2,1.05 -1.17,1.19 -1.94,1.42 -2.75,1.42 -2.78,0 -4.67,-3.03 -4.67,-4.06 0,-0.33 0.36,-0.42 0.59,-0.42 0.42,0 0.5,0.09 0.62,0.48 0.54,1.22 2.49,1.3 3.05,1.3 0.8,0 1.7,-0.22 2.19,-0.33 1.92,-0.41 2.16,-0.41 3.03,-0.41 -0.9,-0.95 -1.53,-1.57 -4.84,-4.22 -2.72,-2.15 -3.66,-3.03 -4.31,-3.73 -2.1,-2.05 -3.12,-3.58 -3.12,-3.91 0,-0.4 0.46,-0.4 0.6,-0.4 0.34,0 0.42,0.06 0.59,0.34 0.94,1.33 2.02,2.13 3.21,2.13 0.42,0 0.93,-0.03 1.87,-0.91 1.1,-1.05 1.78,-1.56 2.91,-1.56 3.72,0 6.06,4.22 6.06,5.39 0,0.42 -0.39,0.45 -0.59,0.45 -0.43,0 -0.5,-0.17 -0.63,-0.55 -0.67,-1.75 -2.72,-2.57 -4.44,-2.57 -0.79,0 -1.67,0.17 -2.53,0.37 -1.61,0.35 -1.89,0.35 -2.51,0.35 -0.08,0 -0.6,0 -0.8,-0.04 z"
           id="path5570" /></g>    </g>
    <g
       id="g6374"
       transform="translate(-100.1996,171.14369)">
      <g
         word-spacing="normal"
         letter-spacing="normal"
         font-size-adjust="none"
         font-stretch="normal"
         font-weight="normal"
         font-variant="normal"
         font-style="normal"
         stroke-miterlimit="10.433"
         xml:space="preserve"
         transform="matrix(1.0629921,0,0,-1.0629921,-186.02362,789.27165)"
         id="g6376"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;letter-spacing:normal;word-spacing:normal;text-anchor:start;fill:none;stroke:#000000;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10.43299961;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0"><path
           id="path6378"
           d="m 481.33,424.78 0.07,0 0.07,0 0.07,0 0.08,0 0.09,0 0.09,0.01 0.09,0 0.09,0.01 0.1,0.01 0.1,0.02 0.1,0.02 0.11,0.02 0.1,0.02 0.1,0.03 0.1,0.03 0.1,0.04 0.1,0.04 0.1,0.05 0.09,0.05 0.09,0.06 0.08,0.07 0.08,0.07 0.04,0.04 0.04,0.04 0.03,0.04 0.04,0.05 0.03,0.04 0.03,0.05 0.03,0.05 0.03,0.05 0.03,0.05 0.02,0.06 0.02,0.06 0.02,0.06 0.02,0.06 0.02,0.06 0.01,0.07 0.01,0.07 0.01,0.07 0,0.08 0.01,0.07 0,0.08 c 0,1.19 -1.05,1.19 -1.94,1.19 h -11.36 c -7.53,0 -13.06,-8.22 -13.06,-14.14 0,-4.39 2.94,-7.88 7.47,-7.88 l 0.06,1.1 c -2.45,0 -4.44,1.79 -4.44,5.37 0,1.5 0.6,5.59 2.35,8.53 2.09,3.44 5.08,4.13 6.76,4.13 4.19,0 4.6,-3.28 4.6,-4.83 0,-2.34 -1,-6.42 -2.69,-8.97 -1.95,-2.94 -4.64,-4.23 -6.58,-4.23 h 0 l -0.06,-1.1 c 5.89,0 12.51,6.03 12.51,13.71 0,0.84 0,3.23 -1.54,5.42 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6380"
           d="m 503.34,411.9 0,0.02 0.01,0.03 0,0.02 0.01,0.02 0.01,0.02 0,0.02 0.01,0.04 0.01,0.03 0.01,0.03 0.01,0.04 0.01,0.03 0,0.02 0.01,0.03 0.01,0.03 0,0.02 0.01,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0,0.03 0,0.03 0.01,0.04 0,0.03 0,0.02 0,0.02 0,0.02 0,0.02 c 0,0.69 -0.57,1.11 -1.16,1.11 -0.37,0 -1.05,-0.17 -1.42,-0.83 -0.11,-0.22 -0.39,-1.33 -0.56,-2.03 l -0.74,-2.89 c -0.2,-0.83 -1.28,-5.22 -1.39,-5.61 -0.03,0 -1.56,-3.03 -4.28,-3.03 -2.38,0 -2.38,2.26 -2.38,2.89 0,1.89 0.8,4.08 1.85,6.76 0.42,1.11 0.59,1.53 0.59,2.13 0,1.67 -1.42,2.95 -3.31,2.95 -3.52,0 -5.08,-4.73 -5.08,-5.33 0,-0.45 0.49,-0.45 0.6,-0.45 0.48,0 0.51,0.17 0.62,0.56 0.88,2.89 2.38,4.25 3.77,4.25 0.59,0 0.86,-0.39 0.86,-1.22 0,-0.79 -0.32,-1.56 -0.49,-2.01 -1.67,-4.25 -2.01,-5.55 -2.01,-7.08 0,-0.59 0,-2.23 1.35,-3.34 1.08,-0.91 2.55,-1.08 3.49,-1.08 1.39,0 2.64,0.51 3.8,1.56 -0.46,-1.92 -0.85,-3.37 -2.3,-5.12 -0.94,-1.08 -2.34,-2.22 -4.19,-2.22 -0.23,0 -1.87,0 -2.61,1.14 1.88,0.2 1.88,1.89 1.88,1.92 0,1.11 -1,1.31 -1.36,1.31 -0.86,0 -2.02,-0.69 -2.02,-2.3 0,-1.76 1.67,-3.06 4.14,-3.06 3.53,0 7.82,2.72 8.89,7.08 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6382"
           d="m 511.18,401.82 0.16,0.17 0.17,0.17 0.16,0.16 0.17,0.17 0.18,0.17 0.1,0.09 0.09,0.1 0.11,0.09 0.1,0.1 0.11,0.1 0.12,0.11 0.12,0.11 0.13,0.11 0.14,0.12 0.14,0.13 0.15,0.13 0.16,0.14 0.17,0.14 0.18,0.15 0.19,0.16 0.2,0.16 0.21,0.17 0.22,0.18 0.23,0.19 0.24,0.2 0.26,0.21 0.27,0.21 c 0.74,0.6 3.34,2.69 4.36,3.66 2.13,2.09 3.45,3.87 3.45,4.29 0,0.41 -0.45,0.41 -0.59,0.41 -0.31,0 -0.42,-0.06 -0.6,-0.34 -1.07,-1.6 -1.81,-2.13 -2.63,-2.13 -0.43,0 -0.96,0.03 -2,1.05 -1.18,1.19 -1.94,1.42 -2.75,1.42 -2.79,0 -4.68,-3.03 -4.68,-4.06 0,-0.33 0.36,-0.42 0.6,-0.42 0.42,0 0.5,0.09 0.62,0.48 0.53,1.22 2.49,1.3 3.05,1.3 0.79,0 1.7,-0.22 2.19,-0.33 1.92,-0.41 2.15,-0.41 3.03,-0.41 -0.91,-0.95 -1.53,-1.57 -4.85,-4.22 -2.71,-2.15 -3.65,-3.03 -4.31,-3.73 -2.09,-2.05 -3.11,-3.58 -3.11,-3.91 0,-0.4 0.45,-0.4 0.6,-0.4 0.34,0 0.42,0.06 0.59,0.34 0.94,1.33 2.01,2.13 3.2,2.13 0.42,0 0.94,-0.03 1.88,-0.91 1.09,-1.05 1.78,-1.56 2.9,-1.56 3.72,0 6.07,4.22 6.07,5.39 0,0.42 -0.4,0.45 -0.6,0.45 -0.42,0 -0.5,-0.17 -0.62,-0.55 -0.68,-1.75 -2.72,-2.57 -4.44,-2.57 -0.8,0 -1.67,0.17 -2.53,0.37 -1.61,0.35 -1.89,0.35 -2.52,0.35 -0.08,0 -0.59,0 -0.79,-0.04 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6384"
           d="m 576.52,422.5 0.14,0 0.14,0 0.14,0 0.08,0.01 0.07,0 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.02 0.06,0.02 0.06,0.02 0.07,0.02 0.05,0.03 0.06,0.03 0.05,0.04 0.05,0.03 0.05,0.05 0.04,0.04 0.04,0.05 0.02,0.03 0.02,0.03 0.01,0.02 0.02,0.03 0.01,0.03 0.02,0.04 0.01,0.03 0.01,0.04 0.01,0.03 0.01,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0,0.04 0,0.05 c 0,1 -0.95,1 -1.64,1 h -29.84 c -0.7,0 -1.64,0 -1.64,-1 0,-0.98 0.94,-0.98 1.69,-0.98 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6386"
           d="m 576.56,412.82 0.07,0 0.06,0 0.14,0.01 0.14,0 0.07,0 0.07,0.01 0.07,0.01 0.07,0 0.07,0.01 0.06,0.02 0.07,0.01 0.07,0.02 0.06,0.02 0.06,0.02 0.06,0.02 0.06,0.03 0.05,0.03 0.06,0.04 0.04,0.04 0.05,0.04 0.04,0.05 0.02,0.02 0.02,0.03 0.02,0.02 0.02,0.03 0.02,0.03 0.01,0.03 0.01,0.03 0.02,0.03 0.01,0.04 0.01,0.03 0.01,0.04 0.01,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0,0.05 0,0.04 c 0,1 -0.95,1 -1.68,1 h -29.75 c -0.75,0 -1.69,0 -1.69,-1 0,-1 0.94,-1 1.64,-1 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6388"
           d="m 601.16,410.04 5.29,5.13 c 7.76,6.87 10.76,9.56 10.76,14.54 0,5.69 -4.48,9.68 -10.56,9.68 -5.64,0 -9.33,-4.6 -9.33,-9.03 0,-2.79 2.5,-2.79 2.64,-2.79 0.86,0 2.59,0.6 2.59,2.64 0,1.3 -0.89,2.6 -2.64,2.6 -0.39,0 -0.5,0 -0.64,-0.05 1.14,3.24 3.83,5.08 6.72,5.08 4.53,0 6.69,-4.05 6.69,-8.13 0,-3.98 -2.5,-7.92 -5.23,-11.01 l -9.57,-10.66 c -0.56,-0.54 -0.56,-0.64 -0.56,-1.84 h 18.48 l 1.41,8.67 h -1.25 c -0.25,-1.5 -0.59,-3.69 -1.09,-4.44 -0.36,-0.39 -3.64,-0.39 -4.74,-0.39 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6390"
           d="m 628.72,411.93 -0.19,-0.3 -0.19,-0.29 -0.19,-0.28 -0.18,-0.26 -0.19,-0.25 -0.19,-0.23 -0.18,-0.22 -0.19,-0.21 -0.18,-0.2 -0.19,-0.18 -0.19,-0.17 -0.19,-0.16 -0.18,-0.15 -0.19,-0.14 -0.19,-0.13 -0.19,-0.12 -0.19,-0.11 -0.19,-0.1 -0.19,-0.09 -0.19,-0.09 -0.19,-0.07 -0.19,-0.07 -0.2,-0.07 -0.19,-0.05 -0.2,-0.05 -0.19,-0.04 -0.2,-0.04 -0.2,-0.03 -0.4,-0.05 -0.41,-0.03 c -0.61,-0.05 -1.05,-0.05 -1.05,-1 0,-0.3 0.25,-0.55 0.64,-0.55 1.35,0 2.89,0.16 4.29,0.16 1.63,0 3.38,-0.16 4.98,-0.16 0.3,0 0.95,0 0.95,0.95 0,0.55 -0.45,0.6 -0.8,0.6 -1.15,0.09 -2.34,0.5 -2.34,1.73 0,0.61 0.3,1.16 0.69,1.84 l 3.8,6.39 h 12.5 l -0.15,1.54 h -11.42 l 9.83,16.45 1.59,-16.45 0.15,-1.54 c 0.1,-1.04 0.79,-7.82 0.79,-8.32 0,-1.5 -2.59,-1.64 -3.57,-1.64 -0.71,0 -1.21,0 -1.21,-1 0,-0.55 0.59,-0.55 0.71,-0.55 2.03,0 4.18,0.16 6.21,0.16 1.25,0 4.39,-0.16 5.64,-0.16 0.3,0 0.9,0 0.9,1 0,0.55 -0.5,0.55 -1.15,0.55 -3.09,0 -3.09,0.34 -3.25,1.79 l -3.03,31.13 c -0.11,1 -0.11,1.2 -0.95,1.2 -0.8,0 -0.99,-0.34 -1.3,-0.84 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6392"
           d="m 675.56,404.48 v 1.25 h -3.88 v 15.55 c 0,0.72 0,0.97 -0.76,0.97 -0.42,0 -0.57,0 -0.91,-0.49 l -11.53,-16.03 v -1.25 h 10.25 l 0.24,1.25 h -9.21 l 9.21,12.75 v -12.75 l -0.24,-1.25 v -2.86 c 0,-1.19 0,-1.61 -2.83,-1.61 h -0.93 v -1.25 c 1.73,0.06 3.96,0.14 5.21,0.14 1.3,0 3.52,-0.08 5.27,-0.14 v 1.25 h -0.94 c -2.83,0 -2.83,0.42 -2.83,1.61 v 2.86 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6394"
           d="m 695.35,404.48 v 1.25 h -3.87 v 15.55 c 0,0.72 0,0.97 -0.76,0.97 -0.43,0 -0.57,0 -0.91,-0.49 l -11.53,-16.03 v -1.25 h 10.25 l 0.23,1.25 h -9.2 l 9.2,12.75 v -12.75 l -0.23,-1.25 v -2.86 c 0,-1.19 0,-1.61 -2.83,-1.61 h -0.94 v -1.25 c 1.74,0.06 3.97,0.14 5.22,0.14 1.3,0 3.52,-0.08 5.27,-0.14 v 1.25 h -0.94 c -2.83,0 -2.83,0.42 -2.83,1.61 v 2.86 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6396"
           d="m 708.67,417.71 0.14,0.01 0.16,0 0.17,0 0.17,0 0.19,0.01 0.2,0 0.21,0.01 0.22,0.01 0.22,0.01 0.23,0.01 0.24,0.01 0.25,0.02 0.25,0.02 0.25,0.02 0.53,0.05 0.53,0.07 0.55,0.07 0.54,0.1 0.54,0.11 0.54,0.12 0.26,0.07 0.26,0.08 0.25,0.08 0.25,0.08 0.24,0.09 0.24,0.1 c 3.48,1.5 3.73,4.43 3.73,5.12 0,2.2 -1.89,4.23 -5.33,4.23 v -1.09 c 2.35,0 3.69,-1.44 3.69,-3.14 0,-5.17 -7.97,-5.17 -10.01,-5.17 h -2.05 c 1.95,7.56 7.08,8.31 8.37,8.31 v 1.09 c -5.53,0 -13.04,-4.82 -13.04,-13.54 0,-5.08 2.93,-9.02 7.81,-9.02 7.12,0 11.31,5.28 11.31,5.88 0,0.29 -0.3,0.65 -0.59,0.65 -0.25,0 -0.35,-0.11 -0.66,-0.5 -3.94,-4.93 -9.36,-4.93 -9.95,-4.93 -3.89,0 -4.35,4.18 -4.35,5.78 0,0.59 0.05,2.14 0.8,5.18 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6398"
           d="m 741.9,411.9 0,0.02 0.01,0.03 0,0.02 0.01,0.02 0.01,0.02 0,0.02 0.01,0.04 0.01,0.03 0.01,0.03 0.01,0.04 0.01,0.03 0,0.02 0.01,0.03 0.01,0.03 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.03 0,0.03 0,0.04 0,0.03 0,0.02 0,0.02 0,0.02 0,0.02 c 0,0.69 -0.56,1.11 -1.15,1.11 -0.38,0 -1.05,-0.17 -1.42,-0.83 -0.11,-0.22 -0.39,-1.33 -0.56,-2.03 l -0.74,-2.89 c -0.2,-0.83 -1.28,-5.22 -1.39,-5.61 -0.03,0 -1.56,-3.03 -4.28,-3.03 -2.38,0 -2.38,2.26 -2.38,2.89 0,1.89 0.8,4.08 1.85,6.76 0.42,1.11 0.59,1.53 0.59,2.13 0,1.67 -1.42,2.95 -3.31,2.95 -3.52,0 -5.08,-4.73 -5.08,-5.33 0,-0.45 0.49,-0.45 0.59,-0.45 0.49,0 0.52,0.17 0.63,0.56 0.87,2.89 2.37,4.25 3.77,4.25 0.59,0 0.85,-0.39 0.85,-1.22 0,-0.79 -0.31,-1.56 -0.48,-2.01 -1.67,-4.25 -2.02,-5.55 -2.02,-7.08 0,-0.59 0,-2.23 1.36,-3.34 1.08,-0.91 2.55,-1.08 3.49,-1.08 1.39,0 2.64,0.51 3.8,1.56 -0.46,-1.92 -0.85,-3.37 -2.3,-5.12 -0.94,-1.08 -2.35,-2.22 -4.19,-2.22 -0.23,0 -1.88,0 -2.61,1.14 1.88,0.2 1.88,1.89 1.88,1.92 0,1.11 -1,1.31 -1.36,1.31 -0.86,0 -2.02,-0.69 -2.02,-2.3 0,-1.76 1.67,-3.06 4.14,-3.06 3.53,0 7.81,2.72 8.89,7.08 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path6400"
           d="m 749.73,401.82 0.17,0.17 0.17,0.17 0.16,0.16 0.17,0.17 0.18,0.17 0.1,0.09 0.09,0.1 0.1,0.09 0.11,0.1 0.11,0.1 0.12,0.11 0.12,0.11 0.13,0.11 0.14,0.12 0.14,0.13 0.15,0.13 0.16,0.14 0.17,0.14 0.18,0.15 0.19,0.16 0.2,0.16 0.21,0.17 0.22,0.18 0.23,0.19 0.24,0.2 0.26,0.21 0.27,0.21 c 0.73,0.6 3.34,2.69 4.36,3.66 2.12,2.09 3.45,3.87 3.45,4.29 0,0.41 -0.45,0.41 -0.59,0.41 -0.32,0 -0.42,-0.06 -0.6,-0.34 -1.07,-1.6 -1.81,-2.13 -2.64,-2.13 -0.42,0 -0.95,0.03 -2,1.05 -1.17,1.19 -1.93,1.42 -2.75,1.42 -2.78,0 -4.67,-3.03 -4.67,-4.06 0,-0.33 0.36,-0.42 0.6,-0.42 0.42,0 0.5,0.09 0.62,0.48 0.53,1.22 2.48,1.3 3.05,1.3 0.79,0 1.7,-0.22 2.18,-0.33 1.93,-0.41 2.16,-0.41 3.04,-0.41 -0.91,-0.95 -1.54,-1.57 -4.85,-4.22 -2.72,-2.15 -3.65,-3.03 -4.31,-3.73 -2.09,-2.05 -3.11,-3.58 -3.11,-3.91 0,-0.4 0.45,-0.4 0.59,-0.4 0.35,0 0.43,0.06 0.6,0.34 0.93,1.33 2.01,2.13 3.2,2.13 0.42,0 0.94,-0.03 1.88,-0.91 1.09,-1.05 1.78,-1.56 2.9,-1.56 3.72,0 6.06,4.22 6.06,5.39 0,0.42 -0.39,0.45 -0.59,0.45 -0.42,0 -0.5,-0.17 -0.62,-0.55 -0.68,-1.75 -2.72,-2.57 -4.44,-2.57 -0.8,0 -1.67,0.17 -2.53,0.37 -1.61,0.35 -1.89,0.35 -2.52,0.35 -0.08,0 -0.59,0 -0.8,-0.04 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /></g>    </g>
    <g
       transform="translate(-100.1996,-28.856312)"
       id="g6780">
      <g
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;letter-spacing:normal;word-spacing:normal;text-anchor:start;fill:none;stroke:#000000;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10.43299961;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0"
         id="g6782"
         transform="matrix(1.0629921,0,0,-1.0629921,-186.02362,789.27165)"
         xml:space="preserve"
         stroke-miterlimit="10.433"
         font-style="normal"
         font-variant="normal"
         font-weight="normal"
         font-stretch="normal"
         font-size-adjust="none"
         letter-spacing="normal"
         word-spacing="normal"><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 481.33,424.78 0.07,0 0.07,0 0.07,0 0.08,0 0.09,0 0.09,0.01 0.09,0 0.09,0.01 0.1,0.01 0.1,0.02 0.1,0.02 0.11,0.02 0.1,0.02 0.1,0.03 0.1,0.03 0.1,0.04 0.1,0.04 0.1,0.05 0.09,0.05 0.09,0.06 0.08,0.07 0.08,0.07 0.04,0.04 0.04,0.04 0.03,0.04 0.04,0.05 0.03,0.04 0.03,0.05 0.03,0.05 0.03,0.05 0.03,0.05 0.02,0.06 0.02,0.06 0.02,0.06 0.02,0.06 0.02,0.06 0.01,0.07 0.01,0.07 0.01,0.07 0,0.08 0.01,0.07 0,0.08 c 0,1.19 -1.05,1.19 -1.94,1.19 h -11.36 c -7.53,0 -13.06,-8.22 -13.06,-14.14 0,-4.39 2.94,-7.88 7.47,-7.88 l 0.06,1.1 c -2.45,0 -4.44,1.79 -4.44,5.37 0,1.5 0.6,5.59 2.35,8.53 2.09,3.44 5.08,4.13 6.76,4.13 4.19,0 4.6,-3.28 4.6,-4.83 0,-2.34 -1,-6.42 -2.69,-8.97 -1.95,-2.94 -4.64,-4.23 -6.58,-4.23 h 0 l -0.06,-1.1 c 5.89,0 12.51,6.03 12.51,13.71 0,0.84 0,3.23 -1.54,5.42 z"
           id="path6784" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 503.34,411.9 0,0.02 0.01,0.03 0,0.02 0.01,0.02 0.01,0.02 0,0.02 0.01,0.04 0.01,0.03 0.01,0.03 0.01,0.04 0.01,0.03 0,0.02 0.01,0.03 0.01,0.03 0,0.02 0.01,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0,0.03 0,0.03 0.01,0.04 0,0.03 0,0.02 0,0.02 0,0.02 0,0.02 c 0,0.69 -0.57,1.11 -1.16,1.11 -0.37,0 -1.05,-0.17 -1.42,-0.83 -0.11,-0.22 -0.39,-1.33 -0.56,-2.03 l -0.74,-2.89 c -0.2,-0.83 -1.28,-5.22 -1.39,-5.61 -0.03,0 -1.56,-3.03 -4.28,-3.03 -2.38,0 -2.38,2.26 -2.38,2.89 0,1.89 0.8,4.08 1.85,6.76 0.42,1.11 0.59,1.53 0.59,2.13 0,1.67 -1.42,2.95 -3.31,2.95 -3.52,0 -5.08,-4.73 -5.08,-5.33 0,-0.45 0.49,-0.45 0.6,-0.45 0.48,0 0.51,0.17 0.62,0.56 0.88,2.89 2.38,4.25 3.77,4.25 0.59,0 0.86,-0.39 0.86,-1.22 0,-0.79 -0.32,-1.56 -0.49,-2.01 -1.67,-4.25 -2.01,-5.55 -2.01,-7.08 0,-0.59 0,-2.23 1.35,-3.34 1.08,-0.91 2.55,-1.08 3.49,-1.08 1.39,0 2.64,0.51 3.8,1.56 -0.46,-1.92 -0.85,-3.37 -2.3,-5.12 -0.94,-1.08 -2.34,-2.22 -4.19,-2.22 -0.23,0 -1.87,0 -2.61,1.14 1.88,0.2 1.88,1.89 1.88,1.92 0,1.11 -1,1.31 -1.36,1.31 -0.86,0 -2.02,-0.69 -2.02,-2.3 0,-1.76 1.67,-3.06 4.14,-3.06 3.53,0 7.82,2.72 8.89,7.08 z"
           id="path6786" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 524.69,411.9 0.01,0.02 0,0.03 0.01,0.02 0.01,0.02 0,0.02 0.01,0.02 0.01,0.04 0.01,0.03 0.01,0.03 0,0.04 0.01,0.03 0.01,0.02 0.01,0.03 0,0.03 0.01,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0,0.02 0.01,0.03 0,0.03 0,0.04 0,0.03 0,0.02 0,0.02 0,0.02 0,0.02 c 0,0.69 -0.56,1.11 -1.15,1.11 -0.38,0 -1.05,-0.17 -1.43,-0.83 -0.1,-0.22 -0.39,-1.33 -0.56,-2.03 l -0.73,-2.89 c -0.21,-0.83 -1.28,-5.22 -1.39,-5.61 -0.04,0 -1.57,-3.03 -4.29,-3.03 -2.37,0 -2.37,2.26 -2.37,2.89 0,1.89 0.8,4.08 1.84,6.76 0.43,1.11 0.6,1.53 0.6,2.13 0,1.67 -1.42,2.95 -3.32,2.95 -3.51,0 -5.07,-4.73 -5.07,-5.33 0,-0.45 0.48,-0.45 0.59,-0.45 0.49,0 0.52,0.17 0.63,0.56 0.87,2.89 2.37,4.25 3.76,4.25 0.59,0 0.86,-0.39 0.86,-1.22 0,-0.79 -0.31,-1.56 -0.48,-2.01 -1.68,-4.25 -2.02,-5.55 -2.02,-7.08 0,-0.59 0,-2.23 1.36,-3.34 1.08,-0.91 2.55,-1.08 3.49,-1.08 1.38,0 2.63,0.51 3.79,1.56 -0.45,-1.92 -0.84,-3.37 -2.29,-5.12 -0.94,-1.08 -2.35,-2.22 -4.19,-2.22 -0.24,0 -1.88,0 -2.61,1.14 1.87,0.2 1.87,1.89 1.87,1.92 0,1.11 -1,1.31 -1.36,1.31 -0.86,0 -2.01,-0.69 -2.01,-2.3 0,-1.76 1.67,-3.06 4.14,-3.06 3.53,0 7.81,2.72 8.89,7.08 z"
           id="path6788" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 577.47,422.5 0.14,0 0.15,0 0.14,0 0.07,0.01 0.08,0 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.01 0.06,0.02 0.07,0.02 0.06,0.02 0.06,0.02 0.06,0.03 0.06,0.03 0.05,0.04 0.05,0.03 0.05,0.05 0.04,0.04 0.04,0.05 0.02,0.03 0.02,0.03 0.01,0.02 0.02,0.03 0.01,0.03 0.01,0.04 0.02,0.03 0.01,0.04 0.01,0.03 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0,0.05 c 0,1 -0.95,1 -1.64,1 h -29.84 c -0.71,0 -1.65,0 -1.65,-1 0,-0.98 0.94,-0.98 1.69,-0.98 z"
           id="path6790" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 577.52,412.82 0.07,0 0.06,0 0.14,0.01 0.14,0 0.07,0 0.07,0.01 0.07,0.01 0.06,0 0.07,0.01 0.07,0.02 0.07,0.01 0.06,0.02 0.07,0.02 0.06,0.02 0.06,0.02 0.05,0.03 0.06,0.03 0.05,0.04 0.05,0.04 0.05,0.04 0.04,0.05 0.02,0.02 0.02,0.03 0.02,0.02 0.02,0.03 0.01,0.03 0.02,0.03 0.01,0.03 0.01,0.03 0.02,0.04 0.01,0.03 0.01,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.05 0,0.04 c 0,1 -0.95,1 -1.69,1 h -29.75 c -0.75,0 -1.69,0 -1.69,-1 0,-1 0.94,-1 1.65,-1 z"
           id="path6792" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 604.72,411.93 -0.19,-0.3 -0.19,-0.29 -0.18,-0.28 -0.19,-0.26 -0.19,-0.25 -0.18,-0.23 -0.19,-0.22 -0.18,-0.21 -0.19,-0.2 -0.19,-0.18 -0.18,-0.17 -0.19,-0.16 -0.19,-0.15 -0.19,-0.14 -0.18,-0.13 -0.19,-0.12 -0.19,-0.11 -0.19,-0.1 -0.19,-0.09 -0.19,-0.09 -0.2,-0.07 -0.19,-0.07 -0.19,-0.07 -0.2,-0.05 -0.19,-0.05 -0.2,-0.04 -0.2,-0.04 -0.2,-0.03 -0.4,-0.05 -0.41,-0.03 c -0.61,-0.05 -1.04,-0.05 -1.04,-1 0,-0.3 0.25,-0.55 0.64,-0.55 1.34,0 2.89,0.16 4.28,0.16 1.64,0 3.39,-0.16 4.98,-0.16 0.3,0 0.96,0 0.96,0.95 0,0.55 -0.46,0.6 -0.8,0.6 -1.16,0.09 -2.34,0.5 -2.34,1.73 0,0.61 0.29,1.16 0.68,1.84 l 3.8,6.39 h 12.5 l -0.14,1.54 h -11.42 l 9.83,16.45 1.59,-16.45 0.14,-1.54 c 0.11,-1.04 0.8,-7.82 0.8,-8.32 0,-1.5 -2.6,-1.64 -3.58,-1.64 -0.7,0 -1.2,0 -1.2,-1 0,-0.55 0.59,-0.55 0.7,-0.55 2.03,0 4.19,0.16 6.22,0.16 1.25,0 4.39,-0.16 5.64,-0.16 0.29,0 0.89,0 0.89,1 0,0.55 -0.5,0.55 -1.14,0.55 -3.1,0 -3.1,0.34 -3.25,1.79 l -3.03,31.13 c -0.11,1 -0.11,1.2 -0.96,1.2 -0.79,0 -0.98,-0.34 -1.29,-0.84 z"
           id="path6794" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 644.79,420.92 0,0.04 0,0.04 0,0.05 0,0.04 0,0.03 0,0.04 0,0.04 0,0.03 0,0.04 0,0.03 -0.01,0.03 0,0.03 0,0.03 -0.01,0.03 0,0.03 0,0.02 -0.01,0.03 0,0.02 -0.01,0.03 0,0.02 -0.01,0.04 -0.02,0.04 -0.02,0.03 -0.02,0.03 -0.02,0.03 -0.02,0.03 -0.03,0.02 -0.03,0.02 -0.03,0.02 -0.04,0.01 -0.04,0.01 -0.05,0.02 -0.02,0 -0.02,0 -0.03,0.01 -0.03,0 -0.02,0.01 -0.03,0 -0.03,0 -0.03,0 -0.03,0 -0.04,0.01 -0.03,0 -0.04,0 -0.03,0 -0.04,0 -0.04,0 -0.04,0 -0.04,0 -0.04,0 -0.05,0 -0.04,0 c -2.24,-2.2 -5.4,-2.23 -6.83,-2.23 v -1.25 c 0.84,0 3.14,0 5.05,0.97 v -17.77 c 0,-1.16 0,-1.61 -3.49,-1.61 h -1.31 v -1.25 c 0.62,0.03 4.9,0.14 6.2,0.14 1.08,0 5.47,-0.11 6.23,-0.14 v 1.25 h -1.32 c -3.49,0 -3.49,0.45 -3.49,1.61 z"
           id="path6796" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 670.51,405.11 h -1.19 c -0.09,-0.77 -0.45,-2.83 -0.9,-3.18 -0.27,-0.2 -2.95,-0.2 -3.44,-0.2 h -6.42 c 3.66,3.23 4.87,4.2 6.97,5.84 2.57,2.07 4.98,4.22 4.98,7.54 0,4.21 -3.69,6.79 -8.16,6.79 -4.31,0 -7.25,-3.03 -7.25,-6.23 0,-1.78 1.5,-1.96 1.87,-1.96 0.82,0 1.84,0.6 1.84,1.85 0,0.62 -0.25,1.84 -2.06,1.84 1.07,2.47 3.45,3.24 5.09,3.24 3.48,0 5.3,-2.71 5.3,-5.53 0,-3.04 -2.16,-5.44 -3.29,-6.69 l -8.38,-8.3 c -0.37,-0.31 -0.37,-0.39 -0.37,-1.36 h 14.37 z"
           id="path6798" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 684.67,417.71 0.14,0.01 0.16,0 0.17,0 0.17,0 0.19,0.01 0.2,0 0.21,0.01 0.22,0.01 0.22,0.01 0.23,0.01 0.24,0.01 0.25,0.02 0.25,0.02 0.25,0.02 0.53,0.05 0.53,0.07 0.55,0.07 0.54,0.1 0.54,0.11 0.54,0.12 0.26,0.07 0.26,0.08 0.25,0.08 0.25,0.08 0.24,0.09 0.24,0.1 c 3.48,1.5 3.73,4.43 3.73,5.12 0,2.2 -1.89,4.23 -5.33,4.23 v -1.09 c 2.35,0 3.69,-1.44 3.69,-3.14 0,-5.17 -7.97,-5.17 -10.01,-5.17 h -2.05 c 1.95,7.56 7.08,8.31 8.37,8.31 v 1.09 c -5.53,0 -13.04,-4.82 -13.04,-13.54 0,-5.08 2.93,-9.02 7.81,-9.02 7.12,0 11.31,5.28 11.31,5.88 0,0.29 -0.3,0.65 -0.59,0.65 -0.25,0 -0.35,-0.11 -0.66,-0.5 -3.94,-4.93 -9.36,-4.93 -9.95,-4.93 -3.89,0 -4.35,4.18 -4.35,5.78 0,0.59 0.05,2.14 0.8,5.18 z"
           id="path6800" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 707.19,402.45 -0.03,-0.11 -0.04,-0.12 -0.05,-0.12 -0.05,-0.12 -0.05,-0.12 -0.06,-0.13 -0.06,-0.13 -0.07,-0.12 -0.07,-0.13 -0.07,-0.13 -0.08,-0.13 -0.09,-0.12 -0.09,-0.13 -0.09,-0.12 -0.1,-0.12 -0.1,-0.12 -0.1,-0.12 -0.11,-0.11 -0.12,-0.1 -0.12,-0.1 -0.12,-0.1 -0.12,-0.09 -0.13,-0.08 -0.14,-0.08 -0.14,-0.07 -0.14,-0.06 -0.14,-0.05 -0.15,-0.05 -0.15,-0.04 -0.16,-0.02 -0.16,-0.02 -0.16,0 c -0.11,0 -1.16,0 -1.9,0.48 1.44,0.45 1.54,1.72 1.54,1.92 0,0.77 -0.6,1.3 -1.39,1.3 -0.97,0 -1.99,-0.84 -1.99,-2.14 0,-1.74 1.96,-2.53 3.66,-2.53 1.61,0 3.03,1 3.9,2.47 0.83,-1.85 2.75,-2.47 4.15,-2.47 4.01,0 6.13,4.34 6.13,5.33 0,0.45 -0.45,0.45 -0.56,0.45 -0.48,0 -0.51,-0.17 -0.65,-0.59 -0.74,-2.41 -2.83,-4.22 -4.79,-4.22 -1.38,0 -2.12,0.93 -2.12,2.26 0,0.91 0.84,4.08 1.81,7.96 0.71,2.67 2.27,3.54 3.43,3.54 0.06,0 1.13,0 1.87,-0.48 -1.11,-0.31 -1.53,-1.3 -1.53,-1.92 0,-0.77 0.59,-1.29 1.39,-1.29 0.81,0 1.95,0.66 1.95,2.13 0,1.95 -2.23,2.53 -3.62,2.53 -1.74,0 -3.14,-1.14 -3.91,-2.47 -0.62,1.44 -2.22,2.47 -4.17,2.47 -3.91,0 -6.14,-4.28 -6.14,-5.33 0,-0.45 0.5,-0.45 0.59,-0.45 0.45,0 0.49,0.14 0.67,0.59 0.86,2.72 3.07,4.22 4.77,4.22 1.16,0 2.09,-0.62 2.09,-2.29 0,-0.71 -0.42,-2.44 -0.73,-3.63 z"
           id="path6802" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 729.75,402.45 -0.03,-0.11 -0.04,-0.12 -0.05,-0.12 -0.05,-0.12 -0.05,-0.12 -0.06,-0.13 -0.06,-0.13 -0.07,-0.12 -0.07,-0.13 -0.07,-0.13 -0.08,-0.13 -0.09,-0.12 -0.09,-0.13 -0.09,-0.12 -0.1,-0.12 -0.1,-0.12 -0.11,-0.12 -0.11,-0.11 -0.11,-0.1 -0.12,-0.1 -0.12,-0.1 -0.13,-0.09 -0.13,-0.08 -0.13,-0.08 -0.14,-0.07 -0.14,-0.06 -0.14,-0.05 -0.15,-0.05 -0.16,-0.04 -0.15,-0.02 -0.16,-0.02 -0.17,0 c -0.1,0 -1.15,0 -1.89,0.48 1.44,0.45 1.53,1.72 1.53,1.92 0,0.77 -0.59,1.3 -1.39,1.3 -0.96,0 -1.98,-0.84 -1.98,-2.14 0,-1.74 1.95,-2.53 3.66,-2.53 1.61,0 3.03,1 3.9,2.47 0.83,-1.85 2.75,-2.47 4.14,-2.47 4.02,0 6.14,4.34 6.14,5.33 0,0.45 -0.45,0.45 -0.56,0.45 -0.48,0 -0.51,-0.17 -0.65,-0.59 -0.74,-2.41 -2.83,-4.22 -4.79,-4.22 -1.39,0 -2.12,0.93 -2.12,2.26 0,0.91 0.84,4.08 1.81,7.96 0.7,2.67 2.27,3.54 3.42,3.54 0.07,0 1.14,0 1.88,-0.48 -1.11,-0.31 -1.53,-1.3 -1.53,-1.92 0,-0.77 0.59,-1.29 1.39,-1.29 0.81,0 1.95,0.66 1.95,2.13 0,1.95 -2.23,2.53 -3.62,2.53 -1.74,0 -3.15,-1.14 -3.91,-2.47 -0.63,1.44 -2.22,2.47 -4.17,2.47 -3.91,0 -6.14,-4.28 -6.14,-5.33 0,-0.45 0.5,-0.45 0.59,-0.45 0.45,0 0.48,0.14 0.67,0.59 0.86,2.72 3.07,4.22 4.77,4.22 1.15,0 2.09,-0.62 2.09,-2.29 0,-0.71 -0.42,-2.44 -0.73,-3.63 z"
           id="path6804" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 777.7,417.65 h 13.9 c 0.69,0 1.64,0 1.64,1 0,1 -0.95,1 -1.64,1 h -13.9 v 13.96 c 0,0.68 0,1.64 -1,1.64 -0.99,0 -0.99,-0.96 -0.99,-1.64 v -13.96 h -13.95 c -0.71,0 -1.64,0 -1.64,-1 0,-1 0.93,-1 1.64,-1 h 13.95 v -13.94 c 0,-0.7 0,-1.65 0.99,-1.65 1,0 1,0.95 1,1.65 z"
           id="path6806" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 816.04,411.93 -0.19,-0.3 -0.19,-0.29 -0.18,-0.28 -0.19,-0.26 -0.19,-0.25 -0.18,-0.23 -0.19,-0.22 -0.18,-0.21 -0.19,-0.2 -0.19,-0.18 -0.18,-0.17 -0.19,-0.16 -0.19,-0.15 -0.19,-0.14 -0.18,-0.13 -0.19,-0.12 -0.19,-0.11 -0.19,-0.1 -0.19,-0.09 -0.19,-0.09 -0.2,-0.07 -0.19,-0.07 -0.19,-0.07 -0.2,-0.05 -0.19,-0.05 -0.2,-0.04 -0.2,-0.04 -0.2,-0.03 -0.4,-0.05 -0.41,-0.03 c -0.61,-0.05 -1.04,-0.05 -1.04,-1 0,-0.3 0.25,-0.55 0.64,-0.55 1.34,0 2.89,0.16 4.28,0.16 1.64,0 3.39,-0.16 4.98,-0.16 0.3,0 0.96,0 0.96,0.95 0,0.55 -0.46,0.6 -0.8,0.6 -1.16,0.09 -2.34,0.5 -2.34,1.73 0,0.61 0.29,1.16 0.68,1.84 l 3.8,6.39 h 12.5 l -0.14,1.54 h -11.42 l 9.83,16.45 1.59,-16.45 0.14,-1.54 c 0.11,-1.04 0.8,-7.82 0.8,-8.32 0,-1.5 -2.6,-1.64 -3.58,-1.64 -0.7,0 -1.2,0 -1.2,-1 0,-0.55 0.59,-0.55 0.7,-0.55 2.03,0 4.19,0.16 6.22,0.16 1.25,0 4.39,-0.16 5.64,-0.16 0.3,0 0.89,0 0.89,1 0,0.55 -0.5,0.55 -1.14,0.55 -3.1,0 -3.1,0.34 -3.25,1.79 l -3.03,31.13 c -0.11,1 -0.11,1.2 -0.96,1.2 -0.79,0 -0.98,-0.34 -1.29,-0.84 z"
           id="path6808" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 856.11,420.92 0,0.04 0,0.04 0,0.05 0,0.04 0,0.03 0,0.04 0,0.04 0,0.03 0,0.04 0,0.03 -0.01,0.03 0,0.03 0,0.03 0,0.03 -0.01,0.03 0,0.02 -0.01,0.03 0,0.02 -0.01,0.03 0,0.02 -0.01,0.04 -0.02,0.04 -0.02,0.03 -0.01,0.03 -0.03,0.03 -0.02,0.03 -0.03,0.02 -0.03,0.02 -0.03,0.02 -0.04,0.01 -0.04,0.01 -0.04,0.02 -0.03,0 -0.02,0 -0.03,0.01 -0.02,0 -0.03,0.01 -0.03,0 -0.03,0 -0.03,0 -0.03,0 -0.04,0.01 -0.03,0 -0.04,0 -0.03,0 -0.04,0 -0.04,0 -0.04,0 -0.04,0 -0.04,0 -0.05,0 -0.04,0 c -2.24,-2.2 -5.39,-2.23 -6.83,-2.23 v -1.25 c 0.84,0 3.14,0 5.04,0.97 v -17.77 c 0,-1.16 0,-1.61 -3.48,-1.61 h -1.31 v -1.25 c 0.62,0.03 4.91,0.14 6.2,0.14 1.08,0 5.47,-0.11 6.24,-0.14 v 1.25 h -1.33 c -3.49,0 -3.49,0.45 -3.49,1.61 z"
           id="path6810" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 875.91,420.92 0,0.04 0,0.04 0,0.05 0,0.04 0,0.03 0,0.04 0,0.04 0,0.03 -0.01,0.04 0,0.03 0,0.03 0,0.03 0,0.03 -0.01,0.03 0,0.03 -0.01,0.02 0,0.03 0,0.02 -0.01,0.03 0,0.02 -0.02,0.04 -0.01,0.04 -0.02,0.03 -0.02,0.03 -0.02,0.03 -0.02,0.03 -0.03,0.02 -0.03,0.02 -0.04,0.02 -0.03,0.01 -0.04,0.01 -0.05,0.02 -0.02,0 -0.03,0 -0.02,0.01 -0.03,0 -0.03,0.01 -0.02,0 -0.03,0 -0.03,0 -0.04,0 -0.03,0.01 -0.03,0 -0.04,0 -0.04,0 -0.03,0 -0.04,0 -0.04,0 -0.04,0 -0.05,0 -0.04,0 -0.05,0 c -2.23,-2.2 -5.39,-2.23 -6.83,-2.23 v -1.25 c 0.85,0 3.15,0 5.05,0.97 v -17.77 c 0,-1.16 0,-1.61 -3.48,-1.61 h -1.32 v -1.25 c 0.63,0.03 4.91,0.14 6.21,0.14 1.08,0 5.47,-0.11 6.23,-0.14 v 1.25 h -1.32 c -3.49,0 -3.49,0.45 -3.49,1.61 z"
           id="path6812" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 895.99,417.71 0.14,0.01 0.16,0 0.17,0 0.17,0 0.19,0.01 0.2,0 0.21,0.01 0.22,0.01 0.22,0.01 0.23,0.01 0.24,0.01 0.25,0.02 0.25,0.02 0.25,0.02 0.53,0.05 0.53,0.07 0.55,0.07 0.54,0.1 0.54,0.11 0.54,0.12 0.26,0.07 0.26,0.08 0.25,0.08 0.25,0.08 0.24,0.09 0.24,0.1 c 3.48,1.5 3.73,4.43 3.73,5.12 0,2.2 -1.89,4.23 -5.33,4.23 v -1.09 c 2.35,0 3.69,-1.44 3.69,-3.14 0,-5.17 -7.97,-5.17 -10.01,-5.17 h -2.05 c 1.95,7.56 7.08,8.31 8.37,8.31 v 1.09 c -5.53,0 -13.04,-4.82 -13.04,-13.54 0,-5.08 2.93,-9.02 7.81,-9.02 7.12,0 11.31,5.28 11.31,5.88 0,0.29 -0.3,0.65 -0.59,0.65 -0.25,0 -0.35,-0.11 -0.66,-0.5 -3.94,-4.93 -9.36,-4.93 -9.95,-4.93 -3.89,0 -4.35,4.18 -4.35,5.78 0,0.59 0.05,2.14 0.8,5.18 z"
           id="path6814" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 929.22,411.9 0,0.02 0.01,0.03 0,0.02 0.01,0.02 0.01,0.02 0,0.02 0.01,0.04 0.01,0.03 0.01,0.03 0.01,0.04 0.01,0.03 0,0.02 0.01,0.03 0.01,0.03 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.03 0,0.03 0,0.04 0,0.03 0,0.02 0,0.02 0,0.02 0,0.02 c 0,0.69 -0.56,1.11 -1.15,1.11 -0.38,0 -1.05,-0.17 -1.42,-0.83 -0.11,-0.22 -0.39,-1.33 -0.56,-2.03 l -0.74,-2.89 c -0.2,-0.83 -1.28,-5.22 -1.39,-5.61 -0.03,0 -1.56,-3.03 -4.28,-3.03 -2.38,0 -2.38,2.26 -2.38,2.89 0,1.89 0.8,4.08 1.85,6.76 0.42,1.11 0.59,1.53 0.59,2.13 0,1.67 -1.42,2.95 -3.31,2.95 -3.52,0 -5.08,-4.73 -5.08,-5.33 0,-0.45 0.49,-0.45 0.59,-0.45 0.49,0 0.52,0.17 0.63,0.56 0.87,2.89 2.37,4.25 3.77,4.25 0.59,0 0.85,-0.39 0.85,-1.22 0,-0.79 -0.31,-1.56 -0.48,-2.01 -1.67,-4.25 -2.02,-5.55 -2.02,-7.08 0,-0.59 0,-2.23 1.36,-3.34 1.08,-0.91 2.55,-1.08 3.49,-1.08 1.39,0 2.64,0.51 3.8,1.56 -0.46,-1.92 -0.85,-3.37 -2.3,-5.12 -0.94,-1.08 -2.35,-2.22 -4.19,-2.22 -0.23,0 -1.88,0 -2.61,1.14 1.88,0.2 1.88,1.89 1.88,1.92 0,1.11 -1,1.31 -1.36,1.31 -0.86,0 -2.02,-0.69 -2.02,-2.3 0,-1.76 1.67,-3.06 4.14,-3.06 3.53,0 7.81,2.72 8.89,7.08 z"
           id="path6816" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 950.57,411.9 0.01,0.02 0,0.03 0.01,0.02 0,0.02 0.01,0.02 0.01,0.02 0.01,0.04 0.01,0.03 0.01,0.03 0,0.04 0.01,0.03 0.01,0.02 0.01,0.03 0,0.03 0.01,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0,0.02 0.01,0.03 0,0.03 0,0.04 0,0.03 0,0.02 0,0.02 0,0.02 0,0.02 c 0,0.69 -0.56,1.11 -1.16,1.11 -0.37,0 -1.04,-0.17 -1.42,-0.83 -0.11,-0.22 -0.39,-1.33 -0.56,-2.03 l -0.73,-2.89 c -0.21,-0.83 -1.29,-5.22 -1.39,-5.61 -0.04,0 -1.57,-3.03 -4.29,-3.03 -2.37,0 -2.37,2.26 -2.37,2.89 0,1.89 0.8,4.08 1.84,6.76 0.42,1.11 0.6,1.53 0.6,2.13 0,1.67 -1.43,2.95 -3.32,2.95 -3.51,0 -5.07,-4.73 -5.07,-5.33 0,-0.45 0.48,-0.45 0.59,-0.45 0.48,0 0.52,0.17 0.62,0.56 0.88,2.89 2.38,4.25 3.77,4.25 0.59,0 0.86,-0.39 0.86,-1.22 0,-0.79 -0.31,-1.56 -0.48,-2.01 -1.68,-4.25 -2.02,-5.55 -2.02,-7.08 0,-0.59 0,-2.23 1.36,-3.34 1.08,-0.91 2.55,-1.08 3.48,-1.08 1.39,0 2.64,0.51 3.8,1.56 -0.45,-1.92 -0.84,-3.37 -2.3,-5.12 -0.93,-1.08 -2.34,-2.22 -4.18,-2.22 -0.24,0 -1.88,0 -2.61,1.14 1.87,0.2 1.87,1.89 1.87,1.92 0,1.11 -1,1.31 -1.36,1.31 -0.86,0 -2.01,-0.69 -2.01,-2.3 0,-1.76 1.67,-3.06 4.14,-3.06 3.53,0 7.81,2.72 8.89,7.08 z"
           id="path6818" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 986.73,417.65 h 13.87 c 0.7,0 1.7,0 1.7,1 0,1 -1,1 -1.7,1 h -13.87 v 13.96 c 0,0.68 0,1.64 -1,1.64 -0.98,0 -0.98,-0.96 -0.98,-1.64 V 419.65 H 970.8 c -0.71,0 -1.64,0 -1.64,-1 0,-1 0.93,-1 1.64,-1 h 13.95 v -13.94 c 0,-0.7 0,-1.65 0.98,-1.65 1,0 1,0.95 1,1.65 z"
           id="path6820" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 1025.1,411.93 -0.2,-0.3 -0.2,-0.29 -0.2,-0.28 -0.2,-0.26 -0.2,-0.25 -0.1,-0.23 -0.2,-0.22 -0.2,-0.21 -0.2,-0.2 -0.2,-0.18 -0.2,-0.17 -0.2,-0.16 -0.1,-0.15 -0.2,-0.14 -0.2,-0.13 -0.2,-0.12 -0.2,-0.11 -0.2,-0.1 -0.2,-0.09 -0.2,-0.09 -0.2,-0.07 -0.2,-0.07 -0.2,-0.07 -0.1,-0.05 -0.2,-0.05 -0.2,-0.04 -0.2,-0.04 -0.2,-0.03 -0.4,-0.05 -0.4,-0.03 c -0.7,-0.05 -1.1,-0.05 -1.1,-1 0,-0.3 0.3,-0.55 0.6,-0.55 1.4,0 2.9,0.16 4.3,0.16 1.7,0 3.4,-0.16 5,-0.16 0.3,0 1,0 1,0.95 0,0.55 -0.5,0.6 -0.8,0.6 -1.2,0.09 -2.4,0.5 -2.4,1.73 0,0.61 0.3,1.16 0.7,1.84 l 3.8,6.39 h 12.5 l -0.1,1.54 h -11.4 l 9.8,16.45 1.6,-16.45 0.1,-1.54 c 0.1,-1.04 0.8,-7.82 0.8,-8.32 0,-1.5 -2.6,-1.64 -3.6,-1.64 -0.7,0 -1.2,0 -1.2,-1 0,-0.55 0.6,-0.55 0.7,-0.55 2.1,0 4.2,0.16 6.3,0.16 1.2,0 4.3,-0.16 5.6,-0.16 0.3,0 0.9,0 0.9,1 0,0.55 -0.5,0.55 -1.2,0.55 -3.1,0 -3.1,0.34 -3.2,1.79 l -3,31.13 c -0.1,1 -0.1,1.2 -1,1.2 -0.8,0 -1,-0.34 -1.3,-0.84 z"
           id="path6822" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 1065.2,420.92 -0.1,0.04 0,0.04 0,0.05 0,0.04 0,0.03 0,0.04 0,0.04 0,0.03 0,0.04 0,0.03 0,0.03 0,0.03 0,0.03 0,0.03 0,0.03 0,0.02 0,0.03 0,0.02 0,0.03 0,0.02 0,0.04 0,0.04 0,0.03 -0.1,0.03 0,0.03 0,0.03 0,0.02 -0.1,0.02 0,0.02 0,0.01 -0.1,0.01 0,0.02 0,0 -0.1,0 0,0.01 0,0 0,0.01 -0.1,0 0,0 0,0 -0.1,0 0,0.01 0,0 -0.1,0 0,0 0,0 -0.1,0 0,0 -0.1,0 0,0 0,0 -0.1,0 c -2.2,-2.2 -5.4,-2.23 -6.8,-2.23 v -1.25 c 0.8,0 3.1,0 5,0.97 v -17.77 c 0,-1.16 0,-1.61 -3.5,-1.61 h -1.3 v -1.25 c 0.7,0.03 4.9,0.14 6.2,0.14 1.1,0 5.5,-0.11 6.3,-0.14 v 1.25 h -1.4 c -3.4,0 -3.4,0.45 -3.4,1.61 z"
           id="path6824" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 1082.8,410.4 0.2,0 0.3,-0.02 0.2,-0.03 0.3,-0.04 0.2,-0.05 0.2,-0.06 0.3,-0.07 0.2,-0.08 0.2,-0.1 0.2,-0.1 0.2,-0.12 0.2,-0.12 0.1,-0.14 0.2,-0.15 0.2,-0.16 0.1,-0.17 0.2,-0.18 0.1,-0.19 0.2,-0.2 0.1,-0.22 0.1,-0.22 0.1,-0.24 0.1,-0.24 0.1,-0.26 0.1,-0.27 0.1,-0.28 0,-0.29 0.1,-0.3 0,-0.31 0,-0.32 0.1,-0.33 0,-0.35 c 0,-4.33 -2.6,-5.61 -4.6,-5.61 -1.4,0 -4.4,0.38 -5.9,2.44 1.6,0.06 2,1.22 2,1.95 0,1.11 -0.8,1.91 -1.9,1.91 -1,0 -1.9,-0.59 -1.9,-2.02 0,-3.28 3.6,-5.4 7.8,-5.4 4.8,0 8.2,3.25 8.2,6.73 0,2.72 -2.2,5.44 -6.1,6.24 3.7,1.33 5,3.93 5,6.06 0,2.75 -3.2,4.81 -7,4.81 -3.9,0 -6.9,-1.89 -6.9,-4.67 0,-1.19 0.8,-1.84 1.9,-1.84 1,0 1.7,0.79 1.7,1.76 0,1.02 -0.7,1.75 -1.7,1.81 1.2,1.55 3.6,1.93 4.9,1.93 1.5,0 3.7,-0.77 3.7,-3.8 0,-1.47 -0.5,-3.06 -1.4,-4.14 -1.1,-1.33 -2.1,-1.41 -3.8,-1.5 -0.9,-0.08 -1,-0.08 -1.1,-0.11 -0.1,0 -0.4,-0.06 -0.4,-0.45 0,-0.49 0.3,-0.49 0.9,-0.49 z"
           id="path6826" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 1105,417.71 0.2,0.01 0.1,0 0.2,0 0.2,0 0.2,0.01 0.2,0 0.2,0.01 0.2,0.01 0.2,0.01 0.2,0.01 0.3,0.01 0.2,0.02 0.3,0.02 0.2,0.02 0.6,0.05 0.5,0.07 0.5,0.07 0.6,0.1 0.5,0.11 0.6,0.12 0.2,0.07 0.3,0.08 0.2,0.08 0.3,0.08 0.2,0.09 0.3,0.1 c 3.4,1.5 3.7,4.43 3.7,5.12 0,2.2 -1.9,4.23 -5.3,4.23 v -1.09 c 2.3,0 3.7,-1.44 3.7,-3.14 0,-5.17 -8,-5.17 -10.1,-5.17 h -2 c 1.9,7.56 7.1,8.31 8.4,8.31 v 1.09 c -5.6,0 -13.1,-4.82 -13.1,-13.54 0,-5.08 2.9,-9.02 7.8,-9.02 7.1,0 11.3,5.28 11.3,5.88 0,0.29 -0.3,0.65 -0.5,0.65 -0.3,0 -0.4,-0.11 -0.7,-0.5 -4,-4.93 -9.4,-4.93 -10,-4.93 -3.8,0 -4.3,4.18 -4.3,5.78 0,0.59 0,2.14 0.8,5.18 z"
           id="path6828" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 1124.7,401.82 0.2,0.17 0.2,0.17 0.1,0.16 0.2,0.17 0.2,0.17 0.1,0.09 0.1,0.1 0.1,0.09 0.1,0.1 0.1,0.1 0.1,0.11 0.1,0.11 0.2,0.11 0.1,0.12 0.1,0.13 0.2,0.13 0.2,0.14 0.1,0.14 0.2,0.15 0.2,0.16 0.2,0.16 0.2,0.17 0.2,0.18 0.2,0.19 0.3,0.2 0.3,0.21 0.2,0.21 c 0.8,0.6 3.4,2.69 4.4,3.66 2.1,2.09 3.4,3.87 3.4,4.29 0,0.41 -0.4,0.41 -0.6,0.41 -0.3,0 -0.4,-0.06 -0.6,-0.34 -1,-1.6 -1.8,-2.13 -2.6,-2.13 -0.4,0 -1,0.03 -2,1.05 -1.2,1.19 -1.9,1.42 -2.7,1.42 -2.8,0 -4.7,-3.03 -4.7,-4.06 0,-0.33 0.3,-0.42 0.6,-0.42 0.4,0 0.5,0.09 0.6,0.48 0.5,1.22 2.5,1.3 3.1,1.3 0.7,0 1.7,-0.22 2.1,-0.33 2,-0.41 2.2,-0.41 3.1,-0.41 -0.9,-0.95 -1.6,-1.57 -4.9,-4.22 -2.7,-2.15 -3.6,-3.03 -4.3,-3.73 -2.1,-2.05 -3.1,-3.58 -3.1,-3.91 0,-0.4 0.5,-0.4 0.6,-0.4 0.3,0 0.4,0.06 0.6,0.34 0.9,1.33 2,2.13 3.2,2.13 0.4,0 0.9,-0.03 1.9,-0.91 1.1,-1.05 1.8,-1.56 2.9,-1.56 3.7,0 6,4.22 6,5.39 0,0.42 -0.4,0.45 -0.6,0.45 -0.4,0 -0.5,-0.17 -0.6,-0.55 -0.7,-1.75 -2.7,-2.57 -4.4,-2.57 -0.8,0 -1.7,0.17 -2.5,0.37 -1.7,0.35 -1.9,0.35 -2.6,0.35 0,0 -0.6,0 -0.8,-0.04 z"
           id="path6830" /><path
           style="fill:#000000;stroke-width:0"
           inkscape:connector-curvature="0"
           d="m 1145.3,401.82 0.1,0.17 0.2,0.17 0.2,0.16 0.1,0.17 0.2,0.17 0.1,0.09 0.1,0.1 0.1,0.09 0.1,0.1 0.1,0.1 0.1,0.11 0.2,0.11 0.1,0.11 0.1,0.12 0.2,0.13 0.1,0.13 0.2,0.14 0.1,0.14 0.2,0.15 0.2,0.16 0.2,0.16 0.2,0.17 0.2,0.18 0.3,0.19 0.2,0.2 0.3,0.21 0.2,0.21 c 0.8,0.6 3.4,2.69 4.4,3.66 2.1,2.09 3.5,3.87 3.5,4.29 0,0.41 -0.5,0.41 -0.6,0.41 -0.3,0 -0.5,-0.06 -0.6,-0.34 -1.1,-1.6 -1.8,-2.13 -2.7,-2.13 -0.4,0 -0.9,0.03 -2,1.05 -1.1,1.19 -1.9,1.42 -2.7,1.42 -2.8,0 -4.7,-3.03 -4.7,-4.06 0,-0.33 0.4,-0.42 0.6,-0.42 0.4,0 0.5,0.09 0.6,0.48 0.6,1.22 2.5,1.3 3.1,1.3 0.8,0 1.7,-0.22 2.2,-0.33 1.9,-0.41 2.1,-0.41 3,-0.41 -0.9,-0.95 -1.5,-1.57 -4.9,-4.22 -2.7,-2.15 -3.6,-3.03 -4.3,-3.73 -2.1,-2.05 -3.1,-3.58 -3.1,-3.91 0,-0.4 0.5,-0.4 0.6,-0.4 0.4,0 0.4,0.06 0.6,0.34 1,1.33 2,2.13 3.2,2.13 0.4,0 0.9,-0.03 1.9,-0.91 1.1,-1.05 1.8,-1.56 2.9,-1.56 3.7,0 6.1,4.22 6.1,5.39 0,0.42 -0.4,0.45 -0.6,0.45 -0.5,0 -0.5,-0.17 -0.7,-0.55 -0.6,-1.75 -2.7,-2.57 -4.4,-2.57 -0.8,0 -1.7,0.17 -2.5,0.37 -1.6,0.35 -1.9,0.35 -2.5,0.35 -0.1,0 -0.6,0 -0.8,-0.04 z"
           id="path6832" /></g>    </g>
    <g
       id="g7158"
       transform="translate(-100.1996,71.143688)">
      <g
         word-spacing="normal"
         letter-spacing="normal"
         font-size-adjust="none"
         font-stretch="normal"
         font-weight="normal"
         font-variant="normal"
         font-style="normal"
         stroke-miterlimit="10.433"
         xml:space="preserve"
         transform="matrix(1.0629921,0,0,-1.0629921,-186.02362,789.27165)"
         id="g7160"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;letter-spacing:normal;word-spacing:normal;text-anchor:start;fill:none;stroke:#000000;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10.43299961;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0"><path
           id="path7162"
           d="m 481.33,424.78 0.07,0 0.07,0 0.07,0 0.08,0 0.09,0 0.09,0.01 0.09,0 0.09,0.01 0.1,0.01 0.1,0.02 0.1,0.02 0.11,0.02 0.1,0.02 0.1,0.03 0.1,0.03 0.1,0.04 0.1,0.04 0.1,0.05 0.09,0.05 0.09,0.06 0.08,0.07 0.08,0.07 0.04,0.04 0.04,0.04 0.03,0.04 0.04,0.05 0.03,0.04 0.03,0.05 0.03,0.05 0.03,0.05 0.03,0.05 0.02,0.06 0.02,0.06 0.02,0.06 0.02,0.06 0.02,0.06 0.01,0.07 0.01,0.07 0.01,0.07 0,0.08 0.01,0.07 0,0.08 c 0,1.19 -1.05,1.19 -1.94,1.19 h -11.36 c -7.53,0 -13.06,-8.22 -13.06,-14.14 0,-4.39 2.94,-7.88 7.47,-7.88 l 0.06,1.1 c -2.45,0 -4.44,1.79 -4.44,5.37 0,1.5 0.6,5.59 2.35,8.53 2.09,3.44 5.08,4.13 6.76,4.13 4.19,0 4.6,-3.28 4.6,-4.83 0,-2.34 -1,-6.42 -2.69,-8.97 -1.95,-2.94 -4.64,-4.23 -6.58,-4.23 h 0 l -0.06,-1.1 c 5.89,0 12.51,6.03 12.51,13.71 0,0.84 0,3.23 -1.54,5.42 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7164"
           d="m 489.82,401.82 0.17,0.17 0.16,0.17 0.17,0.16 0.17,0.17 0.18,0.17 0.09,0.09 0.1,0.1 0.1,0.09 0.11,0.1 0.11,0.1 0.12,0.11 0.12,0.11 0.13,0.11 0.13,0.12 0.15,0.13 0.15,0.13 0.16,0.14 0.17,0.14 0.18,0.15 0.18,0.16 0.2,0.16 0.21,0.17 0.22,0.18 0.23,0.19 0.25,0.2 0.25,0.21 0.27,0.21 c 0.74,0.6 3.35,2.69 4.36,3.66 2.13,2.09 3.46,3.87 3.46,4.29 0,0.41 -0.46,0.41 -0.6,0.41 -0.31,0 -0.42,-0.06 -0.59,-0.34 -1.08,-1.6 -1.81,-2.13 -2.64,-2.13 -0.42,0 -0.95,0.03 -2,1.05 -1.17,1.19 -1.94,1.42 -2.75,1.42 -2.78,0 -4.67,-3.03 -4.67,-4.06 0,-0.33 0.36,-0.42 0.59,-0.42 0.42,0 0.5,0.09 0.63,0.48 0.53,1.22 2.48,1.3 3.04,1.3 0.8,0 1.71,-0.22 2.19,-0.33 1.92,-0.41 2.16,-0.41 3.03,-0.41 -0.9,-0.95 -1.53,-1.57 -4.84,-4.22 -2.72,-2.15 -3.66,-3.03 -4.31,-3.73 -2.1,-2.05 -3.11,-3.58 -3.11,-3.91 0,-0.4 0.45,-0.4 0.59,-0.4 0.34,0 0.42,0.06 0.59,0.34 0.94,1.33 2.02,2.13 3.21,2.13 0.42,0 0.93,-0.03 1.87,-0.91 1.1,-1.05 1.78,-1.56 2.91,-1.56 3.72,0 6.06,4.22 6.06,5.39 0,0.42 -0.39,0.45 -0.59,0.45 -0.43,0 -0.5,-0.17 -0.63,-0.55 -0.67,-1.75 -2.72,-2.57 -4.44,-2.57 -0.79,0 -1.67,0.17 -2.53,0.37 -1.61,0.35 -1.89,0.35 -2.51,0.35 -0.08,0 -0.6,0 -0.8,-0.04 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7166"
           d="m 510.34,401.82 0.16,0.17 0.17,0.17 0.16,0.16 0.17,0.17 0.18,0.17 0.1,0.09 0.09,0.1 0.11,0.09 0.1,0.1 0.11,0.1 0.12,0.11 0.12,0.11 0.13,0.11 0.14,0.12 0.14,0.13 0.15,0.13 0.16,0.14 0.17,0.14 0.18,0.15 0.19,0.16 0.2,0.16 0.21,0.17 0.22,0.18 0.23,0.19 0.24,0.2 0.26,0.21 0.27,0.21 c 0.73,0.6 3.34,2.69 4.36,3.66 2.12,2.09 3.45,3.87 3.45,4.29 0,0.41 -0.45,0.41 -0.59,0.41 -0.31,0 -0.42,-0.06 -0.59,-0.34 -1.08,-1.6 -1.82,-2.13 -2.65,-2.13 -0.42,0 -0.95,0.03 -2,1.05 -1.17,1.19 -1.93,1.42 -2.75,1.42 -2.78,0 -4.67,-3.03 -4.67,-4.06 0,-0.33 0.36,-0.42 0.6,-0.42 0.42,0 0.5,0.09 0.62,0.48 0.53,1.22 2.49,1.3 3.05,1.3 0.8,0 1.7,-0.22 2.19,-0.33 1.92,-0.41 2.15,-0.41 3.03,-0.41 -0.91,-0.95 -1.53,-1.57 -4.85,-4.22 -2.72,-2.15 -3.65,-3.03 -4.31,-3.73 -2.09,-2.05 -3.11,-3.58 -3.11,-3.91 0,-0.4 0.45,-0.4 0.6,-0.4 0.34,0 0.42,0.06 0.59,0.34 0.94,1.33 2.01,2.13 3.2,2.13 0.42,0 0.94,-0.03 1.88,-0.91 1.09,-1.05 1.78,-1.56 2.9,-1.56 3.72,0 6.07,4.22 6.07,5.39 0,0.42 -0.39,0.45 -0.6,0.45 -0.42,0 -0.5,-0.17 -0.62,-0.55 -0.67,-1.75 -2.72,-2.57 -4.44,-2.57 -0.8,0 -1.67,0.17 -2.53,0.37 -1.61,0.35 -1.89,0.35 -2.52,0.35 -0.08,0 -0.59,0 -0.79,-0.04 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7168"
           d="m 575.55,422.5 0.14,0 0.15,0 0.14,0 0.08,0.01 0.07,0 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.01 0.07,0.02 0.06,0.02 0.06,0.02 0.06,0.02 0.06,0.03 0.06,0.03 0.05,0.04 0.05,0.03 0.05,0.05 0.04,0.04 0.04,0.05 0.02,0.03 0.02,0.03 0.01,0.02 0.02,0.03 0.01,0.03 0.02,0.04 0.01,0.03 0.01,0.04 0.01,0.03 0.01,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0,0.04 0,0.05 c 0,1 -0.95,1 -1.64,1 h -29.84 c -0.71,0 -1.64,0 -1.64,-1 0,-0.98 0.93,-0.98 1.68,-0.98 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7170"
           d="m 575.6,412.82 0.07,0 0.06,0 0.14,0.01 0.14,0 0.07,0 0.07,0.01 0.07,0.01 0.07,0 0.07,0.01 0.06,0.02 0.07,0.01 0.06,0.02 0.07,0.02 0.06,0.02 0.06,0.02 0.06,0.03 0.05,0.03 0.05,0.04 0.05,0.04 0.05,0.04 0.04,0.05 0.02,0.02 0.02,0.03 0.02,0.02 0.02,0.03 0.01,0.03 0.02,0.03 0.01,0.03 0.02,0.03 0.01,0.04 0.01,0.03 0.01,0.04 0.01,0.04 0.01,0.04 0,0.04 0.01,0.04 0,0.04 0,0.05 0,0.04 c 0,1 -0.95,1 -1.69,1 H 545.8 c -0.75,0 -1.68,0 -1.68,-1 0,-1 0.93,-1 1.64,-1 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7172"
           d="m 602.8,411.93 -0.19,-0.3 -0.18,-0.29 -0.19,-0.28 -0.19,-0.26 -0.18,-0.25 -0.19,-0.23 -0.19,-0.22 -0.18,-0.21 -0.19,-0.2 -0.19,-0.18 -0.18,-0.17 -0.19,-0.16 -0.19,-0.15 -0.18,-0.14 -0.19,-0.13 -0.19,-0.12 -0.19,-0.11 -0.19,-0.1 -0.19,-0.09 -0.19,-0.09 -0.19,-0.07 -0.2,-0.07 -0.19,-0.07 -0.2,-0.05 -0.19,-0.05 -0.2,-0.04 -0.2,-0.04 -0.19,-0.03 -0.41,-0.05 -0.4,-0.03 c -0.61,-0.05 -1.05,-0.05 -1.05,-1 0,-0.3 0.25,-0.55 0.64,-0.55 1.34,0 2.89,0.16 4.28,0.16 1.64,0 3.39,-0.16 4.98,-0.16 0.3,0 0.96,0 0.96,0.95 0,0.55 -0.46,0.6 -0.8,0.6 -1.16,0.09 -2.34,0.5 -2.34,1.73 0,0.61 0.3,1.16 0.68,1.84 l 3.8,6.39 h 12.5 l -0.14,1.54 h -11.42 l 9.83,16.45 1.59,-16.45 0.14,-1.54 c 0.11,-1.04 0.8,-7.82 0.8,-8.32 0,-1.5 -2.6,-1.64 -3.58,-1.64 -0.7,0 -1.2,0 -1.2,-1 0,-0.55 0.59,-0.55 0.7,-0.55 2.03,0 4.19,0.16 6.22,0.16 1.25,0 4.39,-0.16 5.64,-0.16 0.3,0 0.89,0 0.89,1 0,0.55 -0.5,0.55 -1.14,0.55 -3.09,0 -3.09,0.34 -3.25,1.79 l -3.03,31.13 c -0.11,1 -0.11,1.2 -0.95,1.2 -0.8,0 -0.99,-0.34 -1.3,-0.84 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7174"
           d="m 642.87,420.92 0,0.04 0,0.04 0,0.05 0,0.04 0,0.03 0,0.04 0,0.04 0,0.03 -0.01,0.04 0,0.03 0,0.03 0,0.03 0,0.03 -0.01,0.03 0,0.03 0,0.02 -0.01,0.03 0,0.02 -0.01,0.03 0,0.02 -0.02,0.04 -0.01,0.04 -0.02,0.03 -0.02,0.03 -0.02,0.03 -0.02,0.03 -0.03,0.02 -0.03,0.02 -0.03,0.02 -0.04,0.01 -0.04,0.01 -0.05,0.02 -0.02,0 -0.02,0 -0.03,0.01 -0.03,0 -0.02,0.01 -0.03,0 -0.03,0 -0.03,0 -0.04,0 -0.03,0.01 -0.03,0 -0.04,0 -0.03,0 -0.04,0 -0.04,0 -0.04,0 -0.04,0 -0.05,0 -0.04,0 -0.05,0 c -2.23,-2.2 -5.39,-2.23 -6.82,-2.23 v -1.25 c 0.84,0 3.14,0 5.04,0.97 v -17.77 c 0,-1.16 0,-1.61 -3.48,-1.61 h -1.31 v -1.25 c 0.62,0.03 4.9,0.14 6.2,0.14 1.08,0 5.47,-0.11 6.23,-0.14 v 1.25 h -1.33 c -3.48,0 -3.48,0.45 -3.48,1.61 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7176"
           d="m 660.51,410.4 0.25,0 0.25,-0.02 0.25,-0.03 0.23,-0.04 0.24,-0.05 0.22,-0.06 0.22,-0.07 0.22,-0.08 0.21,-0.1 0.2,-0.1 0.2,-0.12 0.18,-0.12 0.19,-0.14 0.17,-0.15 0.17,-0.16 0.16,-0.17 0.15,-0.18 0.14,-0.19 0.14,-0.2 0.12,-0.22 0.12,-0.22 0.11,-0.24 0.1,-0.24 0.09,-0.26 0.08,-0.27 0.07,-0.28 0.06,-0.29 0.04,-0.3 0.04,-0.31 0.03,-0.32 0.02,-0.33 0,-0.35 c 0,-4.33 -2.51,-5.61 -4.53,-5.61 -1.39,0 -4.47,0.38 -5.92,2.44 1.62,0.06 2.02,1.22 2.02,1.95 0,1.11 -0.85,1.91 -1.93,1.91 -0.97,0 -1.95,-0.59 -1.95,-2.02 0,-3.28 3.63,-5.4 7.85,-5.4 4.84,0 8.18,3.25 8.18,6.73 0,2.72 -2.22,5.44 -6.06,6.24 3.66,1.33 4.98,3.93 4.98,6.06 0,2.75 -3.17,4.81 -7.03,4.81 -3.87,0 -6.82,-1.89 -6.82,-4.67 0,-1.19 0.76,-1.84 1.81,-1.84 1.07,0 1.76,0.79 1.76,1.76 0,1.02 -0.69,1.75 -1.76,1.81 1.22,1.55 3.61,1.93 4.9,1.93 1.57,0 3.77,-0.77 3.77,-3.8 0,-1.47 -0.48,-3.06 -1.39,-4.14 -1.16,-1.33 -2.13,-1.41 -3.88,-1.5 -0.87,-0.08 -0.93,-0.08 -1.11,-0.11 -0.07,0 -0.35,-0.06 -0.35,-0.45 0,-0.49 0.31,-0.49 0.9,-0.49 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7178"
           d="m 682.75,417.71 0.15,0.01 0.15,0 0.17,0 0.18,0 0.19,0.01 0.19,0 0.21,0.01 0.22,0.01 0.22,0.01 0.24,0.01 0.24,0.01 0.24,0.02 0.25,0.02 0.26,0.02 0.52,0.05 0.54,0.07 0.54,0.07 0.54,0.1 0.54,0.11 0.54,0.12 0.26,0.07 0.26,0.08 0.25,0.08 0.25,0.08 0.24,0.09 0.24,0.1 c 3.48,1.5 3.73,4.43 3.73,5.12 0,2.2 -1.89,4.23 -5.33,4.23 v -1.09 c 2.35,0 3.69,-1.44 3.69,-3.14 0,-5.17 -7.97,-5.17 -10.01,-5.17 h -2.05 c 1.95,7.56 7.08,8.31 8.37,8.31 v 1.09 c -5.53,0 -13.04,-4.82 -13.04,-13.54 0,-5.08 2.94,-9.02 7.81,-9.02 7.13,0 11.31,5.28 11.31,5.88 0,0.29 -0.29,0.65 -0.59,0.65 -0.25,0 -0.34,-0.11 -0.66,-0.5 -3.93,-4.93 -9.36,-4.93 -9.95,-4.93 -3.89,0 -4.34,4.18 -4.34,5.78 0,0.59 0.04,2.14 0.79,5.18 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7180"
           d="m 705.27,402.45 -0.03,-0.11 -0.04,-0.12 -0.04,-0.12 -0.05,-0.12 -0.06,-0.12 -0.05,-0.13 -0.07,-0.13 -0.06,-0.12 -0.07,-0.13 -0.08,-0.13 -0.08,-0.13 -0.09,-0.12 -0.08,-0.13 -0.1,-0.12 -0.09,-0.12 -0.11,-0.12 -0.1,-0.12 -0.11,-0.11 -0.12,-0.1 -0.11,-0.1 -0.13,-0.1 -0.12,-0.09 -0.13,-0.08 -0.14,-0.08 -0.13,-0.07 -0.14,-0.06 -0.15,-0.05 -0.15,-0.05 -0.15,-0.04 -0.16,-0.02 -0.16,-0.02 -0.16,0 c -0.11,0 -1.16,0 -1.89,0.48 1.43,0.45 1.53,1.72 1.53,1.92 0,0.77 -0.6,1.3 -1.39,1.3 -0.97,0 -1.99,-0.84 -1.99,-2.14 0,-1.74 1.96,-2.53 3.66,-2.53 1.61,0 3.03,1 3.91,2.47 0.82,-1.85 2.75,-2.47 4.14,-2.47 4.01,0 6.14,4.34 6.14,5.33 0,0.45 -0.46,0.45 -0.57,0.45 -0.48,0 -0.51,-0.17 -0.65,-0.59 -0.74,-2.41 -2.83,-4.22 -4.78,-4.22 -1.39,0 -2.13,0.93 -2.13,2.26 0,0.91 0.85,4.08 1.81,7.96 0.71,2.67 2.27,3.54 3.43,3.54 0.06,0 1.14,0 1.87,-0.48 -1.11,-0.31 -1.53,-1.3 -1.53,-1.92 0,-0.77 0.59,-1.29 1.39,-1.29 0.81,0 1.95,0.66 1.95,2.13 0,1.95 -2.23,2.53 -3.62,2.53 -1.74,0 -3.14,-1.14 -3.91,-2.47 -0.62,1.44 -2.22,2.47 -4.17,2.47 -3.91,0 -6.14,-4.28 -6.14,-5.33 0,-0.45 0.5,-0.45 0.59,-0.45 0.46,0 0.49,0.14 0.68,0.59 0.86,2.72 3.06,4.22 4.76,4.22 1.16,0 2.1,-0.62 2.1,-2.29 0,-0.71 -0.43,-2.44 -0.74,-3.63 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7182"
           d="m 727.83,402.45 -0.03,-0.11 -0.04,-0.12 -0.05,-0.12 -0.04,-0.12 -0.06,-0.12 -0.06,-0.13 -0.06,-0.13 -0.07,-0.12 -0.07,-0.13 -0.07,-0.13 -0.08,-0.13 -0.09,-0.12 -0.09,-0.13 -0.09,-0.12 -0.1,-0.12 -0.1,-0.12 -0.1,-0.12 -0.11,-0.11 -0.12,-0.1 -0.12,-0.1 -0.12,-0.1 -0.12,-0.09 -0.13,-0.08 -0.14,-0.08 -0.13,-0.07 -0.15,-0.06 -0.14,-0.05 -0.15,-0.05 -0.15,-0.04 -0.16,-0.02 -0.16,-0.02 -0.16,0 c -0.11,0 -1.16,0 -1.89,0.48 1.43,0.45 1.53,1.72 1.53,1.92 0,0.77 -0.6,1.3 -1.39,1.3 -0.97,0 -1.99,-0.84 -1.99,-2.14 0,-1.74 1.95,-2.53 3.66,-2.53 1.61,0 3.03,1 3.91,2.47 0.82,-1.85 2.75,-2.47 4.13,-2.47 4.02,0 6.15,4.34 6.15,5.33 0,0.45 -0.46,0.45 -0.57,0.45 -0.48,0 -0.51,-0.17 -0.65,-0.59 -0.74,-2.41 -2.83,-4.22 -4.78,-4.22 -1.4,0 -2.13,0.93 -2.13,2.26 0,0.91 0.85,4.08 1.81,7.96 0.71,2.67 2.27,3.54 3.42,3.54 0.07,0 1.15,0 1.88,-0.48 -1.11,-0.31 -1.53,-1.3 -1.53,-1.92 0,-0.77 0.59,-1.29 1.39,-1.29 0.81,0 1.95,0.66 1.95,2.13 0,1.95 -2.23,2.53 -3.62,2.53 -1.74,0 -3.14,-1.14 -3.91,-2.47 -0.62,1.44 -2.22,2.47 -4.17,2.47 -3.91,0 -6.14,-4.28 -6.14,-5.33 0,-0.45 0.5,-0.45 0.59,-0.45 0.46,0 0.49,0.14 0.68,0.59 0.85,2.72 3.06,4.22 4.76,4.22 1.16,0 2.09,-0.62 2.09,-2.29 0,-0.71 -0.42,-2.44 -0.73,-3.63 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7184"
           d="m 775.77,417.65 h 13.91 c 0.69,0 1.64,0 1.64,1 0,1 -0.95,1 -1.64,1 h -13.91 v 13.96 c 0,0.68 0,1.64 -1,1.64 -0.98,0 -0.98,-0.96 -0.98,-1.64 v -13.96 h -13.95 c -0.71,0 -1.64,0 -1.64,-1 0,-1 0.93,-1 1.64,-1 h 13.95 v -13.94 c 0,-0.7 0,-1.65 0.98,-1.65 1,0 1,0.95 1,1.65 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7186"
           d="m 814.12,411.93 -0.19,-0.3 -0.18,-0.29 -0.19,-0.28 -0.19,-0.26 -0.18,-0.25 -0.19,-0.23 -0.19,-0.22 -0.18,-0.21 -0.19,-0.2 -0.19,-0.18 -0.18,-0.17 -0.19,-0.16 -0.19,-0.15 -0.18,-0.14 -0.19,-0.13 -0.19,-0.12 -0.19,-0.11 -0.19,-0.1 -0.19,-0.09 -0.19,-0.09 -0.19,-0.07 -0.2,-0.07 -0.19,-0.07 -0.2,-0.05 -0.19,-0.05 -0.2,-0.04 -0.2,-0.04 -0.19,-0.03 -0.41,-0.05 -0.4,-0.03 c -0.61,-0.05 -1.05,-0.05 -1.05,-1 0,-0.3 0.25,-0.55 0.64,-0.55 1.34,0 2.89,0.16 4.28,0.16 1.64,0 3.39,-0.16 4.98,-0.16 0.3,0 0.96,0 0.96,0.95 0,0.55 -0.46,0.6 -0.8,0.6 -1.16,0.09 -2.34,0.5 -2.34,1.73 0,0.61 0.3,1.16 0.68,1.84 l 3.8,6.39 h 12.5 l -0.14,1.54 h -11.42 l 9.83,16.45 1.59,-16.45 0.14,-1.54 c 0.11,-1.04 0.8,-7.82 0.8,-8.32 0,-1.5 -2.6,-1.64 -3.58,-1.64 -0.7,0 -1.2,0 -1.2,-1 0,-0.55 0.59,-0.55 0.7,-0.55 2.03,0 4.19,0.16 6.22,0.16 1.25,0 4.39,-0.16 5.64,-0.16 0.3,0 0.89,0 0.89,1 0,0.55 -0.5,0.55 -1.14,0.55 -3.09,0 -3.09,0.34 -3.25,1.79 l -3.03,31.13 c -0.11,1 -0.11,1.2 -0.95,1.2 -0.8,0 -0.99,-0.34 -1.3,-0.84 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7188"
           d="m 854.19,420.92 0,0.04 0,0.04 0,0.05 0,0.04 0,0.03 0,0.04 0,0.04 0,0.03 -0.01,0.04 0,0.03 0,0.03 0,0.03 0,0.03 -0.01,0.03 0,0.03 0,0.02 -0.01,0.03 0,0.02 -0.01,0.03 0,0.02 -0.02,0.04 -0.01,0.04 -0.02,0.03 -0.02,0.03 -0.02,0.03 -0.02,0.03 -0.03,0.02 -0.03,0.02 -0.03,0.02 -0.04,0.01 -0.04,0.01 -0.05,0.02 -0.02,0 -0.02,0 -0.03,0.01 -0.03,0 -0.02,0.01 -0.03,0 -0.03,0 -0.03,0 -0.03,0 -0.04,0.01 -0.03,0 -0.04,0 -0.03,0 -0.04,0 -0.04,0 -0.04,0 -0.04,0 -0.05,0 -0.04,0 -0.04,0 c -2.24,-2.2 -5.4,-2.23 -6.83,-2.23 v -1.25 c 0.84,0 3.14,0 5.04,0.97 v -17.77 c 0,-1.16 0,-1.61 -3.48,-1.61 h -1.31 v -1.25 c 0.62,0.03 4.9,0.14 6.2,0.14 1.08,0 5.47,-0.11 6.23,-0.14 v 1.25 h -1.32 c -3.49,0 -3.49,0.45 -3.49,1.61 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7190"
           d="m 871.83,410.4 0.25,0 0.25,-0.02 0.25,-0.03 0.23,-0.04 0.24,-0.05 0.22,-0.06 0.22,-0.07 0.22,-0.08 0.21,-0.1 0.2,-0.1 0.2,-0.12 0.19,-0.12 0.18,-0.14 0.17,-0.15 0.17,-0.16 0.16,-0.17 0.15,-0.18 0.14,-0.19 0.14,-0.2 0.12,-0.22 0.12,-0.22 0.11,-0.24 0.1,-0.24 0.09,-0.26 0.08,-0.27 0.07,-0.28 0.06,-0.29 0.04,-0.3 0.04,-0.31 0.03,-0.32 0.02,-0.33 0,-0.35 c 0,-4.33 -2.51,-5.61 -4.53,-5.61 -1.39,0 -4.47,0.38 -5.92,2.44 1.63,0.06 2.02,1.22 2.02,1.95 0,1.11 -0.85,1.91 -1.92,1.91 -0.97,0 -1.96,-0.59 -1.96,-2.02 0,-3.28 3.63,-5.4 7.84,-5.4 4.85,0 8.19,3.25 8.19,6.73 0,2.72 -2.22,5.44 -6.06,6.24 3.66,1.33 4.99,3.93 4.99,6.06 0,2.75 -3.18,4.81 -7.04,4.81 -3.87,0 -6.83,-1.89 -6.83,-4.67 0,-1.19 0.77,-1.84 1.82,-1.84 1.08,0 1.76,0.79 1.76,1.76 0,1.02 -0.68,1.75 -1.76,1.81 1.22,1.55 3.61,1.93 4.9,1.93 1.57,0 3.77,-0.77 3.77,-3.8 0,-1.47 -0.49,-3.06 -1.39,-4.14 -1.16,-1.33 -2.13,-1.41 -3.88,-1.5 -0.87,-0.08 -0.93,-0.08 -1.1,-0.11 -0.08,0 -0.37,-0.06 -0.37,-0.45 0,-0.49 0.32,-0.49 0.91,-0.49 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7192"
           d="m 894.07,417.71 0.15,0.01 0.15,0 0.17,0 0.18,0 0.19,0.01 0.19,0 0.21,0.01 0.22,0.01 0.22,0.01 0.24,0.01 0.23,0.01 0.25,0.02 0.25,0.02 0.26,0.02 0.52,0.05 0.54,0.07 0.54,0.07 0.54,0.1 0.54,0.11 0.54,0.12 0.26,0.07 0.26,0.08 0.25,0.08 0.25,0.08 0.24,0.09 0.24,0.1 c 3.48,1.5 3.73,4.43 3.73,5.12 0,2.2 -1.89,4.23 -5.33,4.23 v -1.09 c 2.35,0 3.69,-1.44 3.69,-3.14 0,-5.17 -7.97,-5.17 -10.01,-5.17 h -2.05 c 1.95,7.56 7.08,8.31 8.37,8.31 v 1.09 c -5.53,0 -13.04,-4.82 -13.04,-13.54 0,-5.08 2.94,-9.02 7.81,-9.02 7.13,0 11.31,5.28 11.31,5.88 0,0.29 -0.29,0.65 -0.59,0.65 -0.25,0 -0.34,-0.11 -0.66,-0.5 -3.93,-4.93 -9.36,-4.93 -9.95,-4.93 -3.89,0 -4.34,4.18 -4.34,5.78 0,0.59 0.04,2.14 0.79,5.18 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7194"
           d="m 927.3,411.9 0,0.02 0.01,0.03 0.01,0.02 0,0.02 0.01,0.02 0,0.02 0.01,0.04 0.01,0.03 0.01,0.03 0.01,0.04 0.01,0.03 0.01,0.02 0,0.03 0.01,0.03 0,0.02 0.01,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0,0.03 0.01,0.03 0,0.04 0,0.03 0,0.02 0,0.02 0,0.02 0,0.02 c 0,0.69 -0.56,1.11 -1.16,1.11 -0.37,0 -1.05,-0.17 -1.42,-0.83 -0.11,-0.22 -0.39,-1.33 -0.56,-2.03 l -0.74,-2.89 c -0.2,-0.83 -1.28,-5.22 -1.39,-5.61 -0.03,0 -1.56,-3.03 -4.28,-3.03 -2.37,0 -2.37,2.26 -2.37,2.89 0,1.89 0.79,4.08 1.84,6.76 0.42,1.11 0.59,1.53 0.59,2.13 0,1.67 -1.42,2.95 -3.31,2.95 -3.52,0 -5.08,-4.73 -5.08,-5.33 0,-0.45 0.49,-0.45 0.6,-0.45 0.48,0 0.51,0.17 0.62,0.56 0.88,2.89 2.38,4.25 3.77,4.25 0.59,0 0.86,-0.39 0.86,-1.22 0,-0.79 -0.32,-1.56 -0.49,-2.01 -1.67,-4.25 -2.01,-5.55 -2.01,-7.08 0,-0.59 0,-2.23 1.36,-3.34 1.07,-0.91 2.54,-1.08 3.48,-1.08 1.39,0 2.64,0.51 3.8,1.56 -0.46,-1.92 -0.85,-3.37 -2.3,-5.12 -0.94,-1.08 -2.34,-2.22 -4.19,-2.22 -0.23,0 -1.87,0 -2.61,1.14 1.88,0.2 1.88,1.89 1.88,1.92 0,1.11 -1,1.31 -1.36,1.31 -0.86,0 -2.02,-0.69 -2.02,-2.3 0,-1.76 1.67,-3.06 4.14,-3.06 3.53,0 7.82,2.72 8.89,7.08 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7196"
           d="m 948.65,411.9 0.01,0.02 0,0.03 0.01,0.02 0.01,0.02 0,0.02 0.01,0.02 0.01,0.04 0.01,0.03 0.01,0.03 0.01,0.04 0,0.03 0.01,0.02 0.01,0.03 0,0.03 0.01,0.02 0,0.02 0.01,0.02 0,0.02 0.01,0.02 0,0.02 0,0.02 0,0.02 0.01,0.02 0,0.03 0,0.03 0,0.04 0,0.03 0,0.02 0,0.02 0,0.02 0,0.02 c 0,0.69 -0.56,1.11 -1.15,1.11 -0.38,0 -1.05,-0.17 -1.42,-0.83 -0.12,-0.22 -0.4,-1.33 -0.57,-2.03 l -0.73,-2.89 c -0.2,-0.83 -1.28,-5.22 -1.39,-5.61 -0.03,0 -1.56,-3.03 -4.28,-3.03 -2.38,0 -2.38,2.26 -2.38,2.89 0,1.89 0.8,4.08 1.85,6.76 0.42,1.11 0.59,1.53 0.59,2.13 0,1.67 -1.42,2.95 -3.31,2.95 -3.52,0 -5.08,-4.73 -5.08,-5.33 0,-0.45 0.48,-0.45 0.59,-0.45 0.49,0 0.52,0.17 0.63,0.56 0.87,2.89 2.37,4.25 3.76,4.25 0.6,0 0.86,-0.39 0.86,-1.22 0,-0.79 -0.31,-1.56 -0.48,-2.01 -1.68,-4.25 -2.02,-5.55 -2.02,-7.08 0,-0.59 0,-2.23 1.36,-3.34 1.08,-0.91 2.55,-1.08 3.48,-1.08 1.4,0 2.65,0.51 3.8,1.56 -0.45,-1.92 -0.84,-3.37 -2.3,-5.12 -0.93,-1.08 -2.34,-2.22 -4.18,-2.22 -0.24,0 -1.88,0 -2.61,1.14 1.87,0.2 1.87,1.89 1.87,1.92 0,1.11 -1,1.31 -1.36,1.31 -0.85,0 -2.01,-0.69 -2.01,-2.3 0,-1.76 1.67,-3.06 4.14,-3.06 3.53,0 7.81,2.72 8.89,7.08 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7198"
           d="m 984.82,417.65 h 13.9 c 0.69,0 1.68,0 1.68,1 0,1 -0.99,1 -1.68,1 h -13.9 v 13.96 c 0,0.68 0,1.64 -1,1.64 -0.99,0 -0.99,-0.96 -0.99,-1.64 v -13.96 h -13.95 c -0.7,0 -1.64,0 -1.64,-1 0,-1 0.94,-1 1.64,-1 h 13.95 v -13.94 c 0,-0.7 0,-1.65 0.99,-1.65 1,0 1,0.95 1,1.65 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7200"
           d="m 1023.2,411.93 -0.2,-0.3 -0.2,-0.29 -0.2,-0.28 -0.2,-0.26 -0.2,-0.25 -0.2,-0.23 -0.1,-0.22 -0.2,-0.21 -0.2,-0.2 -0.2,-0.18 -0.2,-0.17 -0.2,-0.16 -0.2,-0.15 -0.2,-0.14 -0.1,-0.13 -0.2,-0.12 -0.2,-0.11 -0.2,-0.1 -0.2,-0.09 -0.2,-0.09 -0.2,-0.07 -0.2,-0.07 -0.2,-0.07 -0.2,-0.05 -0.2,-0.05 -0.2,-0.04 -0.2,-0.04 -0.2,-0.03 -0.4,-0.05 -0.4,-0.03 c -0.6,-0.05 -1,-0.05 -1,-1 0,-0.3 0.2,-0.55 0.6,-0.55 1.4,0 2.9,0.16 4.3,0.16 1.6,0 3.4,-0.16 5,-0.16 0.3,0 0.9,0 0.9,0.95 0,0.55 -0.4,0.6 -0.7,0.6 -1.2,0.09 -2.4,0.5 -2.4,1.73 0,0.61 0.3,1.16 0.7,1.84 l 3.8,6.39 h 12.5 l -0.1,1.54 h -11.5 l 9.9,16.45 1.6,-16.45 0.1,-1.54 c 0.1,-1.04 0.8,-7.82 0.8,-8.32 0,-1.5 -2.6,-1.64 -3.6,-1.64 -0.7,0 -1.2,0 -1.2,-1 0,-0.55 0.6,-0.55 0.7,-0.55 2,0 4.2,0.16 6.2,0.16 1.3,0 4.4,-0.16 5.7,-0.16 0.3,0 0.9,0 0.9,1 0,0.55 -0.5,0.55 -1.2,0.55 -3.1,0 -3.1,0.34 -3.2,1.79 l -3.1,31.13 c -0.1,1 -0.1,1.2 -0.9,1.2 -0.8,0 -1,-0.34 -1.3,-0.84 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7202"
           d="m 1061.1,410.4 0.2,0 0.3,-0.02 0.2,-0.03 0.3,-0.04 0.2,-0.05 0.2,-0.06 0.2,-0.07 0.2,-0.08 0.3,-0.1 0.2,-0.1 0.2,-0.12 0.1,-0.12 0.2,-0.14 0.2,-0.15 0.2,-0.16 0.1,-0.17 0.2,-0.18 0.1,-0.19 0.2,-0.2 0.1,-0.22 0.1,-0.22 0.1,-0.24 0.1,-0.24 0.1,-0.26 0.1,-0.27 0.1,-0.28 0,-0.29 0.1,-0.3 0,-0.31 0,-0.32 0,-0.33 0.1,-0.35 c 0,-4.33 -2.6,-5.61 -4.6,-5.61 -1.4,0 -4.4,0.38 -5.9,2.44 1.6,0.06 2,1.22 2,1.95 0,1.11 -0.8,1.91 -1.9,1.91 -1,0 -2,-0.59 -2,-2.02 0,-3.28 3.7,-5.4 7.9,-5.4 4.8,0 8.2,3.25 8.2,6.73 0,2.72 -2.3,5.44 -6.1,6.24 3.7,1.33 5,3.93 5,6.06 0,2.75 -3.2,4.81 -7,4.81 -3.9,0 -6.9,-1.89 -6.9,-4.67 0,-1.19 0.8,-1.84 1.8,-1.84 1.1,0 1.8,0.79 1.8,1.76 0,1.02 -0.7,1.75 -1.8,1.81 1.3,1.55 3.6,1.93 4.9,1.93 1.6,0 3.8,-0.77 3.8,-3.8 0,-1.47 -0.5,-3.06 -1.4,-4.14 -1.1,-1.33 -2.1,-1.41 -3.8,-1.5 -0.9,-0.08 -1,-0.08 -1.2,-0.11 0,0 -0.3,-0.06 -0.3,-0.45 0,-0.49 0.3,-0.49 0.9,-0.49 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7204"
           d="m 1080.9,410.4 0.2,0 0.3,-0.02 0.2,-0.03 0.3,-0.04 0.2,-0.05 0.2,-0.06 0.2,-0.07 0.2,-0.08 0.3,-0.1 0.2,-0.1 0.2,-0.12 0.1,-0.12 0.2,-0.14 0.2,-0.15 0.2,-0.16 0.1,-0.17 0.2,-0.18 0.1,-0.19 0.2,-0.2 0.1,-0.22 0.1,-0.22 0.1,-0.24 0.1,-0.24 0.1,-0.26 0.1,-0.27 0,-0.28 0.1,-0.29 0.1,-0.3 0,-0.31 0,-0.32 0,-0.33 0,-0.35 c 0,-4.33 -2.5,-5.61 -4.5,-5.61 -1.4,0 -4.5,0.38 -5.9,2.44 1.6,0.06 2,1.22 2,1.95 0,1.11 -0.8,1.91 -1.9,1.91 -1,0 -2,-0.59 -2,-2.02 0,-3.28 3.7,-5.4 7.9,-5.4 4.8,0 8.2,3.25 8.2,6.73 0,2.72 -2.3,5.44 -6.1,6.24 3.7,1.33 5,3.93 5,6.06 0,2.75 -3.2,4.81 -7,4.81 -3.9,0 -6.9,-1.89 -6.9,-4.67 0,-1.19 0.8,-1.84 1.8,-1.84 1.1,0 1.8,0.79 1.8,1.76 0,1.02 -0.7,1.75 -1.8,1.81 1.3,1.55 3.7,1.93 4.9,1.93 1.6,0 3.8,-0.77 3.8,-3.8 0,-1.47 -0.5,-3.06 -1.4,-4.14 -1.1,-1.33 -2.1,-1.41 -3.9,-1.5 -0.8,-0.08 -0.9,-0.08 -1.1,-0.11 0,0 -0.3,-0.06 -0.3,-0.45 0,-0.49 0.3,-0.49 0.9,-0.49 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7206"
           d="m 1103.1,417.71 0.2,0.01 0.1,0 0.2,0 0.2,0 0.1,0.01 0.2,0 0.3,0.01 0.2,0.01 0.2,0.01 0.2,0.01 0.3,0.01 0.2,0.02 0.3,0.02 0.2,0.02 0.5,0.05 0.6,0.07 0.5,0.07 0.6,0.1 0.5,0.11 0.5,0.12 0.3,0.07 0.3,0.08 0.2,0.08 0.3,0.08 0.2,0.09 0.2,0.1 c 3.5,1.5 3.8,4.43 3.8,5.12 0,2.2 -1.9,4.23 -5.4,4.23 v -1.09 c 2.4,0 3.7,-1.44 3.7,-3.14 0,-5.17 -7.9,-5.17 -10,-5.17 h -2 c 1.9,7.56 7,8.31 8.3,8.31 v 1.09 c -5.5,0 -13,-4.82 -13,-13.54 0,-5.08 2.9,-9.02 7.8,-9.02 7.1,0 11.3,5.28 11.3,5.88 0,0.29 -0.3,0.65 -0.6,0.65 -0.2,0 -0.3,-0.11 -0.6,-0.5 -4,-4.93 -9.4,-4.93 -10,-4.93 -3.9,0 -4.3,4.18 -4.3,5.78 0,0.59 0,2.14 0.8,5.18 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7208"
           d="m 1122.8,401.82 0.2,0.17 0.2,0.17 0.1,0.16 0.2,0.17 0.2,0.17 0.1,0.09 0.1,0.1 0.1,0.09 0.1,0.1 0.1,0.1 0.1,0.11 0.1,0.11 0.1,0.11 0.2,0.12 0.1,0.13 0.2,0.13 0.1,0.14 0.2,0.14 0.2,0.15 0.2,0.16 0.2,0.16 0.2,0.17 0.2,0.18 0.2,0.19 0.3,0.2 0.2,0.21 0.3,0.21 c 0.7,0.6 3.4,2.69 4.4,3.66 2.1,2.09 3.4,3.87 3.4,4.29 0,0.41 -0.4,0.41 -0.6,0.41 -0.3,0 -0.4,-0.06 -0.6,-0.34 -1.1,-1.6 -1.8,-2.13 -2.6,-2.13 -0.4,0 -1,0.03 -2,1.05 -1.2,1.19 -2,1.42 -2.8,1.42 -2.7,0 -4.6,-3.03 -4.6,-4.06 0,-0.33 0.3,-0.42 0.6,-0.42 0.4,0 0.5,0.09 0.6,0.48 0.5,1.22 2.5,1.3 3,1.3 0.8,0 1.7,-0.22 2.2,-0.33 1.9,-0.41 2.2,-0.41 3,-0.41 -0.9,-0.95 -1.5,-1.57 -4.8,-4.22 -2.7,-2.15 -3.7,-3.03 -4.3,-3.73 -2.1,-2.05 -3.1,-3.58 -3.1,-3.91 0,-0.4 0.4,-0.4 0.6,-0.4 0.3,0 0.4,0.06 0.6,0.34 0.9,1.33 2,2.13 3.2,2.13 0.4,0 0.9,-0.03 1.8,-0.91 1.1,-1.05 1.8,-1.56 3,-1.56 3.7,0 6,4.22 6,5.39 0,0.42 -0.4,0.45 -0.6,0.45 -0.4,0 -0.5,-0.17 -0.6,-0.55 -0.7,-1.75 -2.7,-2.57 -4.4,-2.57 -0.8,0 -1.7,0.17 -2.6,0.37 -1.6,0.35 -1.9,0.35 -2.5,0.35 -0.1,0 -0.6,0 -0.8,-0.04 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /><path
           id="path7210"
           d="m 1143.3,401.82 0.2,0.17 0.2,0.17 0.1,0.16 0.2,0.17 0.2,0.17 0.1,0.09 0.1,0.1 0.1,0.09 0.1,0.1 0.1,0.1 0.1,0.11 0.1,0.11 0.2,0.11 0.1,0.12 0.1,0.13 0.2,0.13 0.2,0.14 0.1,0.14 0.2,0.15 0.2,0.16 0.2,0.16 0.2,0.17 0.2,0.18 0.2,0.19 0.3,0.2 0.3,0.21 0.2,0.21 c 0.8,0.6 3.4,2.69 4.4,3.66 2.1,2.09 3.4,3.87 3.4,4.29 0,0.41 -0.4,0.41 -0.6,0.41 -0.3,0 -0.4,-0.06 -0.6,-0.34 -1,-1.6 -1.8,-2.13 -2.6,-2.13 -0.4,0 -1,0.03 -2,1.05 -1.2,1.19 -1.9,1.42 -2.7,1.42 -2.8,0 -4.7,-3.03 -4.7,-4.06 0,-0.33 0.3,-0.42 0.6,-0.42 0.4,0 0.5,0.09 0.6,0.48 0.5,1.22 2.5,1.3 3.1,1.3 0.7,0 1.6,-0.22 2.1,-0.33 2,-0.41 2.2,-0.41 3.1,-0.41 -0.9,-0.95 -1.6,-1.57 -4.9,-4.22 -2.7,-2.15 -3.6,-3.03 -4.3,-3.73 -2.1,-2.05 -3.1,-3.58 -3.1,-3.91 0,-0.4 0.5,-0.4 0.6,-0.4 0.3,0 0.4,0.06 0.6,0.34 0.9,1.33 2,2.13 3.2,2.13 0.4,0 0.9,-0.03 1.9,-0.91 1.1,-1.05 1.8,-1.56 2.9,-1.56 3.7,0 6,4.22 6,5.39 0,0.42 -0.4,0.45 -0.6,0.45 -0.4,0 -0.5,-0.17 -0.6,-0.55 -0.7,-1.75 -2.7,-2.57 -4.4,-2.57 -0.8,0 -1.7,0.17 -2.5,0.37 -1.7,0.35 -1.9,0.35 -2.6,0.35 0,0 -0.6,0 -0.8,-0.04 z"
           inkscape:connector-curvature="0"
           style="fill:#000000;stroke-width:0" /></g>    </g>
  </g>
  <g
     style="display:none"
     inkscape:label="微分方程式の解法"
     id="layer3"
     inkscape:groupmode="layer">
    <text
       sodipodi:linespacing="125%"
       id="text3032"
       y="108.3802"
       x="91.428574"
       style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
       xml:space="preserve"><tspan
         y="108.3802"
         x="91.428574"
         id="tspan3034"
         sodipodi:role="line" /></text>
    <text
       sodipodi:linespacing="125%"
       id="text3036"
       y="641.16479"
       x="123.24219"
       style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
       xml:space="preserve"><tspan
         y="641.16479"
         x="123.24219"
         id="tspan3038"
         sodipodi:role="line">差分法</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text3040"
       y="640.96948"
       x="422.59766"
       style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
       xml:space="preserve"><tspan
         y="640.96948"
         x="422.59766"
         id="tspan3042"
         sodipodi:role="line">波数積分法</tspan></text>
    <text
       sodipodi:linespacing="125%"
       id="text3044"
       y="641.26245"
       x="797.67578"
       style="font-size:40px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
       xml:space="preserve"><tspan
         y="641.26245"
         x="797.67578"
         id="tspan3046"
         sodipodi:role="line">薄層法</tspan></text>
    <rect
       y="294.09448"
       x="60"
       height="250"
       width="250"
       id="rect3080"
       style="fill:#c87137" />
    <text
       sodipodi:linespacing="125%"
       id="text3122"
       y="138.32886"
       x="194.65625"
       style="font-size:72px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:125%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans"
       xml:space="preserve"><tspan
         y="138.32886"
         x="194.65625"
         id="tspan3124"
         sodipodi:role="line">主な微分方程式の解法</tspan></text>
    <rect
       y="444.35782"
       x="60.263245"
       height="49.473465"
       width="49.530468"
       id="rect3157-1"
       style="fill:none;stroke:#000000;stroke-width:0.5265339;stroke-opacity:1;display:inline" />
    <rect
       y="294.09448"
       x="400"
       height="250"
       width="250"
       id="rect3080-9"
       style="fill:#c87137;display:inline" />
    <rect
       y="494.68069"
       x="400.58621"
       height="48.827572"
       width="248.82756"
       id="rect3157-6"
       style="fill:none;stroke:#000000;stroke-width:1.17242682;stroke-opacity:1;display:inline" />
    <rect
       y="444.68069"
       x="400.58621"
       height="48.827572"
       width="248.82756"
       id="rect3157-1-6"
       style="fill:none;stroke:#000000;stroke-width:1.17242682;stroke-opacity:1;display:inline" />
    <rect
       y="394.68069"
       x="400.58621"
       height="48.827572"
       width="248.82756"
       id="rect3157-1-1-6"
       style="fill:none;stroke:#000000;stroke-width:1.17242682;stroke-opacity:1;display:inline" />
    <rect
       y="344.68069"
       x="400.58621"
       height="48.827572"
       width="248.82756"
       id="rect3157-1-1-0-6"
       style="fill:none;stroke:#000000;stroke-width:1.17242682;stroke-opacity:1;display:inline" />
    <rect
       y="294.68069"
       x="400.58621"
       height="48.827572"
       width="248.82756"
       id="rect3157-1-1-0-9-9"
       style="fill:none;stroke:#000000;stroke-width:1.17242682;stroke-opacity:1;display:inline" />
    <rect
       y="294.09448"
       x="725"
       height="250"
       width="250"
       id="rect3080-9-1"
       style="fill:#c87137;display:inline" />
    <rect
       y="494.68069"
       x="725.58624"
       height="48.827572"
       width="248.82756"
       id="rect3157-6-6"
       style="fill:none;stroke:#000000;stroke-width:1.17242682;stroke-opacity:1;display:inline" />
    <rect
       y="444.68069"
       x="725.58624"
       height="48.827572"
       width="248.82756"
       id="rect3157-1-6-4"
       style="fill:none;stroke:#000000;stroke-width:1.17242682;stroke-opacity:1;display:inline" />
    <rect
       y="394.68069"
       x="725.58624"
       height="48.827572"
       width="248.82756"
       id="rect3157-1-1-6-0"
       style="fill:none;stroke:#000000;stroke-width:1.17242682;stroke-opacity:1;display:inline" />
    <rect
       y="344.68069"
       x="725.58624"
       height="48.827572"
       width="248.82756"
       id="rect3157-1-1-0-6-6"
       style="fill:none;stroke:#000000;stroke-width:1.17242682;stroke-opacity:1;display:inline" />
    <rect
       y="294.68069"
       x="725.58624"
       height="48.827572"
       width="248.82756"
       id="rect3157-1-1-0-9-9-7"
       style="fill:none;stroke:#000000;stroke-width:1.17242682;stroke-opacity:1;display:inline" />
    <rect
       y="493.55774"
       x="60.328266"
       height="49.473465"
       width="49.530468"
       id="rect3157-1-1"
       style="fill:none;stroke:#000000;stroke-width:0.5265339;stroke-opacity:1;display:inline" />
    <rect
       y="394.3576"
       x="60.263119"
       height="49.473766"
       width="49.473766"
       id="rect3157-1-17"
       style="fill:none;stroke:#000000;stroke-width:0.52623403;stroke-opacity:1;display:inline" />
    <rect
       y="344.3576"
       x="60.263119"
       height="49.473766"
       width="49.473766"
       id="rect3157-1-17-4"
       style="fill:none;stroke:#000000;stroke-width:0.52623403;stroke-opacity:1;display:inline" />
    <rect
       y="294.3576"
       x="60.263119"
       height="49.473766"
       width="49.473766"
       id="rect3157-1-17-4-0"
       style="fill:none;stroke:#000000;stroke-width:0.52623403;stroke-opacity:1;display:inline" />
    <rect
       y="445.15787"
       x="110.26327"
       height="49.473465"
       width="49.530468"
       id="rect3157-1-9"
       style="fill:none;stroke:#000000;stroke-width:0.5265339;stroke-opacity:1;display:inline" />
    <rect
       y="494.35776"
       x="110.32829"
       height="49.473465"
       width="49.530468"
       id="rect3157-1-1-4"
       style="fill:none;stroke:#000000;stroke-width:0.5265339;stroke-opacity:1;display:inline" />
    <rect
       y="395.15762"
       x="110.26315"
       height="49.473766"
       width="49.473766"
       id="rect3157-1-17-8"
       style="fill:none;stroke:#000000;stroke-width:0.52623403;stroke-opacity:1;display:inline" />
    <rect
       y="345.15765"
       x="110.26315"
       height="49.473766"
       width="49.473766"
       id="rect3157-1-17-4-8"
       style="fill:none;stroke:#000000;stroke-width:0.52623403;stroke-opacity:1;display:inline" />
    <rect
       y="295.15765"
       x="110.26315"
       height="49.473766"
       width="49.473766"
       id="rect3157-1-17-4-0-2"
       style="fill:none;stroke:#000000;stroke-width:0.52623403;stroke-opacity:1;display:inline" />
    <rect
       y="445.15793"
       x="160.26294"
       height="49.473595"
       width="49.409252"
       id="rect3157-1-9-4"
       style="fill:none;stroke:#000000;stroke-width:0.52588987;stroke-opacity:1;display:inline" />
    <rect
       y="494.35794"
       x="160.32779"
       height="49.473595"
       width="49.409252"
       id="rect3157-1-1-4-5"
       style="fill:none;stroke:#000000;stroke-width:0.52588987;stroke-opacity:1;display:inline" />
    <rect
       y="395.15756"
       x="160.26282"
       height="49.473896"
       width="49.352688"
       id="rect3157-1-17-8-5"
       style="fill:none;stroke:#000000;stroke-width:0.52559036;stroke-opacity:1;display:inline" />
    <rect
       y="345.15747"
       x="160.26282"
       height="49.473896"
       width="49.352688"
       id="rect3157-1-17-4-8-1"
       style="fill:none;stroke:#000000;stroke-width:0.52559036;stroke-opacity:1;display:inline" />
    <rect
       y="295.15732"
       x="160.26282"
       height="49.473896"
       width="49.352688"
       id="rect3157-1-17-4-0-2-7"
       style="fill:none;stroke:#000000;stroke-width:0.52559036;stroke-opacity:1;display:inline" />
    <rect
       y="445.15793"
       x="210.26294"
       height="49.473595"
       width="49.409252"
       id="rect3157-1-9-4-1"
       style="fill:none;stroke:#000000;stroke-width:0.52588987;stroke-opacity:1;display:inline" />
    <rect
       y="494.35794"
       x="210.32779"
       height="49.473595"
       width="49.409252"
       id="rect3157-1-1-4-5-1"
       style="fill:none;stroke:#000000;stroke-width:0.52588987;stroke-opacity:1;display:inline" />
    <rect
       y="395.15756"
       x="210.26282"
       height="49.473896"
       width="49.352688"
       id="rect3157-1-17-8-5-5"
       style="fill:none;stroke:#000000;stroke-width:0.52559036;stroke-opacity:1;display:inline" />
    <rect
       y="345.15747"
       x="210.26282"
       height="49.473896"
       width="49.352688"
       id="rect3157-1-17-4-8-1-2"
       style="fill:none;stroke:#000000;stroke-width:0.52559036;stroke-opacity:1;display:inline" />
    <rect
       y="295.15732"
       x="210.26282"
       height="49.473896"
       width="49.352688"
       id="rect3157-1-17-4-0-2-7-7"
       style="fill:none;stroke:#000000;stroke-width:0.52559036;stroke-opacity:1;display:inline" />
    <rect
       y="445.15793"
       x="260.26294"
       height="49.473595"
       width="49.409252"
       id="rect3157-1-9-4-1-6"
       style="fill:none;stroke:#000000;stroke-width:0.52588987;stroke-opacity:1;display:inline" />
    <rect
       y="494.35794"
       x="260.32779"
       height="49.473595"
       width="49.409252"
       id="rect3157-1-1-4-5-1-1"
       style="fill:none;stroke:#000000;stroke-width:0.52588987;stroke-opacity:1;display:inline" />
    <rect
       y="395.15756"
       x="260.26282"
       height="49.473896"
       width="49.352688"
       id="rect3157-1-17-8-5-5-4"
       style="fill:none;stroke:#000000;stroke-width:0.52559036;stroke-opacity:1;display:inline" />
    <rect
       y="345.15747"
       x="260.26282"
       height="49.473896"
       width="49.352688"
       id="rect3157-1-17-4-8-1-2-2"
       style="fill:none;stroke:#000000;stroke-width:0.52559036;stroke-opacity:1;display:inline" />
    <rect
       y="295.15732"
       x="260.26282"
       height="49.473896"
       width="49.352688"
       id="rect3157-1-17-4-0-2-7-7-3"
       style="fill:none;stroke:#000000;stroke-width:0.52559036;stroke-opacity:1;display:inline" />
  </g>
  <script
     id="JessyInk"
     ns1:version="1.5.5">// Copyright 2008, 2009 Hannes Hochreiner
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.

// Set onload event handler.
window.onload = jessyInkInit;

// Creating a namespace dictionary. The standard Inkscape namespaces are taken from inkex.py.
var NSS = new Object();
NSS['sodipodi']='http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd';
NSS['cc']='http://web.resource.org/cc/';
NSS['svg']='http://www.w3.org/2000/svg';
NSS['dc']='http://purl.org/dc/elements/1.1/';
NSS['rdf']='http://www.w3.org/1999/02/22-rdf-syntax-ns#';
NSS['inkscape']='http://www.inkscape.org/namespaces/inkscape';
NSS['xlink']='http://www.w3.org/1999/xlink';
NSS['xml']='http://www.w3.org/XML/1998/namespace';
NSS['jessyink']='https://launchpad.net/jessyink';

// Keycodes.
var LEFT_KEY = 37; // cursor left keycode
var UP_KEY = 38; // cursor up keycode
var RIGHT_KEY = 39; // cursor right keycode
var DOWN_KEY = 40; // cursor down keycode
var PAGE_UP_KEY = 33; // page up keycode
var PAGE_DOWN_KEY = 34; // page down keycode
var HOME_KEY = 36; // home keycode
var END_KEY = 35; // end keycode
var ENTER_KEY = 13; // next slide
var SPACE_KEY = 32;
var ESCAPE_KEY = 27;

// Presentation modes.
var SLIDE_MODE = 1;
var INDEX_MODE = 2;
var DRAWING_MODE = 3;

// Mouse handler actions.
var MOUSE_UP = 1;
var MOUSE_DOWN = 2;
var MOUSE_MOVE = 3;
var MOUSE_WHEEL = 4;

// Parameters.
var ROOT_NODE = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;svg&quot;)[0];
var HEIGHT = 0;
var WIDTH = 0;
var INDEX_COLUMNS_DEFAULT = 4;
var INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;
var INDEX_OFFSET = 0;
var STATE_START = -1;
var STATE_END = -2;
var BACKGROUND_COLOR = null;
var slides = new Array();

// Initialisation.
var currentMode = SLIDE_MODE;
var masterSlide = null;
var activeSlide = 0;
var activeEffect = 0;
var timeStep = 30; // 40 ms equal 25 frames per second.
var lastFrameTime = null;
var processingEffect = false;
var transCounter = 0;
var effectArray = 0;
var defaultTransitionInDict = new Object();
defaultTransitionInDict[&quot;name&quot;] = &quot;appear&quot;;
var defaultTransitionOutDict = new Object();
defaultTransitionOutDict[&quot;name&quot;] = &quot;appear&quot;;
var jessyInkInitialised = false;

// Initialise char and key code dictionaries.
var charCodeDictionary = getDefaultCharCodeDictionary();
var keyCodeDictionary = getDefaultKeyCodeDictionary();

// Initialise mouse handler dictionary.
var mouseHandlerDictionary = getDefaultMouseHandlerDictionary();

var progress_bar_visible = false;
var timer_elapsed = 0;
var timer_start = timer_elapsed;
var timer_duration = 15; // 15 minutes

var history_counter = 0;
var history_original_elements = new Array();
var history_presentation_elements = new Array();

var mouse_original_path = null;
var mouse_presentation_path = null;
var mouse_last_x = -1;
var mouse_last_y = -1;
var mouse_min_dist_sqr = 3 * 3;
var path_colour = &quot;red&quot;;
var path_width_default = 3;
var path_width = path_width_default;
var path_paint_width = path_width;

var number_of_added_slides = 0;

/** Initialisation function.
 *  The whole presentation is set-up in this function.
 */
function jessyInkInit()
{
	// Make sure we only execute this code once. Double execution can occur if the onload event handler is set
	// in the main svg tag as well (as was recommended in earlier versions). Executing this function twice does
	// not lead to any problems, but it takes more time.
	if (jessyInkInitialised)
		return;

	// Making the presentation scaleable.
	var VIEWBOX = ROOT_NODE.getAttribute(&quot;viewBox&quot;);

	if (VIEWBOX)
	{
		WIDTH = ROOT_NODE.viewBox.animVal.width;
		HEIGHT = ROOT_NODE.viewBox.animVal.height;
	}
	else
	{
		HEIGHT = parseFloat(ROOT_NODE.getAttribute(&quot;height&quot;));
		WIDTH = parseFloat(ROOT_NODE.getAttribute(&quot;width&quot;));
		ROOT_NODE.setAttribute(&quot;viewBox&quot;, &quot;0 0 &quot; + WIDTH + &quot; &quot; + HEIGHT);
	}

	ROOT_NODE.setAttribute(&quot;width&quot;, &quot;100%&quot;);
	ROOT_NODE.setAttribute(&quot;height&quot;, &quot;100%&quot;);

	// Setting the background color.
	var namedViews = document.getElementsByTagNameNS(NSS[&quot;sodipodi&quot;], &quot;namedview&quot;);

	for (var counter = 0; counter &lt; namedViews.length; counter++)
	{
		if (namedViews[counter].hasAttribute(&quot;id&quot;) &amp;&amp; namedViews[counter].hasAttribute(&quot;pagecolor&quot;))
		{
			if (namedViews[counter].getAttribute(&quot;id&quot;) == &quot;base&quot;)
			{
				BACKGROUND_COLOR = namedViews[counter].getAttribute(&quot;pagecolor&quot;);
				var newAttribute = &quot;background-color:&quot; + BACKGROUND_COLOR + &quot;;&quot;;

				if (ROOT_NODE.hasAttribute(&quot;style&quot;))
					newAttribute += ROOT_NODE.getAttribute(&quot;style&quot;);

				ROOT_NODE.setAttribute(&quot;style&quot;, newAttribute);
			}
		}
	}

	// Defining clip-path.
	var defsNodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);

	if (defsNodes.length &gt; 0)
	{
		var existingClipPath = document.getElementById(&quot;jessyInkSlideClipPath&quot;);

		if (!existingClipPath)
		{
			var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);
			var clipPath = document.createElementNS(NSS[&quot;svg&quot;], &quot;clipPath&quot;);

			rectNode.setAttribute(&quot;x&quot;, 0);
			rectNode.setAttribute(&quot;y&quot;, 0);
			rectNode.setAttribute(&quot;width&quot;, WIDTH);
			rectNode.setAttribute(&quot;height&quot;, HEIGHT);

			clipPath.setAttribute(&quot;id&quot;, &quot;jessyInkSlideClipPath&quot;);
			clipPath.setAttribute(&quot;clipPathUnits&quot;, &quot;userSpaceOnUse&quot;);

			clipPath.appendChild(rectNode);
			defsNodes[0].appendChild(clipPath);
		}
	}

	// Making a list of the slide and finding the master slide.
	var nodes = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	var tempSlides = new Array();
	var existingJessyInkPresentationLayer = null;

	for (var counter = 0; counter &lt; nodes.length; counter++)
	{
		if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) &amp;&amp; (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;) == &quot;layer&quot;))
		{
			if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;masterSlide&quot;) == &quot;masterSlide&quot;)
				masterSlide = nodes[counter];
			else if (nodes[counter].getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;) &amp;&amp; nodes[counter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;) == &quot;presentationLayer&quot;)
				existingJessyInkPresentationLayer = nodes[counter];
			else
				tempSlides.push(nodes[counter].getAttribute(&quot;id&quot;));
		}
		else if (nodes[counter].getAttributeNS(NSS['jessyink'], 'element'))
		{
			handleElement(nodes[counter]);
		}
	}

	// Hide master slide set default transitions.
	if (masterSlide)
	{
		masterSlide.style.display = &quot;none&quot;;

		if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))
			defaultTransitionInDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));

		if (masterSlide.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))
			defaultTransitionOutDict = propStrToDict(masterSlide.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));
	}

	if (existingJessyInkPresentationLayer != null)
	{
		existingJessyInkPresentationLayer.parentNode.removeChild(existingJessyInkPresentationLayer);
	}

	// Set start slide.
	var hashObj = new LocationHash(window.location.hash);

	activeSlide = hashObj.slideNumber;
	activeEffect = hashObj.effectNumber;

	if (activeSlide &lt; 0)
		activeSlide = 0;
	else if (activeSlide &gt;= tempSlides.length)
		activeSlide = tempSlides.length - 1;

	var originalNode = document.getElementById(tempSlides[counter]);

	var JessyInkPresentationLayer = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;JessyInk Presentation Layer&quot;);
	JessyInkPresentationLayer.setAttributeNS(NSS[&quot;jessyink&quot;], &quot;presentationLayer&quot;, &quot;presentationLayer&quot;);
	JessyInkPresentationLayer.setAttribute(&quot;id&quot;, &quot;jessyink_presentation_layer&quot;);
	JessyInkPresentationLayer.style.display = &quot;inherit&quot;;
	ROOT_NODE.appendChild(JessyInkPresentationLayer);

	// Gathering all the information about the transitions and effects of the slides, set the background
	// from the master slide and substitute the auto-texts.
	for (var counter = 0; counter &lt; tempSlides.length; counter++)
	{
		var originalNode = document.getElementById(tempSlides[counter]);
		originalNode.style.display = &quot;none&quot;;
		var node = suffixNodeIds(originalNode.cloneNode(true), &quot;_&quot; + counter);
		JessyInkPresentationLayer.appendChild(node);
		slides[counter] = new Object();
		slides[counter][&quot;original_element&quot;] = originalNode;
		slides[counter][&quot;element&quot;] = node;

		// Set build in transition.
		slides[counter][&quot;transitionIn&quot;] = new Object();

		var dict;

		if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;))
			dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionIn&quot;));
		else
			dict = defaultTransitionInDict;

		slides[counter][&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
		slides[counter][&quot;transitionIn&quot;][&quot;options&quot;] = new Object();

		for (key in dict)
			if (key != &quot;name&quot;)
				slides[counter][&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];

		// Set build out transition.
		slides[counter][&quot;transitionOut&quot;] = new Object();

		if (node.hasAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;))
			dict = propStrToDict(node.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;transitionOut&quot;));
		else
			dict = defaultTransitionOutDict;

		slides[counter][&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
		slides[counter][&quot;transitionOut&quot;][&quot;options&quot;] = new Object();

		for (key in dict)
			if (key != &quot;name&quot;)
				slides[counter][&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];

		// Copy master slide content.
		if (masterSlide)
		{
			var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + counter);
			clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
			clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);
			clonedNode.style.display = &quot;inherit&quot;;

			node.insertBefore(clonedNode, node.firstChild);
		}

		// Setting clip path.
		node.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);

		// Substitute auto texts.
		substituteAutoTexts(node, node.getAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;), counter + 1, tempSlides.length);

		node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
		node.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);

		// Set effects.
		var tempEffects = new Array();
		var groups = new Object();

		for (var IOCounter = 0; IOCounter &lt;= 1; IOCounter++)
		{
			var propName = &quot;&quot;;
			var dir = 0;

			if (IOCounter == 0)
			{
				propName = &quot;effectIn&quot;;
				dir = 1;
			}
			else if (IOCounter == 1)
			{
				propName = &quot;effectOut&quot;;
				dir = -1;
			}

			var effects = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], propName);

			for (var effectCounter = 0; effectCounter &lt; effects.length; effectCounter++)
			{
				var element = document.getElementById(effects[effectCounter]);
				var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], propName));

				// Put every element that has an effect associated with it, into its own group.
				// Unless of course, we already put it into its own group.
				if (!(groups[element.id]))
				{
					var newGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

					element.parentNode.insertBefore(newGroup, element);
					newGroup.appendChild(element.parentNode.removeChild(element));
					groups[element.id] = newGroup;
				}

				var effectDict = new Object();

				effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];
				effectDict[&quot;dir&quot;] = dir;
				effectDict[&quot;element&quot;] = groups[element.id];

				for (var option in dict)
				{
					if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))
					{
						if (!effectDict[&quot;options&quot;])
							effectDict[&quot;options&quot;] = new Object();

						effectDict[&quot;options&quot;][option] = dict[option];
					}
				}

				if (!tempEffects[dict[&quot;order&quot;]])
					tempEffects[dict[&quot;order&quot;]] = new Array();

				tempEffects[dict[&quot;order&quot;]][tempEffects[dict[&quot;order&quot;]].length] = effectDict;
			}
		}

		// Make invisible, but keep in rendering tree to ensure that bounding box can be calculated.
		node.setAttribute(&quot;opacity&quot;,0);
		node.style.display = &quot;inherit&quot;;

		// Create a transform group.
		var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

		// Add content to transform group.
		while (node.firstChild)
			transformGroup.appendChild(node.firstChild);

		// Transfer the transform attribute from the node to the transform group.
		if (node.getAttribute(&quot;transform&quot;))
		{
			transformGroup.setAttribute(&quot;transform&quot;, node.getAttribute(&quot;transform&quot;));
			node.removeAttribute(&quot;transform&quot;);
		}

		// Create a view group.
		var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

		viewGroup.appendChild(transformGroup);
		slides[counter][&quot;viewGroup&quot;] = node.appendChild(viewGroup);

		// Insert background.
		if (BACKGROUND_COLOR != null)
		{
			var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);

			rectNode.setAttribute(&quot;x&quot;, 0);
			rectNode.setAttribute(&quot;y&quot;, 0);
			rectNode.setAttribute(&quot;width&quot;, WIDTH);
			rectNode.setAttribute(&quot;height&quot;, HEIGHT);
			rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + counter);
			rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);

			slides[counter][&quot;viewGroup&quot;].insertBefore(rectNode, slides[counter][&quot;viewGroup&quot;].firstChild);
		}

		// Set views.
		var tempViews = new Array();
		var views = getElementsByPropertyNS(node, NSS[&quot;jessyink&quot;], &quot;view&quot;);
		var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);

		// Set initial view even if there are no other views.
		slides[counter][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());
		slides[counter].initialView = matrixOld.toAttribute();

		for (var viewCounter = 0; viewCounter &lt; views.length; viewCounter++)
		{
			var element = document.getElementById(views[viewCounter]);
			var dict = propStrToDict(element.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;view&quot;));

			if (dict[&quot;order&quot;] == 0)
			{
				matrixOld = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());
				slides[counter].initialView = matrixOld.toAttribute();
			}
			else
			{
				var effectDict = new Object();

				effectDict[&quot;effect&quot;] = dict[&quot;name&quot;];
				effectDict[&quot;dir&quot;] = 1;
				effectDict[&quot;element&quot;] = slides[counter][&quot;viewGroup&quot;];
				effectDict[&quot;order&quot;] = dict[&quot;order&quot;];

				for (var option in dict)
				{
					if ((option != &quot;name&quot;) &amp;&amp; (option != &quot;order&quot;))
					{
						if (!effectDict[&quot;options&quot;])
							effectDict[&quot;options&quot;] = new Object();

						effectDict[&quot;options&quot;][option] = dict[option];
					}
				}

				effectDict[&quot;options&quot;][&quot;matrixNew&quot;] = pointMatrixToTransformation(rectToMatrix(element)).mult((new matrixSVG()).fromSVGMatrix(slides[counter].viewGroup.getScreenCTM()).inv().mult((new matrixSVG()).fromSVGMatrix(element.parentNode.getScreenCTM())).inv());

				tempViews[dict[&quot;order&quot;]] = effectDict;
			}

			// Remove element.
			element.parentNode.removeChild(element);
		}

		// Consolidate view array and append it to the effect array.
		if (tempViews.length &gt; 0)
		{
			for (var viewCounter = 0; viewCounter &lt; tempViews.length; viewCounter++)
			{
				if (tempViews[viewCounter])
				{
					tempViews[viewCounter][&quot;options&quot;][&quot;matrixOld&quot;] = matrixOld;
					matrixOld = tempViews[viewCounter][&quot;options&quot;][&quot;matrixNew&quot;];

					if (!tempEffects[tempViews[viewCounter][&quot;order&quot;]])
						tempEffects[tempViews[viewCounter][&quot;order&quot;]] = new Array();

					tempEffects[tempViews[viewCounter][&quot;order&quot;]][tempEffects[tempViews[viewCounter][&quot;order&quot;]].length] = tempViews[viewCounter];
				}
			}
		}

		// Set consolidated effect array.
		if (tempEffects.length &gt; 0)
		{
			slides[counter][&quot;effects&quot;] = new Array();

			for (var effectCounter = 0; effectCounter &lt; tempEffects.length; effectCounter++)
			{
				if (tempEffects[effectCounter])
					slides[counter][&quot;effects&quot;][slides[counter][&quot;effects&quot;].length] = tempEffects[effectCounter];
			}
		}

		node.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);

		// Set visibility for initial state.
		if (counter == activeSlide)
		{
			node.style.display = &quot;inherit&quot;;
			node.setAttribute(&quot;opacity&quot;,1);
		}
		else
		{
			node.style.display = &quot;none&quot;;
			node.setAttribute(&quot;opacity&quot;,0);
		}
	}

	// Set key handler.
	var jessyInkObjects = document.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	for (var counter = 0; counter &lt; jessyInkObjects.length; counter++)
	{
		var elem = jessyInkObjects[counter];

		if (elem.getAttributeNS(NSS[&quot;jessyink&quot;], &quot;customKeyBindings&quot;))
		{
			if (elem.getCustomKeyBindings != undefined)
				keyCodeDictionary = elem.getCustomKeyBindings();

			if (elem.getCustomCharBindings != undefined)
				charCodeDictionary = elem.getCustomCharBindings();
		}
	}

	// Set mouse handler.
	var jessyInkMouseHandler = document.getElementsByTagNameNS(NSS[&quot;jessyink&quot;], &quot;mousehandler&quot;);

	for (var counter = 0; counter &lt; jessyInkMouseHandler.length; counter++)
	{
		var elem = jessyInkMouseHandler[counter];

		if (elem.getMouseHandler != undefined)
		{
			var tempDict = elem.getMouseHandler();

			for (mode in tempDict)
			{
				if (!mouseHandlerDictionary[mode])
					mouseHandlerDictionary[mode] = new Object();

				for (handler in tempDict[mode])
					mouseHandlerDictionary[mode][handler] = tempDict[mode][handler];
			}
		}
	}

	// Check effect number.
	if ((activeEffect &lt; 0) || (!slides[activeSlide].effects))
	{
		activeEffect = 0;
	}
	else if (activeEffect &gt; slides[activeSlide].effects.length)
	{
		activeEffect = slides[activeSlide].effects.length;
	}

	createProgressBar(JessyInkPresentationLayer);
	hideProgressBar();
	setProgressBarValue(activeSlide);
	setTimeIndicatorValue(0);
	setInterval(&quot;updateTimer()&quot;, 1000);
	setSlideToState(activeSlide, activeEffect);
	jessyInkInitialised = true;
}

/** Function to subtitute the auto-texts.
 *
 *  @param node the node
 *  @param slideName name of the slide the node is on
 *  @param slideNumber number of the slide the node is on
 *  @param numberOfSlides number of slides in the presentation
 */
function substituteAutoTexts(node, slideName, slideNumber, numberOfSlides)
{
	var texts = node.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;tspan&quot;);

	for (var textCounter = 0; textCounter &lt; texts.length; textCounter++)
	{
		if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideNumber&quot;)
			texts[textCounter].firstChild.nodeValue = slideNumber;
		else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;numberOfSlides&quot;)
			texts[textCounter].firstChild.nodeValue = numberOfSlides;
		else if (texts[textCounter].getAttributeNS(NSS[&quot;jessyink&quot;], &quot;autoText&quot;) == &quot;slideTitle&quot;)
			texts[textCounter].firstChild.nodeValue = slideName;
	}
}

/** Convenience function to get an element depending on whether it has a property with a particular name.
 *	This function emulates some dearly missed XPath functionality.
 *
 *  @param node the node
 *  @param namespace namespace of the attribute
 *  @param name attribute name
 */
function getElementsByPropertyNS(node, namespace, name)
{
	var elems = new Array();

	if (node.getAttributeNS(namespace, name))
		elems.push(node.getAttribute(&quot;id&quot;));

	for (var counter = 0; counter &lt; node.childNodes.length; counter++)
	{
		if (node.childNodes[counter].nodeType == 1)
			elems = elems.concat(getElementsByPropertyNS(node.childNodes[counter], namespace, name));
	}

	return elems;
}

/** Function to dispatch the next effect, if there is none left, change the slide.
 *
 *  @param dir direction of the change (1 = forwards, -1 = backwards)
 */
function dispatchEffects(dir)
{
	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))
	{
		processingEffect = true;

		if (dir == 1)
		{
			effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];
			activeEffect += dir;
		}
		else if (dir == -1)
		{
			activeEffect += dir;
			effectArray = slides[activeSlide][&quot;effects&quot;][activeEffect];
		}

		transCounter = 0;
		startTime = (new Date()).getTime();
		lastFrameTime = null;
		effect(dir);
	}
	else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))
	{
		changeSlide(dir);
	}
}

/** Function to skip effects and directly either put the slide into start or end state or change slides.
 *
 *  @param dir direction of the change (1 = forwards, -1 = backwards)
 */
function skipEffects(dir)
{
	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (((dir == 1) &amp;&amp; (activeEffect &lt; slides[activeSlide][&quot;effects&quot;].length)) || ((dir == -1) &amp;&amp; (activeEffect &gt; 0))))
	{
		processingEffect = true;

		if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == 1))
			activeEffect = slides[activeSlide][&quot;effects&quot;].length;
		else
			activeEffect = 0;

		if (dir == 1)
			setSlideToState(activeSlide, STATE_END);
		else
			setSlideToState(activeSlide, STATE_START);

		processingEffect = false;
	}
	else if (((dir == 1) &amp;&amp; (activeSlide &lt; (slides.length - 1))) || (((dir == -1) &amp;&amp; (activeSlide &gt; 0))))
	{
		changeSlide(dir);
	}
}

/** Function to change between slides.
 *
 *  @param dir direction (1 = forwards, -1 = backwards)
 */
function changeSlide(dir)
{
	processingEffect = true;
	effectArray = new Array();

	effectArray[0] = new Object();
	if (dir == 1)
	{
		effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];
		effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];
		effectArray[0][&quot;dir&quot;] = -1;
	}
	else if (dir == -1)
	{
		effectArray[0][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];
		effectArray[0][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];
		effectArray[0][&quot;dir&quot;] = 1;
	}
	effectArray[0][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];

	activeSlide += dir;
	setProgressBarValue(activeSlide);

	effectArray[1] = new Object();

	if (dir == 1)
	{
		effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;name&quot;];
		effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionIn&quot;][&quot;options&quot;];
		effectArray[1][&quot;dir&quot;] = 1;
	}
	else if (dir == -1)
	{
		effectArray[1][&quot;effect&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;name&quot;];
		effectArray[1][&quot;options&quot;] = slides[activeSlide][&quot;transitionOut&quot;][&quot;options&quot;];
		effectArray[1][&quot;dir&quot;] = -1;
	}

	effectArray[1][&quot;element&quot;] = slides[activeSlide][&quot;element&quot;];

	if (slides[activeSlide][&quot;effects&quot;] &amp;&amp; (dir == -1))
		activeEffect = slides[activeSlide][&quot;effects&quot;].length;
	else
		activeEffect = 0;

	if (dir == -1)
		setSlideToState(activeSlide, STATE_END);
	else
		setSlideToState(activeSlide, STATE_START);

	transCounter = 0;
	startTime = (new Date()).getTime();
	lastFrameTime = null;
	effect(dir);
}

/** Function to toggle between index and slide mode.
*/
function toggleSlideIndex()
{
	var suspendHandle = ROOT_NODE.suspendRedraw(500);

	if (currentMode == SLIDE_MODE)
	{
		hideProgressBar();		
		INDEX_OFFSET = -1;
		indexSetPageSlide(activeSlide);
		currentMode = INDEX_MODE;
	}
	else if (currentMode == INDEX_MODE)
	{
		for (var counter = 0; counter &lt; slides.length; counter++)
		{
			slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(1)&quot;);

			if (counter == activeSlide)
			{
				slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;
				slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);
				activeEffect = 0;
			}
			else
			{
				slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
				slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;
			}
		}
		currentMode = SLIDE_MODE;
		setSlideToState(activeSlide, STATE_START);
		setProgressBarValue(activeSlide);

		if (progress_bar_visible)
		{
			showProgressBar();
		}
	}

	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();
}

/** Function to run an effect.
 *
 *  @param dir direction in which to play the effect (1 = forwards, -1 = backwards)
 */
function effect(dir)
{
	var done = true;

	var suspendHandle = ROOT_NODE.suspendRedraw(200);

	for (var counter = 0; counter &lt; effectArray.length; counter++)
	{
		if (effectArray[counter][&quot;effect&quot;] == &quot;fade&quot;)
			done &amp;= fade(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;appear&quot;)
			done &amp;= appear(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;pop&quot;)
			done &amp;= pop(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
		else if (effectArray[counter][&quot;effect&quot;] == &quot;view&quot;)
			done &amp;= view(parseInt(effectArray[counter][&quot;dir&quot;]) * dir, effectArray[counter][&quot;element&quot;], transCounter, effectArray[counter][&quot;options&quot;]);
	}

	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();

	if (!done)
	{
		var currentTime = (new Date()).getTime();
		var timeDiff = 1;

		transCounter = currentTime - startTime;

		if (lastFrameTime != null)
		{
			timeDiff = timeStep - (currentTime - lastFrameTime);

			if (timeDiff &lt;= 0)
				timeDiff = 1;
		}

		lastFrameTime = currentTime;

		window.setTimeout(&quot;effect(&quot; + dir + &quot;)&quot;, timeDiff);
	}
	else
	{
		window.location.hash = (activeSlide + 1) + '_' + activeEffect;
		processingEffect = false;
	}
}

/** Function to display the index sheet.
 *
 *  @param offsetNumber offset number
 */
function displayIndex(offsetNumber)
{
	var offsetX = 0;
	var offsetY = 0;

	if (offsetNumber &lt; 0)
		offsetNumber = 0;
	else if (offsetNumber &gt;= slides.length)
		offsetNumber = slides.length - 1;

	for (var counter = 0; counter &lt; slides.length; counter++)
	{
		if ((counter &lt; offsetNumber) || (counter &gt; offsetNumber + INDEX_COLUMNS * INDEX_COLUMNS - 1))
		{
			slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
			slides[counter][&quot;element&quot;].style.display = &quot;none&quot;;
		}
		else
		{
			offsetX = ((counter - offsetNumber) % INDEX_COLUMNS) * WIDTH;
			offsetY = Math.floor((counter - offsetNumber) / INDEX_COLUMNS) * HEIGHT;

			slides[counter][&quot;element&quot;].setAttribute(&quot;transform&quot;,&quot;scale(&quot;+1/INDEX_COLUMNS+&quot;) translate(&quot;+offsetX+&quot;,&quot;+offsetY+&quot;)&quot;);
			slides[counter][&quot;element&quot;].style.display = &quot;inherit&quot;;
			slides[counter][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);
		}

		setSlideToState(counter, STATE_END);
	}

	//do we need to save the current offset?
	if (INDEX_OFFSET != offsetNumber)
		INDEX_OFFSET = offsetNumber;
}

/** Function to set the active slide in the slide view.
 *
 *  @param nbr index of the active slide
 */
function slideSetActiveSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0);
	slides[activeSlide][&quot;element&quot;].style.display = &quot;none&quot;;

	activeSlide = parseInt(nbr);

	setSlideToState(activeSlide, STATE_START);
	slides[activeSlide][&quot;element&quot;].style.display = &quot;inherit&quot;;
	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);

	activeEffect = 0;
	setProgressBarValue(nbr);
}

/** Function to set the active slide in the index view.
 *
 *  @param nbr index of the active slide
 */
function indexSetActiveSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,0.5);

	activeSlide = parseInt(nbr);
	window.location.hash = (activeSlide + 1) + '_0';

	slides[activeSlide][&quot;element&quot;].setAttribute(&quot;opacity&quot;,1);
}

/** Function to set the page and active slide in index view. 
 *
 *  @param nbr index of the active slide
 *
 *  NOTE: To force a redraw,
 *  set INDEX_OFFSET to -1 before calling indexSetPageSlide().
 *
 *  This is necessary for zooming (otherwise the index might not
 *  get redrawn) and when switching to index mode.
 *
 *  INDEX_OFFSET = -1
 *  indexSetPageSlide(activeSlide);
 */
function indexSetPageSlide(nbr)
{
	if (nbr &gt;= slides.length)
		nbr = slides.length - 1;
	else if (nbr &lt; 0)
		nbr = 0;

	//calculate the offset
	var offset = nbr - nbr % (INDEX_COLUMNS * INDEX_COLUMNS);

	if (offset &lt; 0)
		offset = 0;

	//if different from kept offset, then record and change the page
	if (offset != INDEX_OFFSET)
	{
		INDEX_OFFSET = offset;
		displayIndex(INDEX_OFFSET);
	}

	//set the active slide
	indexSetActiveSlide(nbr);
}

/** Event handler for key press.
 *
 *  @param e the event
 */
function keydown(e)
{
	if (!e)
		e = window.event;

	code = e.keyCode || e.charCode;

	if (!processingEffect &amp;&amp; keyCodeDictionary[currentMode] &amp;&amp; keyCodeDictionary[currentMode][code])
		return keyCodeDictionary[currentMode][code]();
	else
		document.onkeypress = keypress;
}
// Set event handler for key down.
document.onkeydown = keydown;

/** Event handler for key press.
 *
 *  @param e the event
 */
function keypress(e)
{
	document.onkeypress = null;

	if (!e)
		e = window.event;

	str = String.fromCharCode(e.keyCode || e.charCode);

	if (!processingEffect &amp;&amp; charCodeDictionary[currentMode] &amp;&amp; charCodeDictionary[currentMode][str])
		return charCodeDictionary[currentMode][str]();
}

/** Function to supply the default char code dictionary.
 *
 * @returns default char code dictionary
 */
function getDefaultCharCodeDictionary()
{
	var charCodeDict = new Object();

	charCodeDict[SLIDE_MODE] = new Object();
	charCodeDict[INDEX_MODE] = new Object();
	charCodeDict[DRAWING_MODE] = new Object();

	charCodeDict[SLIDE_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };
	charCodeDict[SLIDE_MODE][&quot;d&quot;] = function () { return slideSwitchToDrawingMode(); };
	charCodeDict[SLIDE_MODE][&quot;D&quot;] = function () { return slideQueryDuration(); };
	charCodeDict[SLIDE_MODE][&quot;n&quot;] = function () { return slideAddSlide(activeSlide); };
	charCodeDict[SLIDE_MODE][&quot;p&quot;] = function () { return slideToggleProgressBarVisibility(); };
	charCodeDict[SLIDE_MODE][&quot;t&quot;] = function () { return slideResetTimer(); };
	charCodeDict[SLIDE_MODE][&quot;e&quot;] = function () { return slideUpdateExportLayer(); };

	charCodeDict[DRAWING_MODE][&quot;d&quot;] = function () { return drawingSwitchToSlideMode(); };
	charCodeDict[DRAWING_MODE][&quot;0&quot;] = function () { return drawingResetPathWidth(); };
	charCodeDict[DRAWING_MODE][&quot;1&quot;] = function () { return drawingSetPathWidth(1.0); };
	charCodeDict[DRAWING_MODE][&quot;3&quot;] = function () { return drawingSetPathWidth(3.0); };
	charCodeDict[DRAWING_MODE][&quot;5&quot;] = function () { return drawingSetPathWidth(5.0); };
	charCodeDict[DRAWING_MODE][&quot;7&quot;] = function () { return drawingSetPathWidth(7.0); };
	charCodeDict[DRAWING_MODE][&quot;9&quot;] = function () { return drawingSetPathWidth(9.0); };
	charCodeDict[DRAWING_MODE][&quot;b&quot;] = function () { return drawingSetPathColour(&quot;blue&quot;); };
	charCodeDict[DRAWING_MODE][&quot;c&quot;] = function () { return drawingSetPathColour(&quot;cyan&quot;); };
	charCodeDict[DRAWING_MODE][&quot;g&quot;] = function () { return drawingSetPathColour(&quot;green&quot;); };
	charCodeDict[DRAWING_MODE][&quot;k&quot;] = function () { return drawingSetPathColour(&quot;black&quot;); };
	charCodeDict[DRAWING_MODE][&quot;m&quot;] = function () { return drawingSetPathColour(&quot;magenta&quot;); };
	charCodeDict[DRAWING_MODE][&quot;o&quot;] = function () { return drawingSetPathColour(&quot;orange&quot;); };
	charCodeDict[DRAWING_MODE][&quot;r&quot;] = function () { return drawingSetPathColour(&quot;red&quot;); };
	charCodeDict[DRAWING_MODE][&quot;w&quot;] = function () { return drawingSetPathColour(&quot;white&quot;); };
	charCodeDict[DRAWING_MODE][&quot;y&quot;] = function () { return drawingSetPathColour(&quot;yellow&quot;); };
	charCodeDict[DRAWING_MODE][&quot;z&quot;] = function () { return drawingUndo(); };

	charCodeDict[INDEX_MODE][&quot;i&quot;] = function () { return toggleSlideIndex(); };
	charCodeDict[INDEX_MODE][&quot;-&quot;] = function () { return indexDecreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;=&quot;] = function () { return indexIncreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;+&quot;] = function () { return indexIncreaseNumberOfColumns(); };
	charCodeDict[INDEX_MODE][&quot;0&quot;] = function () { return indexResetNumberOfColumns(); };

	return charCodeDict;
}

/** Function to supply the default key code dictionary.
 *
 * @returns default key code dictionary
 */
function getDefaultKeyCodeDictionary()
{
	var keyCodeDict = new Object();

	keyCodeDict[SLIDE_MODE] = new Object();
	keyCodeDict[INDEX_MODE] = new Object();
	keyCodeDict[DRAWING_MODE] = new Object();

	keyCodeDict[SLIDE_MODE][LEFT_KEY] = function() { return dispatchEffects(-1); };
	keyCodeDict[SLIDE_MODE][RIGHT_KEY] = function() { return dispatchEffects(1); };
	keyCodeDict[SLIDE_MODE][UP_KEY] = function() { return skipEffects(-1); };
	keyCodeDict[SLIDE_MODE][DOWN_KEY] = function() { return skipEffects(1); };
	keyCodeDict[SLIDE_MODE][PAGE_UP_KEY] = function() { return dispatchEffects(-1); };
	keyCodeDict[SLIDE_MODE][PAGE_DOWN_KEY] = function() { return dispatchEffects(1); };
	keyCodeDict[SLIDE_MODE][HOME_KEY] = function() { return slideSetActiveSlide(0); };
	keyCodeDict[SLIDE_MODE][END_KEY] = function() { return slideSetActiveSlide(slides.length - 1); };
	keyCodeDict[SLIDE_MODE][SPACE_KEY] = function() { return dispatchEffects(1); };

	keyCodeDict[INDEX_MODE][LEFT_KEY] = function() { return indexSetPageSlide(activeSlide - 1); };
	keyCodeDict[INDEX_MODE][RIGHT_KEY] = function() { return indexSetPageSlide(activeSlide + 1); };
	keyCodeDict[INDEX_MODE][UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][PAGE_UP_KEY] = function() { return indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][PAGE_DOWN_KEY] = function() { return indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS); };
	keyCodeDict[INDEX_MODE][HOME_KEY] = function() { return indexSetPageSlide(0); };
	keyCodeDict[INDEX_MODE][END_KEY] = function() { return indexSetPageSlide(slides.length - 1); };
	keyCodeDict[INDEX_MODE][ENTER_KEY] = function() { return toggleSlideIndex(); };

	keyCodeDict[DRAWING_MODE][ESCAPE_KEY] = function () { return drawingSwitchToSlideMode(); };

	return keyCodeDict;
}

/** Function to handle all mouse events.
 *
 *	@param	evnt	event
 *	@param	action	type of event (e.g. mouse up, mouse wheel)
 */
function mouseHandlerDispatch(evnt, action)
{
	if (!evnt)
		evnt = window.event;

	var retVal = true;

	if (!processingEffect &amp;&amp; mouseHandlerDictionary[currentMode] &amp;&amp; mouseHandlerDictionary[currentMode][action])
	{
		var subRetVal = mouseHandlerDictionary[currentMode][action](evnt);

		if (subRetVal != null &amp;&amp; subRetVal != undefined)
			retVal = subRetVal;
	}

	if (evnt.preventDefault &amp;&amp; !retVal)
		evnt.preventDefault();

	evnt.returnValue = retVal;

	return retVal;
}

// Set mouse event handler.
document.onmousedown = function(e) { return mouseHandlerDispatch(e, MOUSE_DOWN); };
document.onmouseup = function(e) { return mouseHandlerDispatch(e, MOUSE_UP); };
document.onmousemove = function(e) { return mouseHandlerDispatch(e, MOUSE_MOVE); };

// Moz
if (window.addEventListener)
{
	window.addEventListener('DOMMouseScroll', function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); }, false);
}

// Opera Safari OK - may not work in IE
window.onmousewheel = function(e) { return mouseHandlerDispatch(e, MOUSE_WHEEL); };

/** Function to supply the default mouse handler dictionary.
 *
 * @returns default mouse handler dictionary
 */
function getDefaultMouseHandlerDictionary()
{
	var mouseHandlerDict = new Object();

	mouseHandlerDict[SLIDE_MODE] = new Object();
	mouseHandlerDict[INDEX_MODE] = new Object();
	mouseHandlerDict[DRAWING_MODE] = new Object();

	mouseHandlerDict[SLIDE_MODE][MOUSE_DOWN] = function(evnt) { return dispatchEffects(1); };
	mouseHandlerDict[SLIDE_MODE][MOUSE_WHEEL] = function(evnt) { return slideMousewheel(evnt); };

	mouseHandlerDict[INDEX_MODE][MOUSE_DOWN] = function(evnt) { return toggleSlideIndex(); };

	mouseHandlerDict[DRAWING_MODE][MOUSE_DOWN] = function(evnt) { return drawingMousedown(evnt); };
	mouseHandlerDict[DRAWING_MODE][MOUSE_UP] = function(evnt) { return drawingMouseup(evnt); };
	mouseHandlerDict[DRAWING_MODE][MOUSE_MOVE] = function(evnt) { return drawingMousemove(evnt); };

	return mouseHandlerDict;
}

/** Function to switch from slide mode to drawing mode.
*/
function slideSwitchToDrawingMode()
{
	currentMode = DRAWING_MODE;

	var tempDict;

	if (ROOT_NODE.hasAttribute(&quot;style&quot;))
		tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));
	else
		tempDict = new Object();

	tempDict[&quot;cursor&quot;] = &quot;crosshair&quot;;
	ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));
}

/** Function to switch from drawing mode to slide mode.
*/
function drawingSwitchToSlideMode()
{
	currentMode = SLIDE_MODE;

	var tempDict;

	if (ROOT_NODE.hasAttribute(&quot;style&quot;))
		tempDict = propStrToDict(ROOT_NODE.getAttribute(&quot;style&quot;));
	else
		tempDict = new Object();

	tempDict[&quot;cursor&quot;] = &quot;auto&quot;;
	ROOT_NODE.setAttribute(&quot;style&quot;, dictToPropStr(tempDict));
}

/** Function to decrease the number of columns in index mode.
*/
function indexDecreaseNumberOfColumns()
{
	if (INDEX_COLUMNS &gt;= 3)
	{
		INDEX_COLUMNS -= 1;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to increase the number of columns in index mode.
*/
function indexIncreaseNumberOfColumns()
{
	if (INDEX_COLUMNS &lt; 7)
	{
		INDEX_COLUMNS += 1;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to reset the number of columns in index mode.
*/
function indexResetNumberOfColumns()
{
	if (INDEX_COLUMNS != INDEX_COLUMNS_DEFAULT)
	{
		INDEX_COLUMNS = INDEX_COLUMNS_DEFAULT;
		INDEX_OFFSET = -1
			indexSetPageSlide(activeSlide);
	}
}

/** Function to reset path width in drawing mode.
*/
function drawingResetPathWidth()
{
	path_width = path_width_default;
	set_path_paint_width();
}

/** Function to set path width in drawing mode.
 *
 * @param width new path width
 */
function drawingSetPathWidth(width)
{
	path_width = width;
	set_path_paint_width();
}

/** Function to set path colour in drawing mode.
 *
 * @param colour new path colour
 */
function drawingSetPathColour(colour)
{
	path_colour = colour;
}

/** Function to query the duration of the presentation from the user in slide mode.
*/
function slideQueryDuration()
{
	var new_duration = prompt(&quot;Length of presentation in minutes?&quot;, timer_duration);

	if ((new_duration != null) &amp;&amp; (new_duration != ''))
	{
		timer_duration = new_duration;
	}

	updateTimer();
}

/** Function to add new slide in slide mode.
 *
 * @param afterSlide after which slide to insert the new one
 */
function slideAddSlide(afterSlide)
{
	addSlide(afterSlide);
	slideSetActiveSlide(afterSlide + 1);
	updateTimer();
}

/** Function to toggle the visibility of the progress bar in slide mode.
*/
function slideToggleProgressBarVisibility()
{
	if (progress_bar_visible)
	{
		progress_bar_visible = false;
		hideProgressBar();
	}
	else
	{
		progress_bar_visible = true;
		showProgressBar();
	}
}

/** Function to reset the timer in slide mode.
*/
function slideResetTimer()
{
	timer_start = timer_elapsed;
	updateTimer();
}

/** Convenience function to pad a string with zero in front up to a certain length.
 */
function padString(str, len)
{
	var outStr = str;

	while (outStr.length &lt; len)
	{
		outStr = '0' + outStr;
	}

	return outStr;
}

/** Function to update the export layer.
 */
function slideUpdateExportLayer()
{
	// Suspend redraw since we are going to mess with the slides.
	var suspendHandle = ROOT_NODE.suspendRedraw(2000);

	var tmpActiveSlide = activeSlide;
	var tmpActiveEffect = activeEffect;
	var exportedLayers = new Array();

	for (var counterSlides = 0; counterSlides &lt; slides.length; counterSlides++)
	{
		var exportNode;

		setSlideToState(counterSlides, STATE_START);

		var maxEffect = 0;

		if (slides[counterSlides].effects)
		{
			maxEffect = slides[counterSlides].effects.length;
		}

		exportNode = slides[counterSlides].element.cloneNode(true);
		exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
		exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString(&quot;0&quot;, maxEffect.toString().length));

		exportedLayers.push(exportNode);

		if (slides[counterSlides][&quot;effects&quot;])
		{	
			for (var counter = 0; counter &lt; slides[counterSlides][&quot;effects&quot;].length; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[counterSlides][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[counterSlides][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(parseInt(effect[&quot;dir&quot;]), effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}

				var layerName = &quot;slide_&quot; + padString((counterSlides + 1).toString(), slides.length.toString().length) + &quot;_effect_&quot; + padString((counter + 1).toString(), maxEffect.toString().length);
				exportNode = slides[counterSlides].element.cloneNode(true);
				exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
				exportNode.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, layerName);
				exportNode.setAttribute(&quot;id&quot;, layerName);

				exportedLayers.push(exportNode);
			}
		}
	}

	activeSlide = tmpActiveSlide;
	activeEffect = tmpActiveEffect;
	setSlideToState(activeSlide, activeEffect);

	// Copy image.
	var newDoc = document.documentElement.cloneNode(true);

	// Delete viewbox form new imag and set width and height.
	newDoc.removeAttribute('viewbox');
	newDoc.setAttribute('width', WIDTH);
	newDoc.setAttribute('height', HEIGHT);

	// Delete all layers and script elements.
	var nodesToBeRemoved = new Array();

	for (var childCounter = 0; childCounter &lt;  newDoc.childNodes.length; childCounter++)
	{
		var child = newDoc.childNodes[childCounter];

		if (child.nodeType == 1)
		{
			if ((child.nodeName.toUpperCase() == 'G') || (child.nodeName.toUpperCase() == 'SCRIPT'))
			{
				nodesToBeRemoved.push(child);
			}
		}
	}

	for (var ndCounter = 0; ndCounter &lt; nodesToBeRemoved.length; ndCounter++)
	{
		var nd = nodesToBeRemoved[ndCounter];

		// Before removing the node, check whether it contains any definitions.
		var defs = nd.getElementsByTagNameNS(NSS[&quot;svg&quot;], &quot;defs&quot;);

		for (var defsCounter = 0; defsCounter &lt; defs.length; defsCounter++)
		{
			if (defs[defsCounter].id)
			{
				newDoc.appendChild(defs[defsCounter].cloneNode(true));
			}
		}

		// Remove node.
		nd.parentNode.removeChild(nd);
	}

	// Set current layer.
	if (exportedLayers[0])
	{
		var namedView;

		for (var nodeCounter = 0; nodeCounter &lt; newDoc.childNodes.length; nodeCounter++)
		{
			if ((newDoc.childNodes[nodeCounter].nodeType == 1) &amp;&amp; (newDoc.childNodes[nodeCounter].getAttribute('id') == 'base'))
			{
				namedView = newDoc.childNodes[nodeCounter];
			}
		}

		if (namedView)
		{
			namedView.setAttributeNS(NSS['inkscape'], 'current-layer', exportedLayers[0].getAttributeNS(NSS['inkscape'], 'label'));
		}
	}

	// Add exported layers.
	while (exportedLayers.length &gt; 0)
	{
		var nd = exportedLayers.pop();

		nd.setAttribute(&quot;opacity&quot;,1);
		nd.style.display = &quot;inherit&quot;;

		newDoc.appendChild(nd);
	}

	// Serialise the new document.
	var serializer = new XMLSerializer();
	var strm = 
	{
		content : &quot;&quot;,
		close : function() {},  
		flush : function() {},  
		write : function(str, count) { this.content += str; }  
	};

	var xml = serializer.serializeToStream(newDoc, strm, 'UTF-8');

	window.location = 'data:application/svg+xml;base64;charset=utf-8,' + window.btoa(strm.content);

	// Unsuspend redraw.
	ROOT_NODE.unsuspendRedraw(suspendHandle);
	ROOT_NODE.forceRedraw();
}

/** Function to undo last drawing operation.
*/
function drawingUndo()
{
	mouse_presentation_path = null;
	mouse_original_path = null;

	if (history_presentation_elements.length &gt; 0)
	{
		var p = history_presentation_elements.pop();
		var parent = p.parentNode.removeChild(p);

		p = history_original_elements.pop();
		parent = p.parentNode.removeChild(p);
	}
}

/** Event handler for mouse down in drawing mode.
 *
 *  @param e the event
 */
function drawingMousedown(e)
{
	var value = 0;

	if (e.button)
		value = e.button;
	else if (e.which)
		value = e.which;

	if (value == 1)
	{
		history_counter++;

		var p = calcCoord(e);

		mouse_last_x = e.clientX;
		mouse_last_y = e.clientY;
		mouse_original_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);
		mouse_original_path.setAttribute(&quot;stroke&quot;, path_colour);
		mouse_original_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);
		mouse_original_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);
		mouse_original_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date());
		mouse_original_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);
		slides[activeSlide][&quot;original_element&quot;].appendChild(mouse_original_path);
		history_original_elements.push(mouse_original_path);

		mouse_presentation_path = document.createElementNS(NSS[&quot;svg&quot;], &quot;path&quot;);
		mouse_presentation_path.setAttribute(&quot;stroke&quot;, path_colour);
		mouse_presentation_path.setAttribute(&quot;stroke-width&quot;, path_paint_width);
		mouse_presentation_path.setAttribute(&quot;fill&quot;, &quot;none&quot;);
		mouse_presentation_path.setAttribute(&quot;id&quot;, &quot;path &quot; + Date() + &quot; presentation copy&quot;);
		mouse_presentation_path.setAttribute(&quot;d&quot;, &quot;M&quot; + p.x + &quot;,&quot; + p.y);

		if (slides[activeSlide][&quot;viewGroup&quot;])
			slides[activeSlide][&quot;viewGroup&quot;].appendChild(mouse_presentation_path);
		else
			slides[activeSlide][&quot;element&quot;].appendChild(mouse_presentation_path);

		history_presentation_elements.push(mouse_presentation_path);

		return false;
	}

	return true;
}

/** Event handler for mouse up in drawing mode.
 *
 *  @param e the event
 */
function drawingMouseup(e)
{
	if(!e)
		e = window.event;

	if (mouse_presentation_path != null)
	{
		var p = calcCoord(e);
		var d = mouse_presentation_path.getAttribute(&quot;d&quot;);
		d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;
		mouse_presentation_path.setAttribute(&quot;d&quot;, d);
		mouse_presentation_path = null;
		mouse_original_path.setAttribute(&quot;d&quot;, d);
		mouse_original_path = null;

		return false;
	}

	return true;
}

/** Event handler for mouse move in drawing mode.
 *
 *  @param e the event
 */
function drawingMousemove(e)
{
	if(!e)
		e = window.event;

	var dist = (mouse_last_x - e.clientX) * (mouse_last_x - e.clientX) + (mouse_last_y - e.clientY) * (mouse_last_y - e.clientY);

	if (mouse_presentation_path == null)
	{
		return true;
	}

	if (dist &gt;= mouse_min_dist_sqr)
	{
		var p = calcCoord(e);
		var d = mouse_presentation_path.getAttribute(&quot;d&quot;);
		d += &quot; L&quot; + p.x + &quot;,&quot; + p.y;
		mouse_presentation_path.setAttribute(&quot;d&quot;, d);
		mouse_original_path.setAttribute(&quot;d&quot;, d);
		mouse_last_x = e.clientX;
		mouse_last_y = e.clientY;
	}

	return false;
}

/** Event handler for mouse wheel events in slide mode.
 *  based on http://adomas.org/javascript-mouse-wheel/
 *
 *  @param e the event
 */
function slideMousewheel(e)
{
	var delta = 0;

	if (!e)
		e = window.event;

	if (e.wheelDelta)
	{ // IE Opera
		delta = e.wheelDelta/120;
	}
	else if (e.detail)
	{ // MOZ
		delta = -e.detail/3;
	}

	if (delta &gt; 0)
		skipEffects(-1);
	else if (delta &lt; 0)
		skipEffects(1);

	if (e.preventDefault)
		e.preventDefault();

	e.returnValue = false;
}

/** Event handler for mouse wheel events in index mode.
 *  based on http://adomas.org/javascript-mouse-wheel/
 *
 *  @param e the event
 */
function indexMousewheel(e)
{
	var delta = 0;

	if (!e)
		e = window.event;

	if (e.wheelDelta)
	{ // IE Opera
		delta = e.wheelDelta/120;
	}
	else if (e.detail)
	{ // MOZ
		delta = -e.detail/3;
	}

	if (delta &gt; 0)
		indexSetPageSlide(activeSlide - INDEX_COLUMNS * INDEX_COLUMNS);
	else if (delta &lt; 0)
		indexSetPageSlide(activeSlide + INDEX_COLUMNS * INDEX_COLUMNS);

	if (e.preventDefault)
		e.preventDefault();

	e.returnValue = false;
}

/** Function to set the path paint width.
*/
function set_path_paint_width()
{
	var svgPoint1 = document.documentElement.createSVGPoint();
	var svgPoint2 = document.documentElement.createSVGPoint();

	svgPoint1.x = 0.0;
	svgPoint1.y = 0.0;
	svgPoint2.x = 1.0;
	svgPoint2.y = 0.0;

	var matrix = slides[activeSlide][&quot;element&quot;].getTransformToElement(ROOT_NODE);

	if (slides[activeSlide][&quot;viewGroup&quot;])
		matrix = slides[activeSlide][&quot;viewGroup&quot;].getTransformToElement(ROOT_NODE);

	svgPoint1 = svgPoint1.matrixTransform(matrix);
	svgPoint2 = svgPoint2.matrixTransform(matrix);

	path_paint_width = path_width / Math.sqrt((svgPoint2.x - svgPoint1.x) * (svgPoint2.x - svgPoint1.x) + (svgPoint2.y - svgPoint1.y) * (svgPoint2.y - svgPoint1.y));
}

/** The view effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect); for the view effect the options need to contain the old and the new matrix.
 */
function view(dir, element, time, options)
{
	var length = 250;
	var fraction;

	if (!options[&quot;matrixInitial&quot;])
	{
		var tempString = slides[activeSlide][&quot;viewGroup&quot;].getAttribute(&quot;transform&quot;);

		if (tempString)
			options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromAttribute(tempString);
		else
			options[&quot;matrixInitial&quot;] = (new matrixSVG()).fromSVGElements(1, 0, 0, 1, 0, 0);
	}

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixNew&quot;].toAttribute());

			set_path_paint_width();

			options[&quot;matrixInitial&quot;] = null;
			return true;
		}
		else
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixNew&quot;], fraction).toAttribute());
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].toAttribute());
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixOld&quot;].toAttribute());
			set_path_paint_width();

			options[&quot;matrixInitial&quot;] = null;
			return true;
		}
		else
		{
			element.setAttribute(&quot;transform&quot;, options[&quot;matrixInitial&quot;].mix(options[&quot;matrixOld&quot;], fraction).toAttribute());
		}
	}

	return false;
}

/** The fade effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function fade(dir, element, time, options)
{
	var length = 250;
	var fraction;

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.style.display = &quot;none&quot;;
			element.setAttribute(&quot;opacity&quot;, 0);
		}
		else if (fraction &gt;= 1)
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1);
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, fraction);
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1);
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.style.display = &quot;none&quot;;
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			element.setAttribute(&quot;opacity&quot;, 1 - fraction);
		}
	}
	return false;
}

/** The appear effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function appear(dir, element, time, options)
{
	if (dir == 1)
	{
		element.style.display = &quot;inherit&quot;;
		element.setAttribute(&quot;opacity&quot;,1);
	}
	else if (dir == -1)
	{
		element.style.display = &quot;none&quot;;
		element.setAttribute(&quot;opacity&quot;,0);
	}
	return true;
}

/** The pop effect.
 *
 *  @param dir direction the effect should be played (1 = forwards, -1 = backwards)
 *  @param element the element the effect should be applied to
 *  @param time the time that has elapsed since the beginning of the effect
 *  @param options a dictionary with additional options (e.g. length of the effect)
 */
function pop(dir, element, time, options)
{
	var length = 500;
	var fraction;

	if ((time == STATE_END) || (time == STATE_START))
		fraction = 1;
	else
	{
		if (options &amp;&amp; options[&quot;length&quot;])
			length = options[&quot;length&quot;];

		fraction = time / length;
	}

	if (dir == 1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.setAttribute(&quot;transform&quot;, &quot;scale(0)&quot;);
			element.style.display = &quot;none&quot;;
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 1);
			element.removeAttribute(&quot;transform&quot;);
			element.style.display = &quot;inherit&quot;;
			return true;
		}
		else
		{
			element.style.display = &quot;inherit&quot;;
			var opacityFraction = fraction * 3;
			if (opacityFraction &gt; 1)
				opacityFraction = 1;
			element.setAttribute(&quot;opacity&quot;, opacityFraction);
			var offsetX = WIDTH * (1.0 - fraction) / 2.0;
			var offsetY = HEIGHT * (1.0 - fraction) / 2.0;
			element.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + offsetX + &quot;,&quot; + offsetY + &quot;) scale(&quot; + fraction + &quot;)&quot;);
		}
	}
	else if (dir == -1)
	{
		if (fraction &lt;= 0)
		{
			element.setAttribute(&quot;opacity&quot;, 1);
			element.setAttribute(&quot;transform&quot;, &quot;scale(1)&quot;);
			element.style.display = &quot;inherit&quot;;
		}
		else if (fraction &gt;= 1)
		{
			element.setAttribute(&quot;opacity&quot;, 0);
			element.removeAttribute(&quot;transform&quot;);
			element.style.display = &quot;none&quot;;
			return true;
		}
		else
		{
			element.setAttribute(&quot;opacity&quot;, 1 - fraction);
			element.setAttribute(&quot;transform&quot;, &quot;scale(&quot; + 1 - fraction + &quot;)&quot;);
			element.style.display = &quot;inherit&quot;;
		}
	}
	return false;
}

/** Function to set a slide either to the start or the end state.
 *  
 *  @param slide the slide to use
 *  @param state the state into which the slide should be set
 */
function setSlideToState(slide, state)
{
	slides[slide][&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, slides[slide].initialView);

	if (slides[slide][&quot;effects&quot;])
	{	
		if (state == STATE_END)
		{
			for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}
			}
		}
		else if (state == STATE_START)
		{
			for (var counter = slides[slide][&quot;effects&quot;].length - 1; counter &gt;= 0; counter--)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(parseInt(effect[&quot;dir&quot;]) * -1, effect[&quot;element&quot;], STATE_START, effect[&quot;options&quot;]);	
				}
			}
		}
		else
		{
			setSlideToState(slide, STATE_START);

			for (var counter = 0; counter &lt; slides[slide][&quot;effects&quot;].length &amp;&amp; counter &lt; state; counter++)
			{
				for (var subCounter = 0; subCounter &lt; slides[slide][&quot;effects&quot;][counter].length; subCounter++)
				{
					var effect = slides[slide][&quot;effects&quot;][counter][subCounter];
					if (effect[&quot;effect&quot;] == &quot;fade&quot;)
						fade(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;appear&quot;)
						appear(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;pop&quot;)
						pop(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
					else if (effect[&quot;effect&quot;] == &quot;view&quot;)
						view(effect[&quot;dir&quot;], effect[&quot;element&quot;], STATE_END, effect[&quot;options&quot;]);	
				}
			}
		}
	}

	window.location.hash = (activeSlide + 1) + '_' + activeEffect;
}

/** Convenience function to translate a attribute string into a dictionary.
 *
 *	@param str the attribute string
 *  @return a dictionary
 *  @see dictToPropStr
 */
function propStrToDict(str)
{
	var list = str.split(&quot;;&quot;);
	var obj = new Object();

	for (var counter = 0; counter &lt; list.length; counter++)
	{
		var subStr = list[counter];
		var subList = subStr.split(&quot;:&quot;);
		if (subList.length == 2)
		{
			obj[subList[0]] = subList[1];
		}	
	}

	return obj;
}

/** Convenience function to translate a dictionary into a string that can be used as an attribute.
 *
 *  @param dict the dictionary to convert
 *  @return a string that can be used as an attribute
 *  @see propStrToDict
 */
function dictToPropStr(dict)
{
	var str = &quot;&quot;;

	for (var key in dict)
	{
		str += key + &quot;:&quot; + dict[key] + &quot;;&quot;;
	}

	return str;
}

/** Sub-function to add a suffix to the ids of the node and all its children.
 *	
 *	@param node the node to change
 *	@param suffix the suffix to add
 *	@param replace dictionary of replaced ids
 *  @see suffixNodeIds
 */
function suffixNoneIds_sub(node, suffix, replace)
{
	if (node.nodeType == 1)
	{
		if (node.getAttribute(&quot;id&quot;))
		{
			var id = node.getAttribute(&quot;id&quot;)
				replace[&quot;#&quot; + id] = id + suffix;
			node.setAttribute(&quot;id&quot;, id + suffix);
		}

		if ((node.nodeName == &quot;use&quot;) &amp;&amp; (node.getAttributeNS(NSS[&quot;xlink&quot;], &quot;href&quot;)) &amp;&amp; (replace[node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;)]))
			node.setAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;, node.getAttribute(NSS[&quot;xlink&quot;], &quot;href&quot;) + suffix);

		if (node.childNodes)
		{
			for (var counter = 0; counter &lt; node.childNodes.length; counter++)
				suffixNoneIds_sub(node.childNodes[counter], suffix, replace);
		}
	}
}

/** Function to add a suffix to the ids of the node and all its children.
 *	
 *	@param node the node to change
 *	@param suffix the suffix to add
 *  @return the changed node
 *  @see suffixNodeIds_sub
 */
function suffixNodeIds(node, suffix)
{
	var replace = new Object();

	suffixNoneIds_sub(node, suffix, replace);

	return node;
}

/** Function to build a progress bar.
 *	
 *  @param parent node to attach the progress bar to
 */
function createProgressBar(parent_node)
{
	var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;layer_progress_bar&quot;);
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	var rect_progress_bar = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);
	rect_progress_bar.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(128, 128, 128); stroke: none;&quot;);
	rect_progress_bar.setAttribute(&quot;id&quot;, &quot;rect_progress_bar&quot;);
	rect_progress_bar.setAttribute(&quot;x&quot;, 0);
	rect_progress_bar.setAttribute(&quot;y&quot;, 0.99 * HEIGHT);
	rect_progress_bar.setAttribute(&quot;width&quot;, 0);
	rect_progress_bar.setAttribute(&quot;height&quot;, 0.01 * HEIGHT);
	g.appendChild(rect_progress_bar);

	var circle_timer_indicator = document.createElementNS(NSS[&quot;svg&quot;], &quot;circle&quot;);
	circle_timer_indicator.setAttribute(&quot;style&quot;, &quot;marker: none; fill: rgb(255, 0, 0); stroke: none;&quot;);
	circle_timer_indicator.setAttribute(&quot;id&quot;, &quot;circle_timer_indicator&quot;);
	circle_timer_indicator.setAttribute(&quot;cx&quot;, 0.005 * HEIGHT);
	circle_timer_indicator.setAttribute(&quot;cy&quot;, 0.995 * HEIGHT);
	circle_timer_indicator.setAttribute(&quot;r&quot;, 0.005 * HEIGHT);
	g.appendChild(circle_timer_indicator);

	parent_node.appendChild(g);
}

/** Function to hide the progress bar.
 *	
 */
function hideProgressBar()
{
	var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);

	if (!progress_bar)
	{
		return;
	}

	progress_bar.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
}

/** Function to show the progress bar.
 *	
 */
function showProgressBar()
{
	var progress_bar = document.getElementById(&quot;layer_progress_bar&quot;);

	if (!progress_bar)
	{
		return;
	}

	progress_bar.setAttribute(&quot;style&quot;, &quot;display: inherit;&quot;);
}

/** Set progress bar value.
 *	
 *	@param value the current slide number
 *
 */
function setProgressBarValue(value)
{
	var rect_progress_bar = document.getElementById(&quot;rect_progress_bar&quot;);

	if (!rect_progress_bar)
	{
		return;
	}

	if (value &lt; 1)
	{
		// First slide, assumed to be the title of the presentation
		var x = 0;
		var w = 0.01 * HEIGHT;
	}
	else if (value &gt;= slides.length - 1)
	{
		// Last slide, assumed to be the end of the presentation
		var x = WIDTH - 0.01 * HEIGHT;
		var w = 0.01 * HEIGHT;
	}
	else
	{
		value -= 1;
		value /= (slides.length - 2);

		var x = WIDTH * value;
		var w = WIDTH / (slides.length - 2);
	}

	rect_progress_bar.setAttribute(&quot;x&quot;, x);
	rect_progress_bar.setAttribute(&quot;width&quot;, w);
}

/** Set time indicator.
 *	
 *	@param value the percentage of time elapse so far between 0.0 and 1.0
 *
 */
function setTimeIndicatorValue(value)
{
	var circle_timer_indicator = document.getElementById(&quot;circle_timer_indicator&quot;);

	if (!circle_timer_indicator)
	{
		return;
	}

	if (value &lt; 0.0)
	{
		value = 0.0;
	}

	if (value &gt; 1.0)
	{
		value = 1.0;
	}

	var cx = (WIDTH - 0.01 * HEIGHT) * value + 0.005 * HEIGHT;
	circle_timer_indicator.setAttribute(&quot;cx&quot;, cx);
}

/** Update timer.
 *	
 */
function updateTimer()
{
	timer_elapsed += 1;
	setTimeIndicatorValue((timer_elapsed - timer_start) / (60 * timer_duration));
}

/** Convert screen coordinates to document coordinates.
 *
 *  @param e event with screen coordinates
 *
 *  @return coordinates in SVG file coordinate system	
 */
function calcCoord(e)
{
	var svgPoint = document.documentElement.createSVGPoint();
	svgPoint.x = e.clientX + window.pageXOffset;
	svgPoint.y = e.clientY + window.pageYOffset;

	var matrix = slides[activeSlide][&quot;element&quot;].getScreenCTM();

	if (slides[activeSlide][&quot;viewGroup&quot;])
		matrix = slides[activeSlide][&quot;viewGroup&quot;].getScreenCTM();

	svgPoint = svgPoint.matrixTransform(matrix.inverse());
	return svgPoint;
}

/** Add slide.
 *
 *	@param after_slide after which slide the new slide should be inserted into the presentation
 */
function addSlide(after_slide)
{
	number_of_added_slides++;

	var g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date() + &quot; presentation copy&quot;);
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	var new_slide = new Object();
	new_slide[&quot;element&quot;] = g;

	// Set build in transition.
	new_slide[&quot;transitionIn&quot;] = new Object();
	var dict = defaultTransitionInDict;
	new_slide[&quot;transitionIn&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
	new_slide[&quot;transitionIn&quot;][&quot;options&quot;] = new Object();

	for (key in dict)
		if (key != &quot;name&quot;)
			new_slide[&quot;transitionIn&quot;][&quot;options&quot;][key] = dict[key];

	// Set build out transition.
	new_slide[&quot;transitionOut&quot;] = new Object();
	dict = defaultTransitionOutDict;
	new_slide[&quot;transitionOut&quot;][&quot;name&quot;] = dict[&quot;name&quot;];
	new_slide[&quot;transitionOut&quot;][&quot;options&quot;] = new Object();

	for (key in dict)
		if (key != &quot;name&quot;)
			new_slide[&quot;transitionOut&quot;][&quot;options&quot;][key] = dict[key];

	// Copy master slide content.
	if (masterSlide)
	{
		var clonedNode = suffixNodeIds(masterSlide.cloneNode(true), &quot;_&quot; + Date() + &quot; presentation_copy&quot;);
		clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;);
		clonedNode.removeAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;);
		clonedNode.style.display = &quot;inherit&quot;;

		g.appendChild(clonedNode);
	}

	// Substitute auto texts.
	substituteAutoTexts(g, &quot;Whiteboard &quot; + number_of_added_slides, &quot;W&quot; + number_of_added_slides, slides.length);

	g.setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + (after_slide + 1) + &quot;)) { indexSetActiveSlide(&quot; + (after_slide + 1) + &quot;); };&quot;);

	// Create a transform group.
	var transformGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	// Add content to transform group.
	while (g.firstChild)
		transformGroup.appendChild(g.firstChild);

	// Transfer the transform attribute from the node to the transform group.
	if (g.getAttribute(&quot;transform&quot;))
	{
		transformGroup.setAttribute(&quot;transform&quot;, g.getAttribute(&quot;transform&quot;));
		g.removeAttribute(&quot;transform&quot;);
	}

	// Create a view group.
	var viewGroup = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);

	viewGroup.appendChild(transformGroup);
	new_slide[&quot;viewGroup&quot;] = g.appendChild(viewGroup);

	// Insert background.
	if (BACKGROUND_COLOR != null)
	{
		var rectNode = document.createElementNS(NSS[&quot;svg&quot;], &quot;rect&quot;);

		rectNode.setAttribute(&quot;x&quot;, 0);
		rectNode.setAttribute(&quot;y&quot;, 0);
		rectNode.setAttribute(&quot;width&quot;, WIDTH);
		rectNode.setAttribute(&quot;height&quot;, HEIGHT);
		rectNode.setAttribute(&quot;id&quot;, &quot;jessyInkBackground&quot; + Date());
		rectNode.setAttribute(&quot;fill&quot;, BACKGROUND_COLOR);

		new_slide[&quot;viewGroup&quot;].insertBefore(rectNode, new_slide[&quot;viewGroup&quot;].firstChild);
	}

	// Set initial view even if there are no other views.
	var matrixOld = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);

	new_slide[&quot;viewGroup&quot;].setAttribute(&quot;transform&quot;, matrixOld.toAttribute());
	new_slide.initialView = matrixOld.toAttribute();

	// Insert slide
	var node = slides[after_slide][&quot;element&quot;];
	var next_node = node.nextSibling;
	var parent_node = node.parentNode;

	if (next_node)
	{
		parent_node.insertBefore(g, next_node);
	}
	else
	{
		parent_node.appendChild(g);
	}

	g = document.createElementNS(NSS[&quot;svg&quot;], &quot;g&quot;);
	g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;groupmode&quot;, &quot;layer&quot;);
	g.setAttributeNS(NSS[&quot;inkscape&quot;], &quot;label&quot;, &quot;Whiteboard &quot; + number_of_added_slides);
	g.setAttribute(&quot;clip-path&quot;, &quot;url(#jessyInkSlideClipPath)&quot;);
	g.setAttribute(&quot;id&quot;, &quot;Whiteboard &quot; + Date());
	g.setAttribute(&quot;style&quot;, &quot;display: none;&quot;);

	new_slide[&quot;original_element&quot;] = g;

	node = slides[after_slide][&quot;original_element&quot;];
	next_node = node.nextSibling;
	parent_node = node.parentNode;

	if (next_node)
	{
		parent_node.insertBefore(g, next_node);
	}
	else
	{
		parent_node.appendChild(g);
	}

	before_new_slide = slides.slice(0, after_slide + 1);
	after_new_slide = slides.slice(after_slide + 1);
	slides = before_new_slide.concat(new_slide, after_new_slide);

	//resetting the counter attributes on the slides that follow the new slide...
	for (var counter = after_slide+2; counter &lt; slides.length; counter++)
	{
		slides[counter][&quot;element&quot;].setAttribute(&quot;onmouseover&quot;, &quot;if ((currentMode == INDEX_MODE) &amp;&amp; ( activeSlide != &quot; + counter + &quot;)) { indexSetActiveSlide(&quot; + counter + &quot;); };&quot;);
	}
}

/** Convenience function to obtain a transformation matrix from a point matrix.
 *
 *	@param mPoints Point matrix.
 *	@return A transformation matrix.
 */
function pointMatrixToTransformation(mPoints)
{
	mPointsOld = (new matrixSVG()).fromElements(0, WIDTH, WIDTH, 0, 0, HEIGHT, 1, 1, 1);

	return mPointsOld.mult(mPoints.inv());
}

/** Convenience function to obtain a matrix with three corners of a rectangle.
 *
 *	@param rect an svg rectangle
 *	@return a matrixSVG containing three corners of the rectangle
 */
function rectToMatrix(rect)
{
	rectWidth = rect.getBBox().width;
	rectHeight = rect.getBBox().height;
	rectX = rect.getBBox().x;
	rectY = rect.getBBox().y;
	rectXcorr = 0;
	rectYcorr = 0;

	scaleX = WIDTH / rectWidth;
	scaleY = HEIGHT / rectHeight;

	if (scaleX &gt; scaleY)
	{
		scaleX = scaleY;
		rectXcorr -= (WIDTH / scaleX - rectWidth) / 2;
		rectWidth = WIDTH / scaleX;
	}	
	else
	{
		scaleY = scaleX;
		rectYcorr -= (HEIGHT / scaleY - rectHeight) / 2;
		rectHeight = HEIGHT / scaleY;
	}

	if (rect.transform.baseVal.numberOfItems &lt; 1)
	{
		mRectTrans = (new matrixSVG()).fromElements(1, 0, 0, 0, 1, 0, 0, 0, 1);
	}
	else
	{
		mRectTrans = (new matrixSVG()).fromSVGMatrix(rect.transform.baseVal.consolidate().matrix);
	}

	newBasePoints = (new matrixSVG()).fromElements(rectX, rectX, rectX, rectY, rectY, rectY, 1, 1, 1);
	newVectors = (new matrixSVG()).fromElements(rectXcorr, rectXcorr + rectWidth, rectXcorr + rectWidth, rectYcorr, rectYcorr, rectYcorr + rectHeight, 0, 0, 0);

	return mRectTrans.mult(newBasePoints.add(newVectors));
}

/** Function to handle JessyInk elements.
 *
 *	@param	node	Element node.
 */
function handleElement(node)
{
	if (node.getAttributeNS(NSS['jessyink'], 'element') == 'core.video')
	{
		var url;
		var width;
		var height;
		var x;
		var y;
		var transform;

		var tspans = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;tspan&quot;);

		for (var tspanCounter = 0; tspanCounter &lt; tspans.length; tspanCounter++)
		{
			if (tspans[tspanCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;url&quot;)
			{
				url = tspans[tspanCounter].firstChild.nodeValue;
			}
		}

		var rects = node.getElementsByTagNameNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;rect&quot;);

		for (var rectCounter = 0; rectCounter &lt; rects.length; rectCounter++)
		{
			if (rects[rectCounter].getAttributeNS(&quot;https://launchpad.net/jessyink&quot;, &quot;video&quot;) == &quot;rect&quot;)
			{
				x = rects[rectCounter].getAttribute(&quot;x&quot;);
				y = rects[rectCounter].getAttribute(&quot;y&quot;);
				width = rects[rectCounter].getAttribute(&quot;width&quot;);
				height = rects[rectCounter].getAttribute(&quot;height&quot;);
				transform = rects[rectCounter].getAttribute(&quot;transform&quot;);
			}
		}

		for (var childCounter = 0; childCounter &lt; node.childNodes.length; childCounter++)
		{
			if (node.childNodes[childCounter].nodeType == 1)
			{
				if (node.childNodes[childCounter].style)
				{
					node.childNodes[childCounter].style.display = 'none';
				}
				else
				{
					node.childNodes[childCounter].setAttribute(&quot;style&quot;, &quot;display: none;&quot;);
				}
			}
		}

		var foreignNode = document.createElementNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;foreignObject&quot;);
		foreignNode.setAttribute(&quot;x&quot;, x);
		foreignNode.setAttribute(&quot;y&quot;, y);
		foreignNode.setAttribute(&quot;width&quot;, width);
		foreignNode.setAttribute(&quot;height&quot;, height);
		foreignNode.setAttribute(&quot;transform&quot;, transform);

		var videoNode = document.createElementNS(&quot;http://www.w3.org/1999/xhtml&quot;, &quot;video&quot;);
		videoNode.setAttribute(&quot;src&quot;, url);

		foreignNode.appendChild(videoNode);
		node.appendChild(foreignNode);
	}
}

/** Class processing the location hash.
 *
 *	@param str location hash
 */
function LocationHash(str)
{
	this.slideNumber = 0;
	this.effectNumber = 0;

	str = str.substr(1, str.length - 1);

	var parts = str.split('_');

	// Try to extract slide number.
	if (parts.length &gt;= 1)
	{
		try
		{
			var slideNumber = parseInt(parts[0]);

			if (!isNaN(slideNumber))
			{
				this.slideNumber = slideNumber - 1;
			}
		}
		catch (e)
		{
		}
	}
	
	// Try to extract effect number.
	if (parts.length &gt;= 2)
	{
		try
		{
			var effectNumber = parseInt(parts[1]);

			if (!isNaN(effectNumber))
			{
				this.effectNumber = effectNumber;
			}
		}
		catch (e)
		{
		}
	}
}

/** Class representing an svg matrix.
*/
function matrixSVG()
{
	this.e11 = 0; // a
	this.e12 = 0; // c
	this.e13 = 0; // e
	this.e21 = 0; // b
	this.e22 = 0; // d
	this.e23 = 0; // f
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 0;
}

/** Constructor function.
 *
 *	@param a element a (i.e. 1, 1) as described in the svg standard.
 *	@param b element b (i.e. 2, 1) as described in the svg standard.
 *	@param c element c (i.e. 1, 2) as described in the svg standard.
 *	@param d element d (i.e. 2, 2) as described in the svg standard.
 *	@param e element e (i.e. 1, 3) as described in the svg standard.
 *	@param f element f (i.e. 2, 3) as described in the svg standard.
 */
matrixSVG.prototype.fromSVGElements = function(a, b, c, d, e, f)
{
	this.e11 = a;
	this.e12 = c;
	this.e13 = e;
	this.e21 = b;
	this.e22 = d;
	this.e23 = f;
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 1;

	return this;
}

/** Constructor function.
 *
 *	@param matrix an svg matrix as described in the svg standard.
 */
matrixSVG.prototype.fromSVGMatrix = function(m)
{
	this.e11 = m.a;
	this.e12 = m.c;
	this.e13 = m.e;
	this.e21 = m.b;
	this.e22 = m.d;
	this.e23 = m.f;
	this.e31 = 0;
	this.e32 = 0;
	this.e33 = 1;

	return this;
}

/** Constructor function.
 *
 *	@param e11 element 1, 1 of the matrix.
 *	@param e12 element 1, 2 of the matrix.
 *	@param e13 element 1, 3 of the matrix.
 *	@param e21 element 2, 1 of the matrix.
 *	@param e22 element 2, 2 of the matrix.
 *	@param e23 element 2, 3 of the matrix.
 *	@param e31 element 3, 1 of the matrix.
 *	@param e32 element 3, 2 of the matrix.
 *	@param e33 element 3, 3 of the matrix.
 */
matrixSVG.prototype.fromElements = function(e11, e12, e13, e21, e22, e23, e31, e32, e33)
{
	this.e11 = e11;
	this.e12 = e12;
	this.e13 = e13;
	this.e21 = e21;
	this.e22 = e22;
	this.e23 = e23;
	this.e31 = e31;
	this.e32 = e32;
	this.e33 = e33;

	return this;
}

/** Constructor function.
 *
 *	@param attrString string value of the &quot;transform&quot; attribute (currently only &quot;matrix&quot; is accepted)
 */
matrixSVG.prototype.fromAttribute = function(attrString)
{
	str = attrString.substr(7, attrString.length - 8);

	str = str.trim();

	strArray = str.split(&quot;,&quot;);

	// Opera does not use commas to separate the values of the matrix, only spaces.
	if (strArray.length != 6)
		strArray = str.split(&quot; &quot;);

	this.e11 = parseFloat(strArray[0]);
	this.e21 = parseFloat(strArray[1]);
	this.e31 = 0;
	this.e12 = parseFloat(strArray[2]);
	this.e22 = parseFloat(strArray[3]);
	this.e32 = 0;
	this.e13 = parseFloat(strArray[4]);
	this.e23 = parseFloat(strArray[5]);
	this.e33 = 1;

	return this;
}

/** Output function
 *
 *	@return a string that can be used as the &quot;transform&quot; attribute.
 */
matrixSVG.prototype.toAttribute = function()
{
	return &quot;matrix(&quot; + this.e11 + &quot;, &quot; + this.e21 + &quot;, &quot; + this.e12 + &quot;, &quot; + this.e22 + &quot;, &quot; + this.e13 + &quot;, &quot; + this.e23 + &quot;)&quot;;
}

/** Matrix nversion.
 *
 *	@return the inverse of the matrix
 */
matrixSVG.prototype.inv = function()
{
	out = new matrixSVG();

	det = this.e11 * (this.e33 * this.e22 - this.e32 * this.e23) - this.e21 * (this.e33 * this.e12 - this.e32 * this.e13) + this.e31 * (this.e23 * this.e12 - this.e22 * this.e13);

	out.e11 =  (this.e33 * this.e22 - this.e32 * this.e23) / det;
	out.e12 = -(this.e33 * this.e12 - this.e32 * this.e13) / det;
	out.e13 =  (this.e23 * this.e12 - this.e22 * this.e13) / det;
	out.e21 = -(this.e33 * this.e21 - this.e31 * this.e23) / det;
	out.e22 =  (this.e33 * this.e11 - this.e31 * this.e13) / det;
	out.e23 = -(this.e23 * this.e11 - this.e21 * this.e13) / det;
	out.e31 =  (this.e32 * this.e21 - this.e31 * this.e22) / det;
	out.e32 = -(this.e32 * this.e11 - this.e31 * this.e12) / det;
	out.e33 =  (this.e22 * this.e11 - this.e21 * this.e12) / det;

	return out;
}

/** Matrix multiplication.
 *
 *	@param op another svg matrix
 *	@return this * op
 */
matrixSVG.prototype.mult = function(op)
{
	out = new matrixSVG();

	out.e11 = this.e11 * op.e11 + this.e12 * op.e21 + this.e13 * op.e31;
	out.e12 = this.e11 * op.e12 + this.e12 * op.e22 + this.e13 * op.e32;
	out.e13 = this.e11 * op.e13 + this.e12 * op.e23 + this.e13 * op.e33;
	out.e21 = this.e21 * op.e11 + this.e22 * op.e21 + this.e23 * op.e31;
	out.e22 = this.e21 * op.e12 + this.e22 * op.e22 + this.e23 * op.e32;
	out.e23 = this.e21 * op.e13 + this.e22 * op.e23 + this.e23 * op.e33;
	out.e31 = this.e31 * op.e11 + this.e32 * op.e21 + this.e33 * op.e31;
	out.e32 = this.e31 * op.e12 + this.e32 * op.e22 + this.e33 * op.e32;
	out.e33 = this.e31 * op.e13 + this.e32 * op.e23 + this.e33 * op.e33;

	return out;
}

/** Matrix addition.
 *
 *	@param op another svg matrix
 *	@return this + op
 */
matrixSVG.prototype.add = function(op)
{
	out = new matrixSVG();

	out.e11 = this.e11 + op.e11;
	out.e12 = this.e12 + op.e12;
	out.e13 = this.e13 + op.e13;
	out.e21 = this.e21 + op.e21;
	out.e22 = this.e22 + op.e22;
	out.e23 = this.e23 + op.e23;
	out.e31 = this.e31 + op.e31;
	out.e32 = this.e32 + op.e32;
	out.e33 = this.e33 + op.e33;

	return out;
}

/** Matrix mixing.
 *
 *	@param op another svg matrix
 *	@parma contribOp contribution of the other matrix (0 &lt;= contribOp &lt;= 1)
 *	@return (1 - contribOp) * this + contribOp * op
 */
matrixSVG.prototype.mix = function(op, contribOp)
{
	contribThis = 1.0 - contribOp;
	out = new matrixSVG();

	out.e11 = contribThis * this.e11 + contribOp * op.e11;
	out.e12 = contribThis * this.e12 + contribOp * op.e12;
	out.e13 = contribThis * this.e13 + contribOp * op.e13;
	out.e21 = contribThis * this.e21 + contribOp * op.e21;
	out.e22 = contribThis * this.e22 + contribOp * op.e22;
	out.e23 = contribThis * this.e23 + contribOp * op.e23;
	out.e31 = contribThis * this.e31 + contribOp * op.e31;
	out.e32 = contribThis * this.e32 + contribOp * op.e32;
	out.e33 = contribThis * this.e33 + contribOp * op.e33;

	return out;
}

/** Trimming function for strings.
*/
String.prototype.trim = function()
{
	return this.replace(/^\s+|\s+$/g, '');
}

</script>
</svg>
